[
  {
    "name": "SchedulePaymentResponse.java",
    "path": "service/src/main/java/com/myhome/controllers/response/SchedulePaymentResponse.java",
    "content": {
      "structured": {
        "description": "An immutable response class representing a payment schedule with various attributes, including payment ID, charge amount, and due date. The class uses Lombok packages for automatic generation of getters and setters, and includes fields for payment ID, charge, type, description, recurring, due date, admin ID, and member ID.",
        "items": [
          {
            "id": "f59c057b-e59e-bf86-d444-1e75c8c28f08",
            "ancestors": [],
            "type": "function",
            "description": "represents an immutable response class for a payment schedule with various attributes including payment ID, charge amount, and due date.\nFields:\n\t- paymentId (String): represents a unique identifier for a scheduled payment.\n\t- charge (BigDecimal): represents a monetary value.\n\t- type (String): represents a string value indicating the type of payment being scheduled, such as \"one-time\" or \"recurring\".\n\t- description (String): represents a brief textual explanation of the payment's purpose or context.\n\t- recurring (boolean): in the SchedulePaymentResponse class indicates whether a payment is recurring or not.\n\t- dueDate (String): represents the date on which a payment is due.\n\t- adminId (String): represents an identifier for the administrator who manages the payment schedule.\n\t- memberId (String): in the SchedulePaymentResponse class represents a unique identifier for a specific member within the context of the class.\n\n",
            "fields": [
              {
                "name": "paymentId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "SchedulePaymentResponse",
                "description": "represents a unique identifier for a scheduled payment."
              },
              {
                "name": "charge",
                "type_name": "BigDecimal",
                "value": null,
                "constant": false,
                "class_name": "SchedulePaymentResponse",
                "description": "represents a monetary value."
              },
              {
                "name": "type",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "SchedulePaymentResponse",
                "description": "represents a string value indicating the type of payment being scheduled, such as \"one-time\" or \"recurring\"."
              },
              {
                "name": "description",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "SchedulePaymentResponse",
                "description": "represents a brief textual explanation of the payment's purpose or context."
              },
              {
                "name": "recurring",
                "type_name": "boolean",
                "value": null,
                "constant": false,
                "class_name": "SchedulePaymentResponse",
                "description": "in the SchedulePaymentResponse class indicates whether a payment is recurring or not."
              },
              {
                "name": "dueDate",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "SchedulePaymentResponse",
                "description": "represents the date on which a payment is due."
              },
              {
                "name": "adminId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "SchedulePaymentResponse",
                "description": "represents an identifier for the administrator who manages the payment schedule."
              },
              {
                "name": "memberId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "SchedulePaymentResponse",
                "description": "in the SchedulePaymentResponse class represents a unique identifier for a specific member within the context of the class."
              }
            ],
            "name": "SchedulePaymentResponse",
            "location": {
              "start": 42,
              "insert": 24,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 23,
                "end": 41
              }
            },
            "item_type": "class",
            "length": 13,
            "docLength": 18
          }
        ]
      }
    }
  },
  {
    "name": "Amenity.java",
    "path": "service/src/main/java/com/myhome/domain/Amenity.java",
    "content": {
      "structured": {
        "description": "An `Amenity` class that represents an amenity that can be booked by guests at a community or community house. The class has fields for its unique ID, name, description, price, and relationships to the community and community house. It also has a many-to-one relationship with the `Community` and `CommunityHouse` classes, and a one-to-many relationship with the `AmenityBookingItem` class.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.Amenity Pages: 1 -->\n<svg width=\"187pt\" height=\"137pt\"\n viewBox=\"0.00 0.00 187.00 137.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 133)\">\n<title>com.myhome.domain.Amenity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"173.5,-19 5.5,-19 5.5,0 173.5,0 173.5,-19\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"179,-74 0,-74 0,-55 179,-55 179,-74\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-62\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-44.66C89.5,-35.93 89.5,-25.99 89.5,-19.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-44.75 89.5,-54.75 93,-44.75 86,-44.75\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"126.5,-129 52.5,-129 52.5,-110 126.5,-110 126.5,-129\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-117\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-99.66C89.5,-90.93 89.5,-80.99 89.5,-74.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-99.75 89.5,-109.75 93,-99.75 86,-99.75\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "5f585af0-aa45-f7b6-594a-5a469810c574",
            "ancestors": [],
            "type": "function",
            "description": "represents an amenity that can be booked by guests at a community or community house, with fields for its unique ID, name, description, price, and relationships to the community and community house.\nFields:\n\t- amenityId (String): represents a unique identifier for an amenity within the Amenity entity.\n\t- name (String): represents the name of an amenity.\n\t- description (String): represents a brief summary of an amenity's features or characteristics.\n\t- price (BigDecimal): represents a decimal value indicating the cost of an amenity.\n\t- community (Community): represents a community entity associated with each amenity instance.\n\t- communityHouse (CommunityHouse): represents a reference to a Community House object within an Amenity entity.\n\t- bookingItems (Set<AmenityBookingItem>): is a set of AmenityBookingItem objects associated with each amenity instance.\n\n",
            "fields": [
              {
                "name": "amenityId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Amenity",
                "description": "represents a unique identifier for an amenity within the Amenity entity."
              },
              {
                "name": "name",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Amenity",
                "description": "represents the name of an amenity."
              },
              {
                "name": "description",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Amenity",
                "description": "represents a brief summary of an amenity's features or characteristics."
              },
              {
                "name": "price",
                "type_name": "BigDecimal",
                "value": null,
                "constant": false,
                "class_name": "Amenity",
                "description": "represents a decimal value indicating the cost of an amenity."
              },
              {
                "name": "community",
                "type_name": "Community",
                "value": null,
                "constant": false,
                "class_name": "Amenity",
                "description": "represents a community entity associated with each amenity instance."
              },
              {
                "name": "communityHouse",
                "type_name": "CommunityHouse",
                "value": null,
                "constant": false,
                "class_name": "Amenity",
                "description": "represents a reference to a Community House object within an Amenity entity."
              },
              {
                "name": "bookingItems",
                "type_name": "Set<AmenityBookingItem>",
                "value": "new HashSet<>()",
                "constant": false,
                "class_name": "Amenity",
                "description": "is a set of AmenityBookingItem objects associated with each amenity instance."
              }
            ],
            "name": "Amenity",
            "location": {
              "start": 56,
              "insert": 37,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 36,
                "end": 55
              }
            },
            "item_type": "class",
            "length": 38,
            "docLength": 19
          }
        ]
      }
    }
  },
  {
    "name": "AmenityBookingItem.java",
    "path": "service/src/main/java/com/myhome/domain/AmenityBookingItem.java",
    "content": {
      "structured": {
        "description": "An entity called `AmenityBookingItem` representing a booking item for an amenity. The entity has fields for the unique identifier of the booking item, the amenity being booked, the booking start and end dates, and the user who made the booking. Additionally, the code includes annotations for data retrieval and validation, as well as the use of Lombok to simplify the creation of getters, setters, and equals/hashCode methods.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.AmenityBookingItem Pages: 1 -->\n<svg width=\"187pt\" height=\"148pt\"\n viewBox=\"0.00 0.00 187.00 148.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 144)\">\n<title>com.myhome.domain.AmenityBookingItem</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"173.5,-30 5.5,-30 5.5,0 173.5,0 173.5,-30\"/>\n<text text-anchor=\"start\" x=\"13.5\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"179,-85 0,-85 0,-66 179,-66 179,-85\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-55.65C89.5,-47.36 89.5,-37.78 89.5,-30.11\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-55.87 89.5,-65.87 93,-55.87 86,-55.87\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"126.5,-140 52.5,-140 52.5,-121 126.5,-121 126.5,-140\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-128\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-110.66C89.5,-101.93 89.5,-91.99 89.5,-85.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-110.75 89.5,-120.75 93,-110.75 86,-110.75\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "e9570a3c-85fa-5ea9-9e40-665eb9eee939",
            "ancestors": [],
            "type": "function",
            "description": "represents a booking item for an amenity in a database, including the amenity ID, booking start and end dates, and the user who made the booking.\nFields:\n\t- amenityBookingItemId (String): in the AmenityBookingItem entity represents a unique identifier for each booking item in the database.\n\t- amenity (Amenity): represents an amenity that has been booked for a specific period of time by a particular user.\n\t- bookingStartDate (LocalDateTime): represents the date and time at which a booking for an amenity starts.\n\t- bookingEndDate (LocalDateTime): represents the end time of a booking for an amenity.\n\t- bookingUser (User): represents the user who made the booking for an amenity listed in the AmenityBookingItem entity.\n\n",
            "fields": [
              {
                "name": "amenityBookingItemId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "AmenityBookingItem",
                "description": "in the AmenityBookingItem entity represents a unique identifier for each booking item in the database."
              },
              {
                "name": "amenity",
                "type_name": "Amenity",
                "value": null,
                "constant": false,
                "class_name": "AmenityBookingItem",
                "description": "represents an amenity that has been booked for a specific period of time by a particular user."
              },
              {
                "name": "bookingStartDate",
                "type_name": "LocalDateTime",
                "value": null,
                "constant": false,
                "class_name": "AmenityBookingItem",
                "description": "represents the date and time at which a booking for an amenity starts."
              },
              {
                "name": "bookingEndDate",
                "type_name": "LocalDateTime",
                "value": null,
                "constant": false,
                "class_name": "AmenityBookingItem",
                "description": "represents the end time of a booking for an amenity."
              },
              {
                "name": "bookingUser",
                "type_name": "User",
                "value": null,
                "constant": false,
                "class_name": "AmenityBookingItem",
                "description": "represents the user who made the booking for an amenity listed in the AmenityBookingItem entity."
              }
            ],
            "name": "AmenityBookingItem",
            "location": {
              "start": 38,
              "insert": 24,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 23,
                "end": 37
              }
            },
            "item_type": "class",
            "length": 33,
            "docLength": 14
          }
        ]
      }
    }
  },
  {
    "name": "AuthenticationData.java",
    "path": "service/src/main/java/com/myhome/domain/AuthenticationData.java",
    "content": {
      "structured": {
        "description": "A class `AuthenticationData` that represents a data structure for storing JWT token and user ID for authentication purposes. The class has two fields: `jwtToken` and `userId`, both of which are immutable and have getter methods provided by Lombok.",
        "items": [
          {
            "id": "a76a1086-e631-be87-9e4e-adacb9e8bf64",
            "ancestors": [],
            "type": "function",
            "description": "represents a data structure for storing JWT token and user ID for authentication purposes.\nFields:\n\t- jwtToken (String): in the AuthenticationData class represents a unique identifier for a user's authentication credentials.\n\t- userId (String): in the AuthenticationData class represents a unique identifier for a user.\n\n",
            "fields": [
              {
                "name": "jwtToken",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "AuthenticationData",
                "description": "in the AuthenticationData class represents a unique identifier for a user's authentication credentials."
              },
              {
                "name": "userId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "AuthenticationData",
                "description": "in the AuthenticationData class represents a unique identifier for a user."
              }
            ],
            "name": "AuthenticationData",
            "location": {
              "start": 14,
              "insert": 6,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 5,
                "end": 13
              }
            },
            "item_type": "class",
            "length": 6,
            "docLength": 8
          }
        ]
      }
    }
  },
  {
    "name": "BaseEntity.java",
    "path": "service/src/main/java/com/myhome/domain/BaseEntity.java",
    "content": {
      "structured": {
        "description": "A base class for JPA entities, providing a unique identifier through an @Id field annotated with @GeneratedValue(strategy = GenerationType.IDENTITY). The class also includes fields for other attributes and implements Serializable.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.BaseEntity Pages: 1 -->\n<svg width=\"531pt\" height=\"371pt\"\n viewBox=\"0.00 0.00 531.00 371.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 367)\">\n<title>com.myhome.domain.BaseEntity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"289,-191 110,-191 110,-172 289,-172 289,-191\"/>\n<text text-anchor=\"middle\" x=\"199.5\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Amenity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-363 340,-363 340,-344 508,-344 508,-363\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-351\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node3 -->\n<g id=\"edge2_Node000001_Node000003\" class=\"edge\">\n<title>Node1&#45;&gt;Node3</title>\n<g id=\"a_edge2_Node000001_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-200.41C227.9,-233.41 269.35,-301.17 325,-334.5 331.47,-338.37 338.57,-341.48 345.9,-343.97\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"213.09,-198.58 205.34,-191.36 206.89,-201.84 213.09,-198.58\"/>\n</a>\n</g>\n</g>\n<!-- Node4 -->\n<g id=\"Node000004\" class=\"node\">\n<title>Node4</title>\n<g id=\"a_Node000004\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1AmenityBookingItem.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-325.5 340,-325.5 340,-295.5 508,-295.5 508,-325.5\"/>\n<text text-anchor=\"start\" x=\"348\" y=\"-313.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-302.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node4 -->\n<g id=\"edge3_Node000001_Node000004\" class=\"edge\">\n<title>Node1&#45;&gt;Node4</title>\n<g id=\"a_edge3_Node000001_Node000004\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-198.45C237.46,-221.83 280.13,-263.69 325,-286.5 331.79,-289.95 339.11,-292.93 346.57,-295.48\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"218.15,-196.01 208.81,-191.01 212.99,-200.74 218.15,-196.01\"/>\n</a>\n</g>\n</g>\n<!-- Node5 -->\n<g id=\"Node000005\" class=\"node\">\n<title>Node5</title>\n<g id=\"a_Node000005\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Community.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-277 332,-277 332,-258 516,-258 516,-277\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-265\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node5 -->\n<g id=\"edge4_Node000001_Node000005\" class=\"edge\">\n<title>Node1&#45;&gt;Node5</title>\n<g id=\"a_edge4_Node000001_Node000005\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-196.49C247.51,-211.78 287.48,-235.12 325,-248.5 335.77,-252.34 347.51,-255.47 358.99,-257.99\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"225.09,-193.5 214.78,-191.06 221.31,-199.4 225.09,-193.5\"/>\n</a>\n</g>\n</g>\n<!-- Node6 -->\n<g id=\"Node000006\" class=\"node\">\n<title>Node6</title>\n<g id=\"a_Node000006\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1CommunityHouse.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-239.5 332,-239.5 332,-209.5 516,-209.5 516,-239.5\"/>\n<text text-anchor=\"start\" x=\"340\" y=\"-227.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-216.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node6 -->\n<g id=\"edge5_Node000001_Node000006\" class=\"edge\">\n<title>Node1&#45;&gt;Node6</title>\n<g id=\"a_edge5_Node000001_Node000006\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-193.01C286.24,-198.07 317.36,-204.08 345.35,-209.49\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"260.36,-189.5 249.88,-191.04 259.03,-196.38 260.36,-189.5\"/>\n</a>\n</g>\n</g>\n<!-- Node7 -->\n<g id=\"Node000007\" class=\"node\">\n<title>Node7</title>\n<g id=\"a_Node000007\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMember.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-191 325,-191 325,-172 523,-172 523,-191\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node7 -->\n<g id=\"edge6_Node000001_Node000007\" class=\"edge\">\n<title>Node1&#45;&gt;Node7</title>\n<g id=\"a_edge6_Node000001_Node000007\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M299.35,-181.5C307.82,-181.5 316.38,-181.5 324.85,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"299.08,-178 289.08,-181.5 299.08,-185 299.08,-178\"/>\n</a>\n</g>\n</g>\n<!-- Node8 -->\n<g id=\"Node000008\" class=\"node\">\n<title>Node8</title>\n<g id=\"a_Node000008\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMemberDocument.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-153.5 325,-153.5 325,-123.5 523,-123.5 523,-153.5\"/>\n<text text-anchor=\"start\" x=\"333\" y=\"-141.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-130.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node8 -->\n<g id=\"edge7_Node000001_Node000008\" class=\"edge\">\n<title>Node1&#45;&gt;Node8</title>\n<g id=\"a_edge7_Node000001_Node000008\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-169.99C286.24,-164.93 317.36,-158.92 345.35,-153.51\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"259.03,-166.62 249.88,-171.96 260.36,-173.5 259.03,-166.62\"/>\n</a>\n</g>\n</g>\n<!-- Node9 -->\n<g id=\"Node000009\" class=\"node\">\n<title>Node9</title>\n<g id=\"a_Node000009\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Payment.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"509,-105 339,-105 339,-86 509,-86 509,-105\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-93\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Payment</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node9 -->\n<g id=\"edge8_Node000001_Node000009\" class=\"edge\">\n<title>Node1&#45;&gt;Node9</title>\n<g id=\"a_edge8_Node000001_Node000009\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-166.51C247.51,-151.22 287.48,-127.88 325,-114.5 335.77,-110.66 347.51,-107.53 358.99,-105.01\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"221.31,-163.6 214.78,-171.94 225.09,-169.5 221.31,-163.6\"/>\n</a>\n</g>\n</g>\n<!-- Node10 -->\n<g id=\"Node000010\" class=\"node\">\n<title>Node10</title>\n<g id=\"a_Node000010\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1SecurityToken.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"507.5,-67.5 340.5,-67.5 340.5,-37.5 507.5,-37.5 507.5,-67.5\"/>\n<text text-anchor=\"start\" x=\"348.5\" y=\"-55.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-44.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node10 -->\n<g id=\"edge9_Node000001_Node000010\" class=\"edge\">\n<title>Node1&#45;&gt;Node10</title>\n<g id=\"a_edge9_Node000001_Node000010\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-164.55C237.46,-141.17 280.13,-99.31 325,-76.5 331.79,-73.05 339.11,-70.07 346.57,-67.52\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"212.99,-162.26 208.81,-171.99 218.15,-166.99 212.99,-162.26\"/>\n</a>\n</g>\n</g>\n<!-- Node11 -->\n<g id=\"Node000011\" class=\"node\">\n<title>Node11</title>\n<g id=\"a_Node000011\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1User.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"498.5,-19 349.5,-19 349.5,0 498.5,0 498.5,-19\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node11 -->\n<g id=\"edge10_Node000001_Node000011\" class=\"edge\">\n<title>Node1&#45;&gt;Node11</title>\n<g id=\"a_edge10_Node000001_Node000011\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-162.59C227.9,-129.59 269.35,-61.83 325,-28.5 332.51,-24 340.87,-20.54 349.45,-17.88\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"206.89,-161.16 205.34,-171.64 213.09,-164.42 206.89,-161.16\"/>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"74,-191 0,-191 0,-172 74,-172 74,-191\"/>\n<text text-anchor=\"middle\" x=\"37\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M84.03,-181.5C92.2,-181.5 100.96,-181.5 109.86,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.02,-178 74.02,-181.5 84.02,-185 84.02,-178\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "20cf6e17-6a6d-2ea6-de4d-aa85bda5ff76",
            "ancestors": [],
            "type": "function",
            "description": "serves as a base class for JPA entities with an automatically generated unique identifier (id) field.\nFields:\n\t- id (Long): in BaseEntity represents a unique identifier for each entity instance.\n\n",
            "fields": [
              {
                "name": "id",
                "type_name": "Long",
                "value": null,
                "constant": false,
                "class_name": "BaseEntity",
                "description": "in BaseEntity represents a unique identifier for each entity instance."
              }
            ],
            "name": "BaseEntity",
            "location": {
              "start": 39,
              "insert": 32,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 31,
                "end": 38
              }
            },
            "item_type": "class",
            "length": 10,
            "docLength": 7
          }
        ]
      }
    }
  },
  {
    "name": "Community.java",
    "path": "service/src/main/java/com/myhome/domain/Community.java",
    "content": {
      "structured": {
        "description": "An entity called `Community` that represents a valid user in a service. It has various associations with other entities, including users, houses, and amenities. The `Community` entity has fields for admins, houses, name, communityId, district, and amenities, which are mapped to corresponding entities through `@ManyToMany`, `@OneToMany`, and `@NamedAttributeNode` annotations. Additionally, the code defines named entity graphs for these associations using the `@NamedEntityGraphs` annotation.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.BaseEntity Pages: 1 -->\n<svg width=\"531pt\" height=\"371pt\"\n viewBox=\"0.00 0.00 531.00 371.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 367)\">\n<title>com.myhome.domain.BaseEntity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"289,-191 110,-191 110,-172 289,-172 289,-191\"/>\n<text text-anchor=\"middle\" x=\"199.5\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Amenity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-363 340,-363 340,-344 508,-344 508,-363\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-351\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node3 -->\n<g id=\"edge2_Node000001_Node000003\" class=\"edge\">\n<title>Node1&#45;&gt;Node3</title>\n<g id=\"a_edge2_Node000001_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-200.41C227.9,-233.41 269.35,-301.17 325,-334.5 331.47,-338.37 338.57,-341.48 345.9,-343.97\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"213.09,-198.58 205.34,-191.36 206.89,-201.84 213.09,-198.58\"/>\n</a>\n</g>\n</g>\n<!-- Node4 -->\n<g id=\"Node000004\" class=\"node\">\n<title>Node4</title>\n<g id=\"a_Node000004\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1AmenityBookingItem.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-325.5 340,-325.5 340,-295.5 508,-295.5 508,-325.5\"/>\n<text text-anchor=\"start\" x=\"348\" y=\"-313.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-302.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node4 -->\n<g id=\"edge3_Node000001_Node000004\" class=\"edge\">\n<title>Node1&#45;&gt;Node4</title>\n<g id=\"a_edge3_Node000001_Node000004\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-198.45C237.46,-221.83 280.13,-263.69 325,-286.5 331.79,-289.95 339.11,-292.93 346.57,-295.48\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"218.15,-196.01 208.81,-191.01 212.99,-200.74 218.15,-196.01\"/>\n</a>\n</g>\n</g>\n<!-- Node5 -->\n<g id=\"Node000005\" class=\"node\">\n<title>Node5</title>\n<g id=\"a_Node000005\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Community.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-277 332,-277 332,-258 516,-258 516,-277\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-265\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node5 -->\n<g id=\"edge4_Node000001_Node000005\" class=\"edge\">\n<title>Node1&#45;&gt;Node5</title>\n<g id=\"a_edge4_Node000001_Node000005\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-196.49C247.51,-211.78 287.48,-235.12 325,-248.5 335.77,-252.34 347.51,-255.47 358.99,-257.99\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"225.09,-193.5 214.78,-191.06 221.31,-199.4 225.09,-193.5\"/>\n</a>\n</g>\n</g>\n<!-- Node6 -->\n<g id=\"Node000006\" class=\"node\">\n<title>Node6</title>\n<g id=\"a_Node000006\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1CommunityHouse.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-239.5 332,-239.5 332,-209.5 516,-209.5 516,-239.5\"/>\n<text text-anchor=\"start\" x=\"340\" y=\"-227.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-216.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node6 -->\n<g id=\"edge5_Node000001_Node000006\" class=\"edge\">\n<title>Node1&#45;&gt;Node6</title>\n<g id=\"a_edge5_Node000001_Node000006\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-193.01C286.24,-198.07 317.36,-204.08 345.35,-209.49\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"260.36,-189.5 249.88,-191.04 259.03,-196.38 260.36,-189.5\"/>\n</a>\n</g>\n</g>\n<!-- Node7 -->\n<g id=\"Node000007\" class=\"node\">\n<title>Node7</title>\n<g id=\"a_Node000007\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMember.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-191 325,-191 325,-172 523,-172 523,-191\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node7 -->\n<g id=\"edge6_Node000001_Node000007\" class=\"edge\">\n<title>Node1&#45;&gt;Node7</title>\n<g id=\"a_edge6_Node000001_Node000007\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M299.35,-181.5C307.82,-181.5 316.38,-181.5 324.85,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"299.08,-178 289.08,-181.5 299.08,-185 299.08,-178\"/>\n</a>\n</g>\n</g>\n<!-- Node8 -->\n<g id=\"Node000008\" class=\"node\">\n<title>Node8</title>\n<g id=\"a_Node000008\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMemberDocument.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-153.5 325,-153.5 325,-123.5 523,-123.5 523,-153.5\"/>\n<text text-anchor=\"start\" x=\"333\" y=\"-141.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-130.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node8 -->\n<g id=\"edge7_Node000001_Node000008\" class=\"edge\">\n<title>Node1&#45;&gt;Node8</title>\n<g id=\"a_edge7_Node000001_Node000008\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-169.99C286.24,-164.93 317.36,-158.92 345.35,-153.51\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"259.03,-166.62 249.88,-171.96 260.36,-173.5 259.03,-166.62\"/>\n</a>\n</g>\n</g>\n<!-- Node9 -->\n<g id=\"Node000009\" class=\"node\">\n<title>Node9</title>\n<g id=\"a_Node000009\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Payment.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"509,-105 339,-105 339,-86 509,-86 509,-105\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-93\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Payment</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node9 -->\n<g id=\"edge8_Node000001_Node000009\" class=\"edge\">\n<title>Node1&#45;&gt;Node9</title>\n<g id=\"a_edge8_Node000001_Node000009\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-166.51C247.51,-151.22 287.48,-127.88 325,-114.5 335.77,-110.66 347.51,-107.53 358.99,-105.01\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"221.31,-163.6 214.78,-171.94 225.09,-169.5 221.31,-163.6\"/>\n</a>\n</g>\n</g>\n<!-- Node10 -->\n<g id=\"Node000010\" class=\"node\">\n<title>Node10</title>\n<g id=\"a_Node000010\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1SecurityToken.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"507.5,-67.5 340.5,-67.5 340.5,-37.5 507.5,-37.5 507.5,-67.5\"/>\n<text text-anchor=\"start\" x=\"348.5\" y=\"-55.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-44.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node10 -->\n<g id=\"edge9_Node000001_Node000010\" class=\"edge\">\n<title>Node1&#45;&gt;Node10</title>\n<g id=\"a_edge9_Node000001_Node000010\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-164.55C237.46,-141.17 280.13,-99.31 325,-76.5 331.79,-73.05 339.11,-70.07 346.57,-67.52\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"212.99,-162.26 208.81,-171.99 218.15,-166.99 212.99,-162.26\"/>\n</a>\n</g>\n</g>\n<!-- Node11 -->\n<g id=\"Node000011\" class=\"node\">\n<title>Node11</title>\n<g id=\"a_Node000011\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1User.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"498.5,-19 349.5,-19 349.5,0 498.5,0 498.5,-19\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node11 -->\n<g id=\"edge10_Node000001_Node000011\" class=\"edge\">\n<title>Node1&#45;&gt;Node11</title>\n<g id=\"a_edge10_Node000001_Node000011\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-162.59C227.9,-129.59 269.35,-61.83 325,-28.5 332.51,-24 340.87,-20.54 349.45,-17.88\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"206.89,-161.16 205.34,-171.64 213.09,-164.42 206.89,-161.16\"/>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"74,-191 0,-191 0,-172 74,-172 74,-191\"/>\n<text text-anchor=\"middle\" x=\"37\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M84.03,-181.5C92.2,-181.5 100.96,-181.5 109.86,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.02,-178 74.02,-181.5 84.02,-185 84.02,-178\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "452b5949-1848-f6ad-524f-d2e761c72051",
            "ancestors": [],
            "type": "function",
            "description": "represents a valid user in the service with various associations to other entities, including users, houses, and amenities.\nFields:\n\t- admins (Set<User>): is a set of user objects related to the community through their association with the community as admins, as defined in the Java code provided.\n\t- houses (Set<CommunityHouse>): in the Community class represents a set of House objects related to the community through their association with the community as houses.\n\t- name (String): in the Community entity represents a unique identifier for a community within a specific district.\n\t- communityId (String): represents a unique identifier for a specific community within the application's domain.\n\t- district (String): in the Community entity represents a geographical area where the community is located.\n\t- amenities (Set<Amenity>): in the Community class represents a set of Amenity objects related to the community through the mappedBy attribute in the OneToMany annotation.\n\n",
            "fields": [
              {
                "name": "admins",
                "type_name": "Set<User>",
                "value": "new HashSet<>()",
                "constant": false,
                "class_name": "Community",
                "description": "is a set of user objects related to the community through their association with the community as admins, as defined in the Java code provided."
              },
              {
                "name": "houses",
                "type_name": "Set<CommunityHouse>",
                "value": "new HashSet<>()",
                "constant": false,
                "class_name": "Community",
                "description": "in the Community class represents a set of House objects related to the community through their association with the community as houses."
              },
              {
                "name": "name",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Community",
                "description": "in the Community entity represents a unique identifier for a community within a specific district."
              },
              {
                "name": "communityId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Community",
                "description": "represents a unique identifier for a specific community within the application's domain."
              },
              {
                "name": "district",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Community",
                "description": "in the Community entity represents a geographical area where the community is located."
              },
              {
                "name": "amenities",
                "type_name": "Set<Amenity>",
                "value": "new HashSet<>()",
                "constant": false,
                "class_name": "Community",
                "description": "in the Community class represents a set of Amenity objects related to the community through the mappedBy attribute in the OneToMany annotation."
              }
            ],
            "name": "Community",
            "location": {
              "start": 58,
              "insert": 39,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 38,
                "end": 57
              }
            },
            "item_type": "class",
            "length": 43,
            "docLength": 19
          }
        ]
      }
    }
  },
  {
    "name": "CommunityHouse.java",
    "path": "service/src/main/java/com/myhome/domain/CommunityHouse.java",
    "content": {
      "structured": {
        "description": "An entity called CommunityHouse, which represents a house within a community. The entity has fields for the house ID, name, and community, as well as relationships with HouseMembers and Amenities. The code also defines named entity graphs for these relationships, allowing for efficient querying and manipulation of the data.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.BaseEntity Pages: 1 -->\n<svg width=\"531pt\" height=\"371pt\"\n viewBox=\"0.00 0.00 531.00 371.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 367)\">\n<title>com.myhome.domain.BaseEntity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"289,-191 110,-191 110,-172 289,-172 289,-191\"/>\n<text text-anchor=\"middle\" x=\"199.5\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Amenity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-363 340,-363 340,-344 508,-344 508,-363\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-351\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node3 -->\n<g id=\"edge2_Node000001_Node000003\" class=\"edge\">\n<title>Node1&#45;&gt;Node3</title>\n<g id=\"a_edge2_Node000001_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-200.41C227.9,-233.41 269.35,-301.17 325,-334.5 331.47,-338.37 338.57,-341.48 345.9,-343.97\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"213.09,-198.58 205.34,-191.36 206.89,-201.84 213.09,-198.58\"/>\n</a>\n</g>\n</g>\n<!-- Node4 -->\n<g id=\"Node000004\" class=\"node\">\n<title>Node4</title>\n<g id=\"a_Node000004\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1AmenityBookingItem.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-325.5 340,-325.5 340,-295.5 508,-295.5 508,-325.5\"/>\n<text text-anchor=\"start\" x=\"348\" y=\"-313.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-302.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node4 -->\n<g id=\"edge3_Node000001_Node000004\" class=\"edge\">\n<title>Node1&#45;&gt;Node4</title>\n<g id=\"a_edge3_Node000001_Node000004\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-198.45C237.46,-221.83 280.13,-263.69 325,-286.5 331.79,-289.95 339.11,-292.93 346.57,-295.48\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"218.15,-196.01 208.81,-191.01 212.99,-200.74 218.15,-196.01\"/>\n</a>\n</g>\n</g>\n<!-- Node5 -->\n<g id=\"Node000005\" class=\"node\">\n<title>Node5</title>\n<g id=\"a_Node000005\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Community.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-277 332,-277 332,-258 516,-258 516,-277\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-265\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node5 -->\n<g id=\"edge4_Node000001_Node000005\" class=\"edge\">\n<title>Node1&#45;&gt;Node5</title>\n<g id=\"a_edge4_Node000001_Node000005\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-196.49C247.51,-211.78 287.48,-235.12 325,-248.5 335.77,-252.34 347.51,-255.47 358.99,-257.99\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"225.09,-193.5 214.78,-191.06 221.31,-199.4 225.09,-193.5\"/>\n</a>\n</g>\n</g>\n<!-- Node6 -->\n<g id=\"Node000006\" class=\"node\">\n<title>Node6</title>\n<g id=\"a_Node000006\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1CommunityHouse.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-239.5 332,-239.5 332,-209.5 516,-209.5 516,-239.5\"/>\n<text text-anchor=\"start\" x=\"340\" y=\"-227.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-216.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node6 -->\n<g id=\"edge5_Node000001_Node000006\" class=\"edge\">\n<title>Node1&#45;&gt;Node6</title>\n<g id=\"a_edge5_Node000001_Node000006\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-193.01C286.24,-198.07 317.36,-204.08 345.35,-209.49\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"260.36,-189.5 249.88,-191.04 259.03,-196.38 260.36,-189.5\"/>\n</a>\n</g>\n</g>\n<!-- Node7 -->\n<g id=\"Node000007\" class=\"node\">\n<title>Node7</title>\n<g id=\"a_Node000007\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMember.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-191 325,-191 325,-172 523,-172 523,-191\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node7 -->\n<g id=\"edge6_Node000001_Node000007\" class=\"edge\">\n<title>Node1&#45;&gt;Node7</title>\n<g id=\"a_edge6_Node000001_Node000007\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M299.35,-181.5C307.82,-181.5 316.38,-181.5 324.85,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"299.08,-178 289.08,-181.5 299.08,-185 299.08,-178\"/>\n</a>\n</g>\n</g>\n<!-- Node8 -->\n<g id=\"Node000008\" class=\"node\">\n<title>Node8</title>\n<g id=\"a_Node000008\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMemberDocument.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-153.5 325,-153.5 325,-123.5 523,-123.5 523,-153.5\"/>\n<text text-anchor=\"start\" x=\"333\" y=\"-141.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-130.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node8 -->\n<g id=\"edge7_Node000001_Node000008\" class=\"edge\">\n<title>Node1&#45;&gt;Node8</title>\n<g id=\"a_edge7_Node000001_Node000008\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-169.99C286.24,-164.93 317.36,-158.92 345.35,-153.51\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"259.03,-166.62 249.88,-171.96 260.36,-173.5 259.03,-166.62\"/>\n</a>\n</g>\n</g>\n<!-- Node9 -->\n<g id=\"Node000009\" class=\"node\">\n<title>Node9</title>\n<g id=\"a_Node000009\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Payment.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"509,-105 339,-105 339,-86 509,-86 509,-105\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-93\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Payment</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node9 -->\n<g id=\"edge8_Node000001_Node000009\" class=\"edge\">\n<title>Node1&#45;&gt;Node9</title>\n<g id=\"a_edge8_Node000001_Node000009\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-166.51C247.51,-151.22 287.48,-127.88 325,-114.5 335.77,-110.66 347.51,-107.53 358.99,-105.01\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"221.31,-163.6 214.78,-171.94 225.09,-169.5 221.31,-163.6\"/>\n</a>\n</g>\n</g>\n<!-- Node10 -->\n<g id=\"Node000010\" class=\"node\">\n<title>Node10</title>\n<g id=\"a_Node000010\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1SecurityToken.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"507.5,-67.5 340.5,-67.5 340.5,-37.5 507.5,-37.5 507.5,-67.5\"/>\n<text text-anchor=\"start\" x=\"348.5\" y=\"-55.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-44.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node10 -->\n<g id=\"edge9_Node000001_Node000010\" class=\"edge\">\n<title>Node1&#45;&gt;Node10</title>\n<g id=\"a_edge9_Node000001_Node000010\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-164.55C237.46,-141.17 280.13,-99.31 325,-76.5 331.79,-73.05 339.11,-70.07 346.57,-67.52\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"212.99,-162.26 208.81,-171.99 218.15,-166.99 212.99,-162.26\"/>\n</a>\n</g>\n</g>\n<!-- Node11 -->\n<g id=\"Node000011\" class=\"node\">\n<title>Node11</title>\n<g id=\"a_Node000011\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1User.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"498.5,-19 349.5,-19 349.5,0 498.5,0 498.5,-19\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node11 -->\n<g id=\"edge10_Node000001_Node000011\" class=\"edge\">\n<title>Node1&#45;&gt;Node11</title>\n<g id=\"a_edge10_Node000001_Node000011\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-162.59C227.9,-129.59 269.35,-61.83 325,-28.5 332.51,-24 340.87,-20.54 349.45,-17.88\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"206.89,-161.16 205.34,-171.64 213.09,-164.42 206.89,-161.16\"/>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"74,-191 0,-191 0,-172 74,-172 74,-191\"/>\n<text text-anchor=\"middle\" x=\"37\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M84.03,-181.5C92.2,-181.5 100.96,-181.5 109.86,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.02,-178 74.02,-181.5 84.02,-185 84.02,-178\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "409a9722-52f9-0294-7646-93500938966c",
            "ancestors": [],
            "type": "function",
            "description": "represents a house within a community and contains relationships with HouseMembers and Amenities.\nFields:\n\t- community (Community): in the CommunityHouse class represents an association between a CommunityHouse entity and a single Community instance.\n\t- name (String): in the CommunityHouse class represents a unique identifier for a specific community house within a community.\n\t- houseId (String): represents a unique identifier for each CommunityHouse instance in the system.\n\t- houseMembers (Set<HouseMember>): in the CommunityHouse class represents a set of objects that are related to a particular community house through a many-to-one relationship with the HouseMember entity.\n\t- amenities (Set<Amenity>): in the CommunityHouse class contains a set of Amenity objects related to the house.\n\n",
            "fields": [
              {
                "name": "community",
                "type_name": "Community",
                "value": null,
                "constant": false,
                "class_name": "CommunityHouse",
                "description": "in the CommunityHouse class represents an association between a CommunityHouse entity and a single Community instance."
              },
              {
                "name": "name",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "CommunityHouse",
                "description": "in the CommunityHouse class represents a unique identifier for a specific community house within a community."
              },
              {
                "name": "houseId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "CommunityHouse",
                "description": "represents a unique identifier for each CommunityHouse instance in the system."
              },
              {
                "name": "houseMembers",
                "type_name": "Set<HouseMember>",
                "value": "new HashSet<>()",
                "constant": false,
                "class_name": "CommunityHouse",
                "description": "in the CommunityHouse class represents a set of objects that are related to a particular community house through a many-to-one relationship with the HouseMember entity."
              },
              {
                "name": "amenities",
                "type_name": "Set<Amenity>",
                "value": "new HashSet<>()",
                "constant": false,
                "class_name": "CommunityHouse",
                "description": "in the CommunityHouse class contains a set of Amenity objects related to the house."
              }
            ],
            "name": "CommunityHouse",
            "location": {
              "start": 52,
              "insert": 36,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 35,
                "end": 51
              }
            },
            "item_type": "class",
            "length": 35,
            "docLength": 16
          }
        ]
      }
    }
  },
  {
    "name": "HouseMember.java",
    "path": "service/src/main/java/com/myhome/domain/HouseMember.java",
    "content": {
      "structured": {
        "description": "An entity called `HouseMember` that represents an individual member of a community house with unique identification and relationships to other entities such as documents, communities, and members. The entity has fields for member ID, name, and a reference to a related CommunityHouse entity. It also includes annotations for database tables and fields, as well as Lombok-generated getters and setters.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.BaseEntity Pages: 1 -->\n<svg width=\"531pt\" height=\"371pt\"\n viewBox=\"0.00 0.00 531.00 371.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 367)\">\n<title>com.myhome.domain.BaseEntity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"289,-191 110,-191 110,-172 289,-172 289,-191\"/>\n<text text-anchor=\"middle\" x=\"199.5\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Amenity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-363 340,-363 340,-344 508,-344 508,-363\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-351\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node3 -->\n<g id=\"edge2_Node000001_Node000003\" class=\"edge\">\n<title>Node1&#45;&gt;Node3</title>\n<g id=\"a_edge2_Node000001_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-200.41C227.9,-233.41 269.35,-301.17 325,-334.5 331.47,-338.37 338.57,-341.48 345.9,-343.97\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"213.09,-198.58 205.34,-191.36 206.89,-201.84 213.09,-198.58\"/>\n</a>\n</g>\n</g>\n<!-- Node4 -->\n<g id=\"Node000004\" class=\"node\">\n<title>Node4</title>\n<g id=\"a_Node000004\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1AmenityBookingItem.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-325.5 340,-325.5 340,-295.5 508,-295.5 508,-325.5\"/>\n<text text-anchor=\"start\" x=\"348\" y=\"-313.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-302.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node4 -->\n<g id=\"edge3_Node000001_Node000004\" class=\"edge\">\n<title>Node1&#45;&gt;Node4</title>\n<g id=\"a_edge3_Node000001_Node000004\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-198.45C237.46,-221.83 280.13,-263.69 325,-286.5 331.79,-289.95 339.11,-292.93 346.57,-295.48\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"218.15,-196.01 208.81,-191.01 212.99,-200.74 218.15,-196.01\"/>\n</a>\n</g>\n</g>\n<!-- Node5 -->\n<g id=\"Node000005\" class=\"node\">\n<title>Node5</title>\n<g id=\"a_Node000005\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Community.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-277 332,-277 332,-258 516,-258 516,-277\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-265\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node5 -->\n<g id=\"edge4_Node000001_Node000005\" class=\"edge\">\n<title>Node1&#45;&gt;Node5</title>\n<g id=\"a_edge4_Node000001_Node000005\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-196.49C247.51,-211.78 287.48,-235.12 325,-248.5 335.77,-252.34 347.51,-255.47 358.99,-257.99\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"225.09,-193.5 214.78,-191.06 221.31,-199.4 225.09,-193.5\"/>\n</a>\n</g>\n</g>\n<!-- Node6 -->\n<g id=\"Node000006\" class=\"node\">\n<title>Node6</title>\n<g id=\"a_Node000006\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1CommunityHouse.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-239.5 332,-239.5 332,-209.5 516,-209.5 516,-239.5\"/>\n<text text-anchor=\"start\" x=\"340\" y=\"-227.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-216.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node6 -->\n<g id=\"edge5_Node000001_Node000006\" class=\"edge\">\n<title>Node1&#45;&gt;Node6</title>\n<g id=\"a_edge5_Node000001_Node000006\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-193.01C286.24,-198.07 317.36,-204.08 345.35,-209.49\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"260.36,-189.5 249.88,-191.04 259.03,-196.38 260.36,-189.5\"/>\n</a>\n</g>\n</g>\n<!-- Node7 -->\n<g id=\"Node000007\" class=\"node\">\n<title>Node7</title>\n<g id=\"a_Node000007\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMember.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-191 325,-191 325,-172 523,-172 523,-191\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node7 -->\n<g id=\"edge6_Node000001_Node000007\" class=\"edge\">\n<title>Node1&#45;&gt;Node7</title>\n<g id=\"a_edge6_Node000001_Node000007\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M299.35,-181.5C307.82,-181.5 316.38,-181.5 324.85,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"299.08,-178 289.08,-181.5 299.08,-185 299.08,-178\"/>\n</a>\n</g>\n</g>\n<!-- Node8 -->\n<g id=\"Node000008\" class=\"node\">\n<title>Node8</title>\n<g id=\"a_Node000008\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMemberDocument.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-153.5 325,-153.5 325,-123.5 523,-123.5 523,-153.5\"/>\n<text text-anchor=\"start\" x=\"333\" y=\"-141.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-130.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node8 -->\n<g id=\"edge7_Node000001_Node000008\" class=\"edge\">\n<title>Node1&#45;&gt;Node8</title>\n<g id=\"a_edge7_Node000001_Node000008\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-169.99C286.24,-164.93 317.36,-158.92 345.35,-153.51\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"259.03,-166.62 249.88,-171.96 260.36,-173.5 259.03,-166.62\"/>\n</a>\n</g>\n</g>\n<!-- Node9 -->\n<g id=\"Node000009\" class=\"node\">\n<title>Node9</title>\n<g id=\"a_Node000009\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Payment.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"509,-105 339,-105 339,-86 509,-86 509,-105\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-93\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Payment</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node9 -->\n<g id=\"edge8_Node000001_Node000009\" class=\"edge\">\n<title>Node1&#45;&gt;Node9</title>\n<g id=\"a_edge8_Node000001_Node000009\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-166.51C247.51,-151.22 287.48,-127.88 325,-114.5 335.77,-110.66 347.51,-107.53 358.99,-105.01\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"221.31,-163.6 214.78,-171.94 225.09,-169.5 221.31,-163.6\"/>\n</a>\n</g>\n</g>\n<!-- Node10 -->\n<g id=\"Node000010\" class=\"node\">\n<title>Node10</title>\n<g id=\"a_Node000010\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1SecurityToken.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"507.5,-67.5 340.5,-67.5 340.5,-37.5 507.5,-37.5 507.5,-67.5\"/>\n<text text-anchor=\"start\" x=\"348.5\" y=\"-55.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-44.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node10 -->\n<g id=\"edge9_Node000001_Node000010\" class=\"edge\">\n<title>Node1&#45;&gt;Node10</title>\n<g id=\"a_edge9_Node000001_Node000010\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-164.55C237.46,-141.17 280.13,-99.31 325,-76.5 331.79,-73.05 339.11,-70.07 346.57,-67.52\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"212.99,-162.26 208.81,-171.99 218.15,-166.99 212.99,-162.26\"/>\n</a>\n</g>\n</g>\n<!-- Node11 -->\n<g id=\"Node000011\" class=\"node\">\n<title>Node11</title>\n<g id=\"a_Node000011\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1User.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"498.5,-19 349.5,-19 349.5,0 498.5,0 498.5,-19\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node11 -->\n<g id=\"edge10_Node000001_Node000011\" class=\"edge\">\n<title>Node1&#45;&gt;Node11</title>\n<g id=\"a_edge10_Node000001_Node000011\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-162.59C227.9,-129.59 269.35,-61.83 325,-28.5 332.51,-24 340.87,-20.54 349.45,-17.88\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"206.89,-161.16 205.34,-171.64 213.09,-164.42 206.89,-161.16\"/>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"74,-191 0,-191 0,-172 74,-172 74,-191\"/>\n<text text-anchor=\"middle\" x=\"37\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M84.03,-181.5C92.2,-181.5 100.96,-181.5 109.86,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.02,-178 74.02,-181.5 84.02,-185 84.02,-178\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "faeccc64-2cc6-8cb0-de44-2d4a9c5f13de",
            "ancestors": [],
            "type": "function",
            "description": "represents an individual member of a house with unique identification and relationships to other entities such as documents, communities, and members.\nFields:\n\t- memberId (String): in the HouseMember class represents a unique identifier for each member of a community house.\n\t- houseMemberDocument (HouseMemberDocument): in the HouseMember class represents a relationship between a House Member entity and a specific document, allowing for the association of a member with a particular document.\n\t- name (String): in the HouseMember class represents a string value that identifies an individual member of a community house.\n\t- communityHouse (CommunityHouse): in the HouseMember class represents a reference to an instance of the CommunityHouse class, which is likely to be a related or associated entity in the domain model.\n\n",
            "fields": [
              {
                "name": "memberId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "HouseMember",
                "description": "in the HouseMember class represents a unique identifier for each member of a community house."
              },
              {
                "name": "houseMemberDocument",
                "type_name": "HouseMemberDocument",
                "value": null,
                "constant": false,
                "class_name": "HouseMember",
                "description": "in the HouseMember class represents a relationship between a House Member entity and a specific document, allowing for the association of a member with a particular document."
              },
              {
                "name": "name",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "HouseMember",
                "description": "in the HouseMember class represents a string value that identifies an individual member of a community house."
              },
              {
                "name": "communityHouse",
                "type_name": "CommunityHouse",
                "value": null,
                "constant": false,
                "class_name": "HouseMember",
                "description": "in the HouseMember class represents a reference to an instance of the CommunityHouse class, which is likely to be a related or associated entity in the domain model."
              }
            ],
            "name": "HouseMember",
            "location": {
              "start": 45,
              "insert": 30,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 29,
                "end": 44
              }
            },
            "item_type": "class",
            "length": 22,
            "docLength": 15
          }
        ]
      }
    }
  },
  {
    "name": "HouseMemberDocument.java",
    "path": "service/src/main/java/com/myhome/domain/HouseMemberDocument.java",
    "content": {
      "structured": {
        "description": "An entity class called HouseMemberDocument that represents a document with a unique filename and binary content stored as a large object (Lob) in the database using JPA (Java Persistence API). The class has two fields: documentFilename and documentContent, both of which are persisted to the database.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.BaseEntity Pages: 1 -->\n<svg width=\"531pt\" height=\"371pt\"\n viewBox=\"0.00 0.00 531.00 371.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 367)\">\n<title>com.myhome.domain.BaseEntity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"289,-191 110,-191 110,-172 289,-172 289,-191\"/>\n<text text-anchor=\"middle\" x=\"199.5\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Amenity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-363 340,-363 340,-344 508,-344 508,-363\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-351\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node3 -->\n<g id=\"edge2_Node000001_Node000003\" class=\"edge\">\n<title>Node1&#45;&gt;Node3</title>\n<g id=\"a_edge2_Node000001_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-200.41C227.9,-233.41 269.35,-301.17 325,-334.5 331.47,-338.37 338.57,-341.48 345.9,-343.97\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"213.09,-198.58 205.34,-191.36 206.89,-201.84 213.09,-198.58\"/>\n</a>\n</g>\n</g>\n<!-- Node4 -->\n<g id=\"Node000004\" class=\"node\">\n<title>Node4</title>\n<g id=\"a_Node000004\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1AmenityBookingItem.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-325.5 340,-325.5 340,-295.5 508,-295.5 508,-325.5\"/>\n<text text-anchor=\"start\" x=\"348\" y=\"-313.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-302.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node4 -->\n<g id=\"edge3_Node000001_Node000004\" class=\"edge\">\n<title>Node1&#45;&gt;Node4</title>\n<g id=\"a_edge3_Node000001_Node000004\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-198.45C237.46,-221.83 280.13,-263.69 325,-286.5 331.79,-289.95 339.11,-292.93 346.57,-295.48\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"218.15,-196.01 208.81,-191.01 212.99,-200.74 218.15,-196.01\"/>\n</a>\n</g>\n</g>\n<!-- Node5 -->\n<g id=\"Node000005\" class=\"node\">\n<title>Node5</title>\n<g id=\"a_Node000005\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Community.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-277 332,-277 332,-258 516,-258 516,-277\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-265\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node5 -->\n<g id=\"edge4_Node000001_Node000005\" class=\"edge\">\n<title>Node1&#45;&gt;Node5</title>\n<g id=\"a_edge4_Node000001_Node000005\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-196.49C247.51,-211.78 287.48,-235.12 325,-248.5 335.77,-252.34 347.51,-255.47 358.99,-257.99\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"225.09,-193.5 214.78,-191.06 221.31,-199.4 225.09,-193.5\"/>\n</a>\n</g>\n</g>\n<!-- Node6 -->\n<g id=\"Node000006\" class=\"node\">\n<title>Node6</title>\n<g id=\"a_Node000006\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1CommunityHouse.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-239.5 332,-239.5 332,-209.5 516,-209.5 516,-239.5\"/>\n<text text-anchor=\"start\" x=\"340\" y=\"-227.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-216.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node6 -->\n<g id=\"edge5_Node000001_Node000006\" class=\"edge\">\n<title>Node1&#45;&gt;Node6</title>\n<g id=\"a_edge5_Node000001_Node000006\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-193.01C286.24,-198.07 317.36,-204.08 345.35,-209.49\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"260.36,-189.5 249.88,-191.04 259.03,-196.38 260.36,-189.5\"/>\n</a>\n</g>\n</g>\n<!-- Node7 -->\n<g id=\"Node000007\" class=\"node\">\n<title>Node7</title>\n<g id=\"a_Node000007\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMember.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-191 325,-191 325,-172 523,-172 523,-191\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node7 -->\n<g id=\"edge6_Node000001_Node000007\" class=\"edge\">\n<title>Node1&#45;&gt;Node7</title>\n<g id=\"a_edge6_Node000001_Node000007\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M299.35,-181.5C307.82,-181.5 316.38,-181.5 324.85,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"299.08,-178 289.08,-181.5 299.08,-185 299.08,-178\"/>\n</a>\n</g>\n</g>\n<!-- Node8 -->\n<g id=\"Node000008\" class=\"node\">\n<title>Node8</title>\n<g id=\"a_Node000008\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMemberDocument.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-153.5 325,-153.5 325,-123.5 523,-123.5 523,-153.5\"/>\n<text text-anchor=\"start\" x=\"333\" y=\"-141.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-130.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node8 -->\n<g id=\"edge7_Node000001_Node000008\" class=\"edge\">\n<title>Node1&#45;&gt;Node8</title>\n<g id=\"a_edge7_Node000001_Node000008\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-169.99C286.24,-164.93 317.36,-158.92 345.35,-153.51\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"259.03,-166.62 249.88,-171.96 260.36,-173.5 259.03,-166.62\"/>\n</a>\n</g>\n</g>\n<!-- Node9 -->\n<g id=\"Node000009\" class=\"node\">\n<title>Node9</title>\n<g id=\"a_Node000009\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Payment.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"509,-105 339,-105 339,-86 509,-86 509,-105\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-93\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Payment</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node9 -->\n<g id=\"edge8_Node000001_Node000009\" class=\"edge\">\n<title>Node1&#45;&gt;Node9</title>\n<g id=\"a_edge8_Node000001_Node000009\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-166.51C247.51,-151.22 287.48,-127.88 325,-114.5 335.77,-110.66 347.51,-107.53 358.99,-105.01\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"221.31,-163.6 214.78,-171.94 225.09,-169.5 221.31,-163.6\"/>\n</a>\n</g>\n</g>\n<!-- Node10 -->\n<g id=\"Node000010\" class=\"node\">\n<title>Node10</title>\n<g id=\"a_Node000010\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1SecurityToken.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"507.5,-67.5 340.5,-67.5 340.5,-37.5 507.5,-37.5 507.5,-67.5\"/>\n<text text-anchor=\"start\" x=\"348.5\" y=\"-55.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-44.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node10 -->\n<g id=\"edge9_Node000001_Node000010\" class=\"edge\">\n<title>Node1&#45;&gt;Node10</title>\n<g id=\"a_edge9_Node000001_Node000010\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-164.55C237.46,-141.17 280.13,-99.31 325,-76.5 331.79,-73.05 339.11,-70.07 346.57,-67.52\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"212.99,-162.26 208.81,-171.99 218.15,-166.99 212.99,-162.26\"/>\n</a>\n</g>\n</g>\n<!-- Node11 -->\n<g id=\"Node000011\" class=\"node\">\n<title>Node11</title>\n<g id=\"a_Node000011\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1User.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"498.5,-19 349.5,-19 349.5,0 498.5,0 498.5,-19\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node11 -->\n<g id=\"edge10_Node000001_Node000011\" class=\"edge\">\n<title>Node1&#45;&gt;Node11</title>\n<g id=\"a_edge10_Node000001_Node000011\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-162.59C227.9,-129.59 269.35,-61.83 325,-28.5 332.51,-24 340.87,-20.54 349.45,-17.88\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"206.89,-161.16 205.34,-171.64 213.09,-164.42 206.89,-161.16\"/>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"74,-191 0,-191 0,-172 74,-172 74,-191\"/>\n<text text-anchor=\"middle\" x=\"37\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M84.03,-181.5C92.2,-181.5 100.96,-181.5 109.86,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.02,-178 74.02,-181.5 84.02,-185 84.02,-178\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "1a1b913b-da57-67bf-1445-677b08a83127",
            "ancestors": [],
            "type": "function",
            "description": "is a Java entity class with two fields: documentFilename and documentContent, which are persisted to the database using JPA.\nFields:\n\t- documentFilename (String): in the HouseMemberDocument class represents a unique name for a file containing document content, which is stored as a binary large object (Lob) in the byte array format.\n\t- documentContent (byte[]): in the HouseMemberDocument class represents binary data of unknown type and size, stored as a Lob (Large Object Binary) in the byte array format.\n\n",
            "fields": [
              {
                "name": "documentFilename",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "HouseMemberDocument",
                "description": "in the HouseMemberDocument class represents a unique name for a file containing document content, which is stored as a binary large object (Lob) in the byte array format."
              },
              {
                "name": "documentContent",
                "type_name": "byte[]",
                "value": "new byte[0]",
                "constant": false,
                "class_name": "HouseMemberDocument",
                "description": "in the HouseMemberDocument class represents binary data of unknown type and size, stored as a Lob (Large Object Binary) in the byte array format."
              }
            ],
            "name": "HouseMemberDocument",
            "location": {
              "start": 38,
              "insert": 27,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 26,
                "end": 37
              }
            },
            "item_type": "class",
            "length": 14,
            "docLength": 11
          }
        ]
      }
    }
  },
  {
    "name": "PasswordActionType.java",
    "path": "service/src/main/java/com/myhome/domain/PasswordActionType.java",
    "content": {
      "structured": {
        "description": "An enumeration type called `PasswordActionType` with two values: `FORGOT` and `RESET`.",
        "items": []
      }
    }
  },
  {
    "name": "Payment.java",
    "path": "service/src/main/java/com/myhome/domain/Payment.java",
    "content": {
      "structured": {
        "description": "An entity called `Payment` that represents a payment made by a user to their housing provider for various expenses, including electricity bills, house rent, and water charges. The `Payment` class has several fields and methods, including a unique identifier (`paymentId`), the amount of money to be paid (`charge`), the type of payment (`type`), a brief description (`description`), and whether the payment is recurring or not (`recurring`). The code also includes Jackson annotations for formatting dates and using Lombok to simplify the creation of getters and setters.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.BaseEntity Pages: 1 -->\n<svg width=\"531pt\" height=\"371pt\"\n viewBox=\"0.00 0.00 531.00 371.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 367)\">\n<title>com.myhome.domain.BaseEntity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"289,-191 110,-191 110,-172 289,-172 289,-191\"/>\n<text text-anchor=\"middle\" x=\"199.5\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Amenity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-363 340,-363 340,-344 508,-344 508,-363\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-351\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node3 -->\n<g id=\"edge2_Node000001_Node000003\" class=\"edge\">\n<title>Node1&#45;&gt;Node3</title>\n<g id=\"a_edge2_Node000001_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-200.41C227.9,-233.41 269.35,-301.17 325,-334.5 331.47,-338.37 338.57,-341.48 345.9,-343.97\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"213.09,-198.58 205.34,-191.36 206.89,-201.84 213.09,-198.58\"/>\n</a>\n</g>\n</g>\n<!-- Node4 -->\n<g id=\"Node000004\" class=\"node\">\n<title>Node4</title>\n<g id=\"a_Node000004\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1AmenityBookingItem.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-325.5 340,-325.5 340,-295.5 508,-295.5 508,-325.5\"/>\n<text text-anchor=\"start\" x=\"348\" y=\"-313.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-302.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node4 -->\n<g id=\"edge3_Node000001_Node000004\" class=\"edge\">\n<title>Node1&#45;&gt;Node4</title>\n<g id=\"a_edge3_Node000001_Node000004\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-198.45C237.46,-221.83 280.13,-263.69 325,-286.5 331.79,-289.95 339.11,-292.93 346.57,-295.48\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"218.15,-196.01 208.81,-191.01 212.99,-200.74 218.15,-196.01\"/>\n</a>\n</g>\n</g>\n<!-- Node5 -->\n<g id=\"Node000005\" class=\"node\">\n<title>Node5</title>\n<g id=\"a_Node000005\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Community.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-277 332,-277 332,-258 516,-258 516,-277\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-265\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node5 -->\n<g id=\"edge4_Node000001_Node000005\" class=\"edge\">\n<title>Node1&#45;&gt;Node5</title>\n<g id=\"a_edge4_Node000001_Node000005\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-196.49C247.51,-211.78 287.48,-235.12 325,-248.5 335.77,-252.34 347.51,-255.47 358.99,-257.99\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"225.09,-193.5 214.78,-191.06 221.31,-199.4 225.09,-193.5\"/>\n</a>\n</g>\n</g>\n<!-- Node6 -->\n<g id=\"Node000006\" class=\"node\">\n<title>Node6</title>\n<g id=\"a_Node000006\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1CommunityHouse.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-239.5 332,-239.5 332,-209.5 516,-209.5 516,-239.5\"/>\n<text text-anchor=\"start\" x=\"340\" y=\"-227.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-216.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node6 -->\n<g id=\"edge5_Node000001_Node000006\" class=\"edge\">\n<title>Node1&#45;&gt;Node6</title>\n<g id=\"a_edge5_Node000001_Node000006\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-193.01C286.24,-198.07 317.36,-204.08 345.35,-209.49\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"260.36,-189.5 249.88,-191.04 259.03,-196.38 260.36,-189.5\"/>\n</a>\n</g>\n</g>\n<!-- Node7 -->\n<g id=\"Node000007\" class=\"node\">\n<title>Node7</title>\n<g id=\"a_Node000007\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMember.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-191 325,-191 325,-172 523,-172 523,-191\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node7 -->\n<g id=\"edge6_Node000001_Node000007\" class=\"edge\">\n<title>Node1&#45;&gt;Node7</title>\n<g id=\"a_edge6_Node000001_Node000007\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M299.35,-181.5C307.82,-181.5 316.38,-181.5 324.85,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"299.08,-178 289.08,-181.5 299.08,-185 299.08,-178\"/>\n</a>\n</g>\n</g>\n<!-- Node8 -->\n<g id=\"Node000008\" class=\"node\">\n<title>Node8</title>\n<g id=\"a_Node000008\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMemberDocument.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-153.5 325,-153.5 325,-123.5 523,-123.5 523,-153.5\"/>\n<text text-anchor=\"start\" x=\"333\" y=\"-141.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-130.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node8 -->\n<g id=\"edge7_Node000001_Node000008\" class=\"edge\">\n<title>Node1&#45;&gt;Node8</title>\n<g id=\"a_edge7_Node000001_Node000008\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-169.99C286.24,-164.93 317.36,-158.92 345.35,-153.51\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"259.03,-166.62 249.88,-171.96 260.36,-173.5 259.03,-166.62\"/>\n</a>\n</g>\n</g>\n<!-- Node9 -->\n<g id=\"Node000009\" class=\"node\">\n<title>Node9</title>\n<g id=\"a_Node000009\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Payment.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"509,-105 339,-105 339,-86 509,-86 509,-105\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-93\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Payment</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node9 -->\n<g id=\"edge8_Node000001_Node000009\" class=\"edge\">\n<title>Node1&#45;&gt;Node9</title>\n<g id=\"a_edge8_Node000001_Node000009\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-166.51C247.51,-151.22 287.48,-127.88 325,-114.5 335.77,-110.66 347.51,-107.53 358.99,-105.01\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"221.31,-163.6 214.78,-171.94 225.09,-169.5 221.31,-163.6\"/>\n</a>\n</g>\n</g>\n<!-- Node10 -->\n<g id=\"Node000010\" class=\"node\">\n<title>Node10</title>\n<g id=\"a_Node000010\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1SecurityToken.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"507.5,-67.5 340.5,-67.5 340.5,-37.5 507.5,-37.5 507.5,-67.5\"/>\n<text text-anchor=\"start\" x=\"348.5\" y=\"-55.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-44.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node10 -->\n<g id=\"edge9_Node000001_Node000010\" class=\"edge\">\n<title>Node1&#45;&gt;Node10</title>\n<g id=\"a_edge9_Node000001_Node000010\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-164.55C237.46,-141.17 280.13,-99.31 325,-76.5 331.79,-73.05 339.11,-70.07 346.57,-67.52\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"212.99,-162.26 208.81,-171.99 218.15,-166.99 212.99,-162.26\"/>\n</a>\n</g>\n</g>\n<!-- Node11 -->\n<g id=\"Node000011\" class=\"node\">\n<title>Node11</title>\n<g id=\"a_Node000011\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1User.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"498.5,-19 349.5,-19 349.5,0 498.5,0 498.5,-19\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node11 -->\n<g id=\"edge10_Node000001_Node000011\" class=\"edge\">\n<title>Node1&#45;&gt;Node11</title>\n<g id=\"a_edge10_Node000001_Node000011\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-162.59C227.9,-129.59 269.35,-61.83 325,-28.5 332.51,-24 340.87,-20.54 349.45,-17.88\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"206.89,-161.16 205.34,-171.64 213.09,-164.42 206.89,-161.16\"/>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"74,-191 0,-191 0,-172 74,-172 74,-191\"/>\n<text text-anchor=\"middle\" x=\"37\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M84.03,-181.5C92.2,-181.5 100.96,-181.5 109.86,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.02,-178 74.02,-181.5 84.02,-185 84.02,-178\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "b419bc91-0115-ff8f-d64e-284540caed5a",
            "ancestors": [],
            "type": "function",
            "description": "represents a payment made by a user to their housing provider for various expenses.\nFields:\n\t- paymentId (String): represents a unique identifier for each payment transaction in the service.\n\t- charge (BigDecimal): in the Payment entity represents an amount of money to be paid by a user or member of a house.\n\t- type (String): in the Payment entity represents a category of payment, such as \"electricity bill\" or \"house rent\".\n\t- description (String): in the Payment entity represents a brief narrative or summary of the payment's purpose or context.\n\t- recurring (boolean): in the Payment entity indicates whether a payment is recurring or not.\n\t- dueDate (LocalDate): represents the date when the payment is expected to be made.\n\t- admin (User): in the Payment class represents a user who manages or oversees payments made by the HouseMember associated with the payment.\n\t- member (HouseMember): in the Payment class represents an association between a payment and a member of a house.\n\n",
            "fields": [
              {
                "name": "paymentId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Payment",
                "description": "represents a unique identifier for each payment transaction in the service."
              },
              {
                "name": "charge",
                "type_name": "BigDecimal",
                "value": null,
                "constant": false,
                "class_name": "Payment",
                "description": "in the Payment entity represents an amount of money to be paid by a user or member of a house."
              },
              {
                "name": "type",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Payment",
                "description": "in the Payment entity represents a category of payment, such as \"electricity bill\" or \"house rent\"."
              },
              {
                "name": "description",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Payment",
                "description": "in the Payment entity represents a brief narrative or summary of the payment's purpose or context."
              },
              {
                "name": "recurring",
                "type_name": "boolean",
                "value": null,
                "constant": false,
                "class_name": "Payment",
                "description": "in the Payment entity indicates whether a payment is recurring or not."
              },
              {
                "name": "dueDate",
                "type_name": "LocalDate",
                "value": null,
                "constant": false,
                "class_name": "Payment",
                "description": "represents the date when the payment is expected to be made."
              },
              {
                "name": "admin",
                "type_name": "User",
                "value": null,
                "constant": false,
                "class_name": "Payment",
                "description": "in the Payment class represents a user who manages or oversees payments made by the HouseMember associated with the payment."
              },
              {
                "name": "member",
                "type_name": "HouseMember",
                "value": null,
                "constant": false,
                "class_name": "Payment",
                "description": "in the Payment class represents an association between a payment and a member of a house."
              }
            ],
            "name": "Payment",
            "location": {
              "start": 57,
              "insert": 35,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 34,
                "end": 56
              }
            },
            "item_type": "class",
            "length": 23,
            "docLength": 22
          }
        ]
      }
    }
  },
  {
    "name": "SecurityToken.java",
    "path": "service/src/main/java/com/myhome/domain/SecurityToken.java",
    "content": {
      "structured": {
        "description": "A class called `SecurityToken` that represents a security token with various attributes and relationships. The class has fields for token type, token value, creation date, expiry date, and ownership by a user. It also has methods for getting and setting these values, as well as annotations for Lombok and JPA.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.BaseEntity Pages: 1 -->\n<svg width=\"531pt\" height=\"371pt\"\n viewBox=\"0.00 0.00 531.00 371.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 367)\">\n<title>com.myhome.domain.BaseEntity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"289,-191 110,-191 110,-172 289,-172 289,-191\"/>\n<text text-anchor=\"middle\" x=\"199.5\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Amenity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-363 340,-363 340,-344 508,-344 508,-363\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-351\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node3 -->\n<g id=\"edge2_Node000001_Node000003\" class=\"edge\">\n<title>Node1&#45;&gt;Node3</title>\n<g id=\"a_edge2_Node000001_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-200.41C227.9,-233.41 269.35,-301.17 325,-334.5 331.47,-338.37 338.57,-341.48 345.9,-343.97\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"213.09,-198.58 205.34,-191.36 206.89,-201.84 213.09,-198.58\"/>\n</a>\n</g>\n</g>\n<!-- Node4 -->\n<g id=\"Node000004\" class=\"node\">\n<title>Node4</title>\n<g id=\"a_Node000004\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1AmenityBookingItem.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-325.5 340,-325.5 340,-295.5 508,-295.5 508,-325.5\"/>\n<text text-anchor=\"start\" x=\"348\" y=\"-313.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-302.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node4 -->\n<g id=\"edge3_Node000001_Node000004\" class=\"edge\">\n<title>Node1&#45;&gt;Node4</title>\n<g id=\"a_edge3_Node000001_Node000004\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-198.45C237.46,-221.83 280.13,-263.69 325,-286.5 331.79,-289.95 339.11,-292.93 346.57,-295.48\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"218.15,-196.01 208.81,-191.01 212.99,-200.74 218.15,-196.01\"/>\n</a>\n</g>\n</g>\n<!-- Node5 -->\n<g id=\"Node000005\" class=\"node\">\n<title>Node5</title>\n<g id=\"a_Node000005\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Community.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-277 332,-277 332,-258 516,-258 516,-277\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-265\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node5 -->\n<g id=\"edge4_Node000001_Node000005\" class=\"edge\">\n<title>Node1&#45;&gt;Node5</title>\n<g id=\"a_edge4_Node000001_Node000005\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-196.49C247.51,-211.78 287.48,-235.12 325,-248.5 335.77,-252.34 347.51,-255.47 358.99,-257.99\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"225.09,-193.5 214.78,-191.06 221.31,-199.4 225.09,-193.5\"/>\n</a>\n</g>\n</g>\n<!-- Node6 -->\n<g id=\"Node000006\" class=\"node\">\n<title>Node6</title>\n<g id=\"a_Node000006\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1CommunityHouse.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-239.5 332,-239.5 332,-209.5 516,-209.5 516,-239.5\"/>\n<text text-anchor=\"start\" x=\"340\" y=\"-227.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-216.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node6 -->\n<g id=\"edge5_Node000001_Node000006\" class=\"edge\">\n<title>Node1&#45;&gt;Node6</title>\n<g id=\"a_edge5_Node000001_Node000006\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-193.01C286.24,-198.07 317.36,-204.08 345.35,-209.49\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"260.36,-189.5 249.88,-191.04 259.03,-196.38 260.36,-189.5\"/>\n</a>\n</g>\n</g>\n<!-- Node7 -->\n<g id=\"Node000007\" class=\"node\">\n<title>Node7</title>\n<g id=\"a_Node000007\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMember.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-191 325,-191 325,-172 523,-172 523,-191\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node7 -->\n<g id=\"edge6_Node000001_Node000007\" class=\"edge\">\n<title>Node1&#45;&gt;Node7</title>\n<g id=\"a_edge6_Node000001_Node000007\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M299.35,-181.5C307.82,-181.5 316.38,-181.5 324.85,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"299.08,-178 289.08,-181.5 299.08,-185 299.08,-178\"/>\n</a>\n</g>\n</g>\n<!-- Node8 -->\n<g id=\"Node000008\" class=\"node\">\n<title>Node8</title>\n<g id=\"a_Node000008\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMemberDocument.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-153.5 325,-153.5 325,-123.5 523,-123.5 523,-153.5\"/>\n<text text-anchor=\"start\" x=\"333\" y=\"-141.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-130.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node8 -->\n<g id=\"edge7_Node000001_Node000008\" class=\"edge\">\n<title>Node1&#45;&gt;Node8</title>\n<g id=\"a_edge7_Node000001_Node000008\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-169.99C286.24,-164.93 317.36,-158.92 345.35,-153.51\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"259.03,-166.62 249.88,-171.96 260.36,-173.5 259.03,-166.62\"/>\n</a>\n</g>\n</g>\n<!-- Node9 -->\n<g id=\"Node000009\" class=\"node\">\n<title>Node9</title>\n<g id=\"a_Node000009\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Payment.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"509,-105 339,-105 339,-86 509,-86 509,-105\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-93\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Payment</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node9 -->\n<g id=\"edge8_Node000001_Node000009\" class=\"edge\">\n<title>Node1&#45;&gt;Node9</title>\n<g id=\"a_edge8_Node000001_Node000009\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-166.51C247.51,-151.22 287.48,-127.88 325,-114.5 335.77,-110.66 347.51,-107.53 358.99,-105.01\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"221.31,-163.6 214.78,-171.94 225.09,-169.5 221.31,-163.6\"/>\n</a>\n</g>\n</g>\n<!-- Node10 -->\n<g id=\"Node000010\" class=\"node\">\n<title>Node10</title>\n<g id=\"a_Node000010\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1SecurityToken.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"507.5,-67.5 340.5,-67.5 340.5,-37.5 507.5,-37.5 507.5,-67.5\"/>\n<text text-anchor=\"start\" x=\"348.5\" y=\"-55.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-44.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node10 -->\n<g id=\"edge9_Node000001_Node000010\" class=\"edge\">\n<title>Node1&#45;&gt;Node10</title>\n<g id=\"a_edge9_Node000001_Node000010\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-164.55C237.46,-141.17 280.13,-99.31 325,-76.5 331.79,-73.05 339.11,-70.07 346.57,-67.52\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"212.99,-162.26 208.81,-171.99 218.15,-166.99 212.99,-162.26\"/>\n</a>\n</g>\n</g>\n<!-- Node11 -->\n<g id=\"Node000011\" class=\"node\">\n<title>Node11</title>\n<g id=\"a_Node000011\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1User.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"498.5,-19 349.5,-19 349.5,0 498.5,0 498.5,-19\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node11 -->\n<g id=\"edge10_Node000001_Node000011\" class=\"edge\">\n<title>Node1&#45;&gt;Node11</title>\n<g id=\"a_edge10_Node000001_Node000011\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-162.59C227.9,-129.59 269.35,-61.83 325,-28.5 332.51,-24 340.87,-20.54 349.45,-17.88\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"206.89,-161.16 205.34,-171.64 213.09,-164.42 206.89,-161.16\"/>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"74,-191 0,-191 0,-172 74,-172 74,-191\"/>\n<text text-anchor=\"middle\" x=\"37\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M84.03,-181.5C92.2,-181.5 100.96,-181.5 109.86,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.02,-178 74.02,-181.5 84.02,-185 84.02,-178\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "a0369877-1a57-f8b3-4046-594eab82e198",
            "ancestors": [],
            "type": "function",
            "description": "represents a security token with various attributes and relationships, including token type, token value, creation date, expiry date, and ownership by a user.\nFields:\n\t- tokenType (SecurityTokenType): represents an enumeration of SecurityTokenType enums used to identify the type of security token being represented by the SecurityToken class.\n\t- token (String): in the SecurityToken class represents the classification of the security token, which is an enumeration of SecurityTokenType enums.\n\t- creationDate (LocalDate): represents the date when the security token was created.\n\t- expiryDate (LocalDate): represents the date after which the security token is no longer valid.\n\t- isUsed (boolean): in the SecurityToken class indicates whether a security token has been used or not.\n\t- tokenOwner (User): represents a user who owns or has access to a security token in question.\n\n",
            "fields": [
              {
                "name": "tokenType",
                "type_name": "SecurityTokenType",
                "value": null,
                "constant": false,
                "class_name": "SecurityToken",
                "description": "represents an enumeration of SecurityTokenType enums used to identify the type of security token being represented by the SecurityToken class."
              },
              {
                "name": "token",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "SecurityToken",
                "description": "in the SecurityToken class represents the classification of the security token, which is an enumeration of SecurityTokenType enums."
              },
              {
                "name": "creationDate",
                "type_name": "LocalDate",
                "value": null,
                "constant": false,
                "class_name": "SecurityToken",
                "description": "represents the date when the security token was created."
              },
              {
                "name": "expiryDate",
                "type_name": "LocalDate",
                "value": null,
                "constant": false,
                "class_name": "SecurityToken",
                "description": "represents the date after which the security token is no longer valid."
              },
              {
                "name": "isUsed",
                "type_name": "boolean",
                "value": null,
                "constant": false,
                "class_name": "SecurityToken",
                "description": "in the SecurityToken class indicates whether a security token has been used or not."
              },
              {
                "name": "tokenOwner",
                "type_name": "User",
                "value": null,
                "constant": false,
                "class_name": "SecurityToken",
                "description": "represents a user who owns or has access to a security token in question."
              }
            ],
            "name": "SecurityToken",
            "location": {
              "start": 32,
              "insert": 15,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 14,
                "end": 31
              }
            },
            "item_type": "class",
            "length": 19,
            "docLength": 17
          }
        ]
      }
    }
  },
  {
    "name": "SecurityTokenType.java",
    "path": "service/src/main/java/com/myhome/domain/SecurityTokenType.java",
    "content": {
      "structured": {
        "description": "An enumeration called `SecurityTokenType` with two members: `RESET` and `EMAIL_CONFIRM`.",
        "items": []
      }
    }
  },
  {
    "name": "User.java",
    "path": "service/src/main/java/com/myhome/domain/User.java",
    "content": {
      "structured": {
        "description": "An entity called `User` that represents a valid user in a service. The entity has attributes for name, userId, email, email confirmed, encrypted password, communities, and userTokens. It also defines relationships with other entities through many-to-many and one-to-many associations. The code uses packages such as Lombok and JPA (Java Persistence API) to define the entity and its relationships.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.BaseEntity Pages: 1 -->\n<svg width=\"531pt\" height=\"371pt\"\n viewBox=\"0.00 0.00 531.00 371.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 367)\">\n<title>com.myhome.domain.BaseEntity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"289,-191 110,-191 110,-172 289,-172 289,-191\"/>\n<text text-anchor=\"middle\" x=\"199.5\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Amenity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-363 340,-363 340,-344 508,-344 508,-363\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-351\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node3 -->\n<g id=\"edge2_Node000001_Node000003\" class=\"edge\">\n<title>Node1&#45;&gt;Node3</title>\n<g id=\"a_edge2_Node000001_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-200.41C227.9,-233.41 269.35,-301.17 325,-334.5 331.47,-338.37 338.57,-341.48 345.9,-343.97\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"213.09,-198.58 205.34,-191.36 206.89,-201.84 213.09,-198.58\"/>\n</a>\n</g>\n</g>\n<!-- Node4 -->\n<g id=\"Node000004\" class=\"node\">\n<title>Node4</title>\n<g id=\"a_Node000004\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1AmenityBookingItem.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-325.5 340,-325.5 340,-295.5 508,-295.5 508,-325.5\"/>\n<text text-anchor=\"start\" x=\"348\" y=\"-313.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-302.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node4 -->\n<g id=\"edge3_Node000001_Node000004\" class=\"edge\">\n<title>Node1&#45;&gt;Node4</title>\n<g id=\"a_edge3_Node000001_Node000004\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-198.45C237.46,-221.83 280.13,-263.69 325,-286.5 331.79,-289.95 339.11,-292.93 346.57,-295.48\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"218.15,-196.01 208.81,-191.01 212.99,-200.74 218.15,-196.01\"/>\n</a>\n</g>\n</g>\n<!-- Node5 -->\n<g id=\"Node000005\" class=\"node\">\n<title>Node5</title>\n<g id=\"a_Node000005\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Community.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-277 332,-277 332,-258 516,-258 516,-277\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-265\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node5 -->\n<g id=\"edge4_Node000001_Node000005\" class=\"edge\">\n<title>Node1&#45;&gt;Node5</title>\n<g id=\"a_edge4_Node000001_Node000005\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-196.49C247.51,-211.78 287.48,-235.12 325,-248.5 335.77,-252.34 347.51,-255.47 358.99,-257.99\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"225.09,-193.5 214.78,-191.06 221.31,-199.4 225.09,-193.5\"/>\n</a>\n</g>\n</g>\n<!-- Node6 -->\n<g id=\"Node000006\" class=\"node\">\n<title>Node6</title>\n<g id=\"a_Node000006\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1CommunityHouse.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-239.5 332,-239.5 332,-209.5 516,-209.5 516,-239.5\"/>\n<text text-anchor=\"start\" x=\"340\" y=\"-227.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-216.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node6 -->\n<g id=\"edge5_Node000001_Node000006\" class=\"edge\">\n<title>Node1&#45;&gt;Node6</title>\n<g id=\"a_edge5_Node000001_Node000006\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-193.01C286.24,-198.07 317.36,-204.08 345.35,-209.49\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"260.36,-189.5 249.88,-191.04 259.03,-196.38 260.36,-189.5\"/>\n</a>\n</g>\n</g>\n<!-- Node7 -->\n<g id=\"Node000007\" class=\"node\">\n<title>Node7</title>\n<g id=\"a_Node000007\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMember.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-191 325,-191 325,-172 523,-172 523,-191\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node7 -->\n<g id=\"edge6_Node000001_Node000007\" class=\"edge\">\n<title>Node1&#45;&gt;Node7</title>\n<g id=\"a_edge6_Node000001_Node000007\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M299.35,-181.5C307.82,-181.5 316.38,-181.5 324.85,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"299.08,-178 289.08,-181.5 299.08,-185 299.08,-178\"/>\n</a>\n</g>\n</g>\n<!-- Node8 -->\n<g id=\"Node000008\" class=\"node\">\n<title>Node8</title>\n<g id=\"a_Node000008\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMemberDocument.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-153.5 325,-153.5 325,-123.5 523,-123.5 523,-153.5\"/>\n<text text-anchor=\"start\" x=\"333\" y=\"-141.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-130.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node8 -->\n<g id=\"edge7_Node000001_Node000008\" class=\"edge\">\n<title>Node1&#45;&gt;Node8</title>\n<g id=\"a_edge7_Node000001_Node000008\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-169.99C286.24,-164.93 317.36,-158.92 345.35,-153.51\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"259.03,-166.62 249.88,-171.96 260.36,-173.5 259.03,-166.62\"/>\n</a>\n</g>\n</g>\n<!-- Node9 -->\n<g id=\"Node000009\" class=\"node\">\n<title>Node9</title>\n<g id=\"a_Node000009\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Payment.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"509,-105 339,-105 339,-86 509,-86 509,-105\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-93\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Payment</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node9 -->\n<g id=\"edge8_Node000001_Node000009\" class=\"edge\">\n<title>Node1&#45;&gt;Node9</title>\n<g id=\"a_edge8_Node000001_Node000009\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-166.51C247.51,-151.22 287.48,-127.88 325,-114.5 335.77,-110.66 347.51,-107.53 358.99,-105.01\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"221.31,-163.6 214.78,-171.94 225.09,-169.5 221.31,-163.6\"/>\n</a>\n</g>\n</g>\n<!-- Node10 -->\n<g id=\"Node000010\" class=\"node\">\n<title>Node10</title>\n<g id=\"a_Node000010\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1SecurityToken.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"507.5,-67.5 340.5,-67.5 340.5,-37.5 507.5,-37.5 507.5,-67.5\"/>\n<text text-anchor=\"start\" x=\"348.5\" y=\"-55.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-44.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node10 -->\n<g id=\"edge9_Node000001_Node000010\" class=\"edge\">\n<title>Node1&#45;&gt;Node10</title>\n<g id=\"a_edge9_Node000001_Node000010\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-164.55C237.46,-141.17 280.13,-99.31 325,-76.5 331.79,-73.05 339.11,-70.07 346.57,-67.52\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"212.99,-162.26 208.81,-171.99 218.15,-166.99 212.99,-162.26\"/>\n</a>\n</g>\n</g>\n<!-- Node11 -->\n<g id=\"Node000011\" class=\"node\">\n<title>Node11</title>\n<g id=\"a_Node000011\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1User.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"498.5,-19 349.5,-19 349.5,0 498.5,0 498.5,-19\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node11 -->\n<g id=\"edge10_Node000001_Node000011\" class=\"edge\">\n<title>Node1&#45;&gt;Node11</title>\n<g id=\"a_edge10_Node000001_Node000011\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-162.59C227.9,-129.59 269.35,-61.83 325,-28.5 332.51,-24 340.87,-20.54 349.45,-17.88\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"206.89,-161.16 205.34,-171.64 213.09,-164.42 206.89,-161.16\"/>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"74,-191 0,-191 0,-172 74,-172 74,-191\"/>\n<text text-anchor=\"middle\" x=\"37\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M84.03,-181.5C92.2,-181.5 100.96,-181.5 109.86,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.02,-178 74.02,-181.5 84.02,-185 84.02,-178\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "fc1a0beb-3464-6e87-4244-15a4d31d4724",
            "ancestors": [],
            "type": "function",
            "description": "represents a valid user in a service with attributes for name, userId, email, email confirmed, encrypted password, communities, and userTokens.\nFields:\n\t- name (String): represents a user's personal name.\n\t- userId (String): represents a unique identifier for each user in the system.\n\t- email (String): in the User class represents an identifier for a user's email address within the service.\n\t- emailConfirmed (boolean): indicates whether an email address associated with the user has been confirmed through a verification process.\n\t- encryptedPassword (String): represents an encrypted password for the user's account in the system.\n\t- communities (Set<Community>): represents a set of Community objects associated with each user in the system.\n\t- userTokens (Set<SecurityToken>): is a set of SecurityToken objects associated with each User entity through the tokenOwner attribute.\n\n",
            "fields": [
              {
                "name": "name",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "User",
                "description": "represents a user's personal name."
              },
              {
                "name": "userId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "User",
                "description": "represents a unique identifier for each user in the system."
              },
              {
                "name": "email",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "User",
                "description": "in the User class represents an identifier for a user's email address within the service."
              },
              {
                "name": "emailConfirmed",
                "type_name": "boolean",
                "value": "false",
                "constant": false,
                "class_name": "User",
                "description": "indicates whether an email address associated with the user has been confirmed through a verification process."
              },
              {
                "name": "encryptedPassword",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "User",
                "description": "represents an encrypted password for the user's account in the system."
              },
              {
                "name": "communities",
                "type_name": "Set<Community>",
                "value": "new HashSet<>()",
                "constant": false,
                "class_name": "User",
                "description": "represents a set of Community objects associated with each user in the system."
              },
              {
                "name": "userTokens",
                "type_name": "Set<SecurityToken>",
                "value": "new HashSet<>()",
                "constant": false,
                "class_name": "User",
                "description": "is a set of SecurityToken objects associated with each User entity through the tokenOwner attribute."
              }
            ],
            "name": "User",
            "location": {
              "start": 61,
              "insert": 43,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 42,
                "end": 60
              }
            },
            "item_type": "class",
            "length": 37,
            "docLength": 18
          }
        ]
      }
    }
  },
  {
    "name": "AmenityBookingItemRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/AmenityBookingItemRepository.java",
    "content": {
      "structured": {
        "description": "An interface called AmenityBookingItemRepository that extends the JpaRepository interface and provides a method for finding an Optional<AmenityBookingItem> by amenityBookingItemId.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.repositories.AmenityBookingItemRepository Pages: 1 -->\n<svg width=\"184pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 184.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.repositories.AmenityBookingItemRepository</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"174.5,-30 1.5,-30 1.5,0 174.5,0 174.5,-30\"/>\n<text text-anchor=\"start\" x=\"9.5\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.repositories.</text>\n<text text-anchor=\"middle\" x=\"88\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">AmenityBookingItemRepository</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"176,-96 0,-96 0,-66 176,-66 176,-96\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">JpaRepository&lt; AmenityBooking</text>\n<text text-anchor=\"middle\" x=\"88\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Item, String &gt;</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M88,-55.54C88,-46.96 88,-37.61 88,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.5,-55.8 88,-65.8 91.5,-55.8 84.5,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "4628da14-6f84-978d-5a47-49f840027d2e",
            "ancestors": [],
            "type": "function",
            "description": "extends JpaRepository and provides a method for finding an Optional<AmenityBookingItem> by amenityBookingItemId.",
            "name": "AmenityBookingItemRepository",
            "location": {
              "start": 11,
              "insert": 7,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 6,
                "end": 10
              }
            },
            "item_type": "interface",
            "length": 3,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "AmenityRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/AmenityRepository.java",
    "content": {
      "structured": {
        "description": "An interface `AmenityRepository` for interacting with amenities in a database using Spring Data JPA. The interface provides methods for querying and retrieving amenities based on their amenity ID, along with an optional community graph. The code also includes a query method that allows for searching amenities by their ID, and another method that allows for searching amenities by their ID with an optional community graph.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.Amenity Pages: 1 -->\n<svg width=\"187pt\" height=\"137pt\"\n viewBox=\"0.00 0.00 187.00 137.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 133)\">\n<title>com.myhome.domain.Amenity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"173.5,-19 5.5,-19 5.5,0 173.5,0 173.5,-19\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"179,-74 0,-74 0,-55 179,-55 179,-74\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-62\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-44.66C89.5,-35.93 89.5,-25.99 89.5,-19.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-44.75 89.5,-54.75 93,-44.75 86,-44.75\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"126.5,-129 52.5,-129 52.5,-110 126.5,-110 126.5,-129\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-117\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-99.66C89.5,-90.93 89.5,-80.99 89.5,-74.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-99.75 89.5,-109.75 93,-99.75 86,-99.75\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "fc50e507-6e5e-48b6-cb4b-fd6e02e26bef",
            "ancestors": [],
            "type": "function",
            "description": "provides methods for querying and retrieving amenities based on their amenity ID, along with an optional community graph.",
            "name": "AmenityRepository",
            "location": {
              "start": 30,
              "insert": 26,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 25,
                "end": 29
              }
            },
            "item_type": "interface",
            "length": 8,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "CommunityHouseRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/CommunityHouseRepository.java",
    "content": {
      "structured": {
        "description": "An interface `CommunityHouseRepository` that implements Spring Data's `PagingAndSortingRepository` for handling CommunityHouse objects. The interface provides methods for finding individual CommunityHouses by `houseId`, as well as retrieving all CommunityHouses in a community by `communityId`. Additionally, the interface includes methods for finding CommunityHouses with specific house members or communities.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.CommunityHouse Pages: 1 -->\n<svg width=\"192pt\" height=\"148pt\"\n viewBox=\"0.00 0.00 192.00 148.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 144)\">\n<title>com.myhome.domain.CommunityHouse</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"184,-30 0,-30 0,0 184,0 184,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"92\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"181.5,-85 2.5,-85 2.5,-66 181.5,-66 181.5,-85\"/>\n<text text-anchor=\"middle\" x=\"92\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M92,-55.65C92,-47.36 92,-37.78 92,-30.11\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"88.5,-55.87 92,-65.87 95.5,-55.87 88.5,-55.87\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"129,-140 55,-140 55,-121 129,-121 129,-140\"/>\n<text text-anchor=\"middle\" x=\"92\" y=\"-128\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M92,-110.66C92,-101.93 92,-91.99 92,-85.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"88.5,-110.75 92,-120.75 95.5,-110.75 88.5,-110.75\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "81481f84-d5ae-d7a6-2247-0918cf1f66ba",
            "ancestors": [],
            "type": "function",
            "description": "provides methods for interacting with CommunityHouse objects, including finding individual CommunityHouses by houseId and retrieving all CommunityHouses in a community by communityId.",
            "name": "CommunityHouseRepository",
            "location": {
              "start": 34,
              "insert": 29,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 28,
                "end": 33
              }
            },
            "item_type": "interface",
            "length": 18,
            "docLength": 5
          }
        ]
      }
    }
  },
  {
    "name": "CommunityRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/CommunityRepository.java",
    "content": {
      "structured": {
        "description": "A CommunityRepository interface that extends Spring Data JPA's PagingAndSortingRepository. It provides methods for finding specific communities by communityId, querying for communities with houses, admins, or amenities, and checking if a community exists by communityId. The interface uses EntityGraph to specify the graph traversal for each query method.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.Community Pages: 1 -->\n<svg width=\"192pt\" height=\"137pt\"\n viewBox=\"0.00 0.00 192.00 137.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 133)\">\n<title>com.myhome.domain.Community</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"184,-19 0,-19 0,0 184,0 184,-19\"/>\n<text text-anchor=\"middle\" x=\"92\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"181.5,-74 2.5,-74 2.5,-55 181.5,-55 181.5,-74\"/>\n<text text-anchor=\"middle\" x=\"92\" y=\"-62\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M92,-44.66C92,-35.93 92,-25.99 92,-19.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"88.5,-44.75 92,-54.75 95.5,-44.75 88.5,-44.75\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"129,-129 55,-129 55,-110 129,-110 129,-129\"/>\n<text text-anchor=\"middle\" x=\"92\" y=\"-117\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M92,-99.66C92,-90.93 92,-80.99 92,-74.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"88.5,-99.75 92,-109.75 95.5,-99.75 88.5,-99.75\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "9f85d98c-71d2-85b4-0d48-6da8c9142f0b",
            "ancestors": [],
            "type": "function",
            "description": "provides a set of methods for interacting with Community entities in a Spring Data JPA environment, including finding specific communities by communityId, querying for communities with houses, admins, or amenities, and checking if a community exists.",
            "name": "CommunityRepository",
            "location": {
              "start": 32,
              "insert": 27,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 26,
                "end": 31
              }
            },
            "item_type": "interface",
            "length": 19,
            "docLength": 5
          }
        ]
      }
    }
  },
  {
    "name": "HouseMemberDocumentRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/HouseMemberDocumentRepository.java",
    "content": {
      "structured": {
        "description": "An interface HouseMemberDocumentRepository for managing HouseMemberDocument objects using Spring Data JPA. The interface extends the JpaRepository<HouseMemberDocument, Long> interface and defines no methods by default.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.repositories.HouseMemberDocumentRepository Pages: 1 -->\n<svg width=\"199pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 199.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.repositories.HouseMemberDocumentRepository</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"191,-30 0,-30 0,0 191,0 191,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.repositories.</text>\n<text text-anchor=\"middle\" x=\"95.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">HouseMemberDocumentRepository</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"179,-96 12,-96 12,-66 179,-66 179,-96\"/>\n<text text-anchor=\"start\" x=\"20\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">JpaRepository&lt; HouseMember</text>\n<text text-anchor=\"middle\" x=\"95.5\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document, Long &gt;</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M95.5,-55.54C95.5,-46.96 95.5,-37.61 95.5,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"92,-55.8 95.5,-65.8 99,-55.8 92,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "2c958a0b-afbd-1d9b-8848-05b330839dfe",
            "ancestors": [],
            "type": "function",
            "description": "defines a JPA repository for managing HouseMemberDocument objects using Spring Data JPA.",
            "name": "HouseMemberDocumentRepository",
            "location": {
              "start": 26,
              "insert": 22,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 21,
                "end": 25
              }
            },
            "item_type": "interface",
            "length": 2,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "HouseMemberRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/HouseMemberRepository.java",
    "content": {
      "structured": {
        "description": "An interface for a HouseMemberRepository in a Spring Data repository context. The interface provides methods for interacting with the HouseMember entity, including finding a member by ID, retrieving a list of members associated with a specific house ID, and retrieving a list of members associated with a specific user ID.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.repositories.HouseMemberRepository Pages: 1 -->\n<svg width=\"185pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 185.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.repositories.HouseMemberRepository</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"162.5,-30 14.5,-30 14.5,0 162.5,0 162.5,-30\"/>\n<text text-anchor=\"start\" x=\"22.5\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.repositories.</text>\n<text text-anchor=\"middle\" x=\"88.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">HouseMemberRepository</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"177,-96 0,-96 0,-66 177,-66 177,-96\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">CrudRepository&lt; HouseMember,</text>\n<text text-anchor=\"middle\" x=\"88.5\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\"> Long &gt;</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M88.5,-55.54C88.5,-46.96 88.5,-37.61 88.5,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"85,-55.8 88.5,-65.8 92,-55.8 85,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "73fb9bb5-a6d8-dab1-2540-27c62435bf7c",
            "ancestors": [],
            "type": "function",
            "description": "provides methods for interacting with the HouseMember entity in a Spring Data repository context.",
            "name": "HouseMemberRepository",
            "location": {
              "start": 29,
              "insert": 25,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 24,
                "end": 28
              }
            },
            "item_type": "interface",
            "length": 8,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "PaymentRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/PaymentRepository.java",
    "content": {
      "structured": {
        "description": "An interface `PaymentRepository` that extends `JpaRepository`. The interface provides two methods: `findByPaymentId` and `deleteByPaymentId`, which allow for interacting with payments in a Spring Data JPA context.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.repositories.PaymentRepository Pages: 1 -->\n<svg width=\"156pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 156.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.repositories.PaymentRepository</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"148,-30 0,-30 0,0 148,0 148,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.repositories.</text>\n<text text-anchor=\"middle\" x=\"74\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">PaymentRepository</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"144.5,-96 3.5,-96 3.5,-66 144.5,-66 144.5,-96\"/>\n<text text-anchor=\"start\" x=\"11.5\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">JpaRepository&lt; Payment,</text>\n<text text-anchor=\"middle\" x=\"74\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\"> Long &gt;</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M74,-55.54C74,-46.96 74,-37.61 74,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"70.5,-55.8 74,-65.8 77.5,-55.8 70.5,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "6d123f58-c9bc-30bf-a54d-fa857e915a1d",
            "ancestors": [],
            "type": "function",
            "description": "extends JpaRepository and provides two methods for interacting with payments: findByPaymentId and deleteByPaymentId.",
            "name": "PaymentRepository",
            "location": {
              "start": 26,
              "insert": 22,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 21,
                "end": 25
              }
            },
            "item_type": "interface",
            "length": 5,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "SecurityTokenRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/SecurityTokenRepository.java",
    "content": {
      "structured": {
        "description": "An interface `SecurityTokenRepository` that extends `JpaRepository`, responsible for managing SecurityTokens in a database using Spring Data JPA. The interface includes methods for interacting with SecurityTokens in the database, such as finding, saving, and deleting them.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.repositories.SecurityTokenRepository Pages: 1 -->\n<svg width=\"174pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 174.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.repositories.SecurityTokenRepository</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"157,-30 9,-30 9,0 157,0 157,-30\"/>\n<text text-anchor=\"start\" x=\"17\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.repositories.</text>\n<text text-anchor=\"middle\" x=\"83\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">SecurityTokenRepository</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"166,-96 0,-96 0,-66 166,-66 166,-96\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">JpaRepository&lt; SecurityToken,</text>\n<text text-anchor=\"middle\" x=\"83\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\"> Long &gt;</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M83,-55.54C83,-46.96 83,-37.61 83,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"79.5,-55.8 83,-65.8 86.5,-55.8 79.5,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "5da43ab2-3af0-2a97-2641-599aea47d941",
            "ancestors": [],
            "type": "function",
            "description": "extends JpaRepository and manages SecurityTokens in a database using Spring Data JPA.",
            "name": "SecurityTokenRepository",
            "location": {
              "start": 10,
              "insert": 6,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 5,
                "end": 9
              }
            },
            "item_type": "interface",
            "length": 2,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "UserRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/UserRepository.java",
    "content": {
      "structured": {
        "description": "An interface called `UserRepository`, which is a Spring Data JPA repository for handling user-related operations. The interface provides methods for retrieving and manipulating users, including finding a user by email or ID, finding a user's communities or tokens, and listing all users in a pageable manner based on their communities.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.User Pages: 1 -->\n<svg width=\"187pt\" height=\"137pt\"\n viewBox=\"0.00 0.00 187.00 137.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 133)\">\n<title>com.myhome.domain.User</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"164,-19 15,-19 15,0 164,0 164,-19\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"179,-74 0,-74 0,-55 179,-55 179,-74\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-62\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-44.66C89.5,-35.93 89.5,-25.99 89.5,-19.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-44.75 89.5,-54.75 93,-44.75 86,-44.75\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"126.5,-129 52.5,-129 52.5,-110 126.5,-110 126.5,-129\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-117\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-99.66C89.5,-90.93 89.5,-80.99 89.5,-74.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-99.75 89.5,-109.75 93,-99.75 86,-99.75\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "9f6e9699-1044-c794-8e46-e90aaef26a11",
            "ancestors": [],
            "type": "function",
            "description": "provides methods for retrieving and manipulating users in a Spring Data JPA repository context.",
            "name": "UserRepository",
            "location": {
              "start": 33,
              "insert": 29,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 28,
                "end": 32
              }
            },
            "item_type": "interface",
            "length": 21,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "AppUserDetailsService.java",
    "path": "service/src/main/java/com/myhome/security/AppUserDetailsService.java",
    "content": {
      "structured": {
        "description": "An custom implementation of Spring Security's `UserDetailsService` interface called `AppUserDetailsService`. It retrieves user details from a repository and maps them to a `UserDto` object using a mapper. The `loadUserByUsername()` method loads a user by their username and returns a `User` object with relevant details, while the `getUserDetailsByUsername()` method retrieves a user's details from the repository and maps them to a `UserDto` object using the mapper.",
        "items": [
          {
            "id": "cee6118c-8e26-74ae-2a48-09c3525dacdb",
            "ancestors": [],
            "type": "function",
            "description": "is an implementation of the UserDetailsService interface, providing methods for loading and retrieving user details from a repository using a mapper. The class loads a user by their username and returns a `User` object with relevant details, and also provides a method to retrieve a user's details from the repository and map them to a `UserDto` object using a mapper.",
            "name": "AppUserDetailsService",
            "location": {
              "start": 40,
              "insert": 33,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 32,
                "end": 39
              }
            },
            "item_type": "class",
            "length": 64,
            "docLength": 7
          },
          {
            "id": "908ef49d-b37a-51aa-7c44-7e6ae67d5017",
            "ancestors": [
              "cee6118c-8e26-74ae-2a48-09c3525dacdb"
            ],
            "type": "function",
            "description": "loads a user by their username and returns a `UserDetails` object containing the user's email address, encrypted password, and other attributes such as role and privileges.",
            "params": [
              {
                "name": "username",
                "type_name": "String",
                "description": "username for which the user details are to be loaded.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "User",
              "description": "a `UserDetails` object containing user information.\n\n* `email`: The email address of the user.\n* `encryptedPassword`: The encrypted password for the user.\n* `active`: A boolean indicating whether the user is active (true) or inactive (false).\n* `accountNonExpired`: A boolean indicating whether the user's account has not expired (true) or has expired (false).\n* `accountNonLocked`: A boolean indicating whether the user's account is unlocked (true) or locked (false).\n* `credentialsNonExpired`: A boolean indicating whether the user's credentials have not expired (true) or have expired (false).\n* `tokenNonExpired`: A boolean indicating whether the user's token has not expired (true) or has expired (false).\n\nNo summary is provided at the end of the explanation.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "import org.springframework.security.core.userdetails.UserDetails;\nimport com.myhome.security.AppUserDetailsService;\n\npublic class AppUserDetailsServiceExample {\n    public static void main(String[] args) {\n        String username = \"prathab@email.com\";\n        UserDetails user = new AppUserDetailsService().loadUserByUsername(username);\n        System.out.println(user.getUsername()); // Output: prathab@email.com\n    }\n}\n",
              "description": ""
            },
            "name": "loadUserByUsername",
            "location": {
              "start": 63,
              "insert": 46,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 45,
                "end": 62
              }
            },
            "item_type": "method",
            "length": 16,
            "docLength": 17
          },
          {
            "id": "3382b427-2813-6591-9b40-c5f4e054034c",
            "ancestors": [
              "cee6118c-8e26-74ae-2a48-09c3525dacdb"
            ],
            "type": "function",
            "description": "retrieves a `User` object from the repository based on the given username, maps it to a `UserDto`, and returns the resulting `UserDto`.",
            "params": [
              {
                "name": "username",
                "type_name": "String",
                "description": "email address of the user for which details are being retrieved.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "UserDto",
              "description": "a `UserDto` object representing the user with the specified username.\n\nThe function returns a `UserDto` object, which represents a user in a specific format suitable for further processing or display. The `UserDto` object contains information about the user, such as their email and name.\n\nThe function takes a `username` parameter, which is used to retrieve the corresponding user from the `userRepository`. If the user is not found, a `UsernameNotFoundException` is thrown.\n\nThe function calls the `userMapper` method to map the retrieved user object to the `UserDto` format. This mapping involves converting the original user data into a structured format that can be easily processed or displayed.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "String username = \"username\";\nUserDto userDetails = AppUserDetailsService.getUserDetailsByUsername(username);\nSystem.out.println(userDetails);\n",
              "description": "\nIn this example, the `AppUserDetailsService` class is instantiated and then the `getUserDetailsByUsername` method is called with a string parameter of \"username\". The returned value is then printed to the console.\n\nThis code should work correctly because it uses a valid username as input and retrieves the corresponding user details from the database using the `findByEmail` method provided by Spring Security."
            },
            "name": "getUserDetailsByUsername",
            "location": {
              "start": 96,
              "insert": 80,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 79,
                "end": 95
              }
            },
            "item_type": "method",
            "length": 7,
            "docLength": 16
          }
        ]
      }
    }
  },
  {
    "name": "CommunityAuthorizationFilter.java",
    "path": "service/src/main/java/com/myhome/security/CommunityAuthorizationFilter.java",
    "content": {
      "structured": {
        "description": "A filter that checks if the user is an administrator of a specific community based on the request URI. If the user is not an admin, it returns an unauthorized response. The filter uses the `BasicAuthenticationFilter` class and the `CommunityService` class to check the user's administrative privileges for the community. It also uses the `HttpServletRequest` and `HttpServletResponse` classes to process the incoming request and generate a response.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.User Pages: 1 -->\n<svg width=\"187pt\" height=\"137pt\"\n viewBox=\"0.00 0.00 187.00 137.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 133)\">\n<title>com.myhome.domain.User</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"164,-19 15,-19 15,0 164,0 164,-19\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"179,-74 0,-74 0,-55 179,-55 179,-74\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-62\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-44.66C89.5,-35.93 89.5,-25.99 89.5,-19.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-44.75 89.5,-54.75 93,-44.75 86,-44.75\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"126.5,-129 52.5,-129 52.5,-110 126.5,-110 126.5,-129\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-117\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-99.66C89.5,-90.93 89.5,-80.99 89.5,-74.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-99.75 89.5,-109.75 93,-99.75 86,-99.75\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "41069b12-77c1-989a-7a43-97b75e431bea",
            "ancestors": [],
            "type": "function",
            "description": "is a subclass of Servlet Filter that checks if the current user has administrative privileges for a community based on the request URL. If not authorized, it sets the status code to HTTP 401 Unauthorized and returns. Otherwise, it delegates to the superclass's `doFilterInternal` method.",
            "name": "CommunityAuthorizationFilter",
            "location": {
              "start": 26,
              "insert": 19,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 18,
                "end": 25
              }
            },
            "item_type": "class",
            "length": 115,
            "docLength": 7
          },
          {
            "id": "dc67d053-a9fa-b0a7-f549-0cc732981376",
            "ancestors": [
              "41069b12-77c1-989a-7a43-97b75e431bea"
            ],
            "type": "function",
            "description": "in the given Java code checks if the request URI matches a pattern for administrative requests and whether the user is an administrator or not. If the user is not an administrator, it sets the response status to `SC_UNAUTHORIZED`. If the user is an administrator, it delegates the processing to the parent `doFilterInternal` method of the filter chain.",
            "params": [
              {
                "name": "request",
                "type_name": "HttpServletRequest",
                "description": "HTTP request being processed by the filter.\n\n* `request.getRequestURI()` returns the request URL, which is matched against the pattern `addAdminRequestPattern`.\n* `urlMatcher.find()` checks if the URL matches the pattern, and returns `true` if it does.\n* `!isUserCommunityAdmin(request)` checks whether the user has administrative privileges for the community, and returns `true` if they do not have such privileges.\n\nThe remaining portion of the function is executed after these checks are performed.",
                "complex_type": true
              },
              {
                "name": "response",
                "type_name": "HttpServletResponse",
                "description": "HttpServletResponse object that will be used to handle the filtered request.\n\n* `request`: The incoming HTTP request from the client, which is passed as an argument to this method.\n* `chain`: The next Servlet filter in the chain that should be executed.\n* `isUserCommunityAdmin`: A boolean value indicating whether the user is a community admin or not.\n* `response`: The output response object, which may be modified by this method. Its properties are:\n\t+ `setStatus()`: Sets the status code of the response, which can be an HTTP status code (e.g., 200, 404, etc.).\n\t+ `getStatus()`: Returns the current status code of the response.",
                "complex_type": true
              },
              {
                "name": "chain",
                "type_name": "FilterChain",
                "description": "next filter in the filtering chain to be executed after the current filter has completed its operation.\n\n* `HttpServletRequest request`: The current HTTP request.\n* `HttpServletResponse response`: The current HTTP response.\n* `FilterChain chain`: A filter chain object that represents the sequence of filters in the filter chain.\n\nThe `chain` object has various attributes and methods, including:\n\n* `doFilter`(): Performs the actual filtering of the request.\n* `getNext()`: Returns the next filter in the chain or `null` if there are no more filters.\n* `setNext()`: Sets the next filter in the chain.\n* `add`(): Adds a new filter to the end of the chain.\n* `remove`(): Removes a filter from the chain.",
                "complex_type": true
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\nprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException, ServletException {\n    Matcher urlMatcher = addAdminRequestPattern.matcher(request.getRequestURI());\n    \n    if (urlMatcher.find() && !isUserCommunityAdmin(request)) {\n        response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n        return;\n    }\n    \n    super.doFilterInternal(request, response, chain);\n}\n",
              "description": "\nIn this example, the method is overriding the doFilterInternal() method in a Spring filter and is checking whether the current user is an administrator of a community based on the community ID and the user's principal ID. If the user is not an administrator, it sets the response status to SC_UNAUTHORIZED (401) and returns early. Otherwise, it allows the request to continue by calling super.doFilterInternal().\n\nIt's important to note that this method would be used in a Spring filter implementation, so it has access to the HttpServletRequest and HttpServletResponse objects that are available to any Spring filter. It also has access to the FilterChain object, which allows for further filtering or modification of the incoming request."
            },
            "name": "doFilterInternal",
            "location": {
              "start": 90,
              "insert": 38,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 37,
                "end": 89
              }
            },
            "item_type": "method",
            "length": 13,
            "docLength": 52
          },
          {
            "id": "39077a46-ea4b-5f9d-474e-bc5ea2d44f09",
            "ancestors": [
              "41069b12-77c1-989a-7a43-97b75e431bea"
            ],
            "type": "function",
            "description": "determines if a user is an administrator of a community based on their user ID and the community ID in the request URL. It retrieves the list of community admins from the database and filters them to find the user's admin status. If the user is an admin, the function returns `true`, otherwise it returns `false`.",
            "params": [
              {
                "name": "request",
                "type_name": "HttpServletRequest",
                "description": "HTTP request being processed and provides the community ID from the request URI.\n\n* `request`: A `HttpServletRequest` object representing an HTTP request.\n* `getRequestURI()`: Returns the URI of the current request, without any path information.\n* `split('/')`\": Splits the URI into a array of sub-strings using the '/' character as the delimiter.\n* `findCommunityAdminsById(communityId, null)`: A method of the `communityService` class that retrieves a list of community admins for a given community ID. The `null` parameter represents the absence of any filters or sorting criteria.\n* `optional`: An optional object representing the result of the method call, which can be either `Optional<List<User>>` or `Optional<User>`.\n* `get()`: Extracts the list of community admins from the optional object, if it is not empty.\n* `stream()`: Streams the list of community admins to filter out any admin whose user ID does not match the authenticated user's ID.\n* `findFirst()`: Finds the first admin in the streamed list that matches the condition, or returns `null` if no such admin is found.\n* `orElse(null)`: Returns the admin if a match is found, or `null` otherwise.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "boolean",
              "description": "a boolean value indicating whether the current user is an administrator of a community based on their ID.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "boolean isUserCommunityAdmin = isUserCommunityAdmin(request);\nif (isUserCommunityAdmin) {\n    // Execute actions only if the user is a community admin.\n} else {\n    // Return unauthorized status code to indicate that the user does not have access.\n    response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n}\n",
              "description": "\nIn this example, we call the isUserCommunityAdmin method with request as a parameter and store its return value in a variable called isUserCommunityAdmin. We then use an if statement to check whether the user is a community admin or not and execute actions accordingly. If the user is not a community admin, we set the response status to 401 (Unauthorized) to indicate that they do not have access.\nNote that this example assumes that the isUserCommunityAdmin method has been defined and imported into the code as shown above."
            },
            "name": "isUserCommunityAdmin",
            "location": {
              "start": 119,
              "insert": 104,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 103,
                "end": 118
              }
            },
            "item_type": "method",
            "length": 21,
            "docLength": 15
          }
        ]
      }
    }
  },
  {
    "name": "MyHomeAuthorizationFilter.java",
    "path": "service/src/main/java/com/myhome/security/MyHomeAuthorizationFilter.java",
    "content": {
      "structured": {
        "description": "An authentication filter for a web application that uses JWT tokens to authenticate users. The filter checks if an authentication token is present in the HTTP request's `Authorization` header, decodes it using the `appJwtEncoderDecoder` class, and creates a `UsernamePasswordAuthenticationToken` object representing the authenticated user. If the token is null or cannot be decoded, the filter returns a null value. The code uses packages from the Spring Web framework, including `HttpServletRequest`, `HttpServletResponse`, `FilterChain`, and `IOException`.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.security.MyHomeAuthorizationFilter Pages: 1 -->\n<svg width=\"180pt\" height=\"93pt\"\n viewBox=\"0.00 0.00 180.00 93.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 89)\">\n<title>com.myhome.security.MyHomeAuthorizationFilter</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"172,-30 0,-30 0,0 172,0 172,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.security.MyHome</text>\n<text text-anchor=\"middle\" x=\"86\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">AuthorizationFilter</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"155.5,-85 16.5,-85 16.5,-66 155.5,-66 155.5,-85\"/>\n<text text-anchor=\"middle\" x=\"86\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BasicAuthenticationFilter</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M86,-55.65C86,-47.36 86,-37.78 86,-30.11\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"82.5,-55.87 86,-65.87 89.5,-55.87 82.5,-55.87\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "af5b0576-de22-08b5-214a-f2267d62a090",
            "ancestors": [],
            "type": "function",
            "description": "is a subclass of `FilterChain` that checks for an authorization token in the HTTP request's `Authorization` header and decodes it to create a `UsernamePasswordAuthenticationToken`. If the token is null or cannot be decoded, the filter returns a 401 Unauthorized response. Otherwise, it passes the request through the filter chain.",
            "name": "MyHomeAuthorizationFilter",
            "location": {
              "start": 40,
              "insert": 33,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 32,
                "end": 39
              }
            },
            "item_type": "class",
            "length": 145,
            "docLength": 7
          },
          {
            "id": "58f6ea81-ec57-c3ac-3746-9878f0861bc1",
            "ancestors": [
              "af5b0576-de22-08b5-214a-f2267d62a090"
            ],
            "type": "function",
            "description": "authenticates requests based on a provided header name and prefix. If the header is not present or does not match the prefix, it passes the request to the next chain element. Otherwise, it sets an authentication token using the provided header value and passes the request to the next chain element.",
            "params": [
              {
                "name": "request",
                "type_name": "HttpServletRequest",
                "description": "HTTP request being filtered.\n\n* `HttpServletRequest request`: This is an instance of the `HttpServletRequest` class, which contains information about the incoming HTTP request.\n* `authHeaderName`: A string property representing the name of the authentication header field in the HTTP request.\n* `authHeaderPrefix`: Another string property representing a prefix to be used when checking the authentication header field.\n* `authHeader`: The value of the authentication header field in the HTTP request, which is either null or starts with the prefix provided by the `authHeaderPrefix` property.\n* `getAuthentication()`: A method that returns an instance of the `UsernamePasswordAuthenticationToken` class, which contains information about the authenticated user.\n* `SecurityContextHolder.getContext().setAuthentication()`: This line sets the authentication token to be used in the current request by calling the `setAuthentication()` method of the `SecurityContextHolder`.",
                "complex_type": true
              },
              {
                "name": "response",
                "type_name": "HttpServletResponse",
                "description": "HttpServletResponse object that is the target of the filter's action.\n\n* `HttpServletRequest request`: This is the original HTTP request object that triggered the filter chain execution.\n* `HttpServletResponse response`: This is the filtered HTTP response object, which may have been modified by the filter chain execution.\n* `FilterChain chain`: This is the chain of filters that are applied to the request before it reaches the servlet.\n* `IOException`: This is a subclass of runtime exception that indicates an I/O error occurred while processing the request or response.\n* `ServletException`: This is a subclass of runtime exception that indicates a problem occurred while processing the request or response.",
                "complex_type": true
              },
              {
                "name": "chain",
                "type_name": "FilterChain",
                "description": "next filter in the filter chain that the current filter is processing, and it is used to pass the request and response objects to the subsequent filter for further processing.\n\n* `HttpServletRequest request`: The incoming HTTP request object.\n* `HttpServletResponse response`: The outgoing HTTP response object.\n* `FilterChain chain`: An instance of the `FilterChain` class, which represents the filter chain that this filter is a part of.\n* `IOException`: A subclass of the `Throwable` class that represents an input/output error.\n* `ServletException`: A subclass of the `Throwable` class that represents a servlet-specific error.",
                "complex_type": true
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\n  protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response,\n      FilterChain chain) throws IOException, ServletException {\n    String authHeaderName = environment.getProperty(\"authorization.token.header.name\");\n    String authHeaderPrefix = environment.getProperty(\"authorization.token.header.prefix\");\n\n    String authHeader = request.getHeader(authHeaderName);\n    if (authHeader == null || !authHeader.startsWith(authHeaderPrefix)) {\n      chain.doFilter(request, response);\n      return;\n    }\n\n    UsernamePasswordAuthenticationToken authentication = getAuthentication(request);\n    SecurityContextHolder.getContext().setAuthentication(authentication);\n    chain.doFilter(request, response);\n  }\n",
              "description": "\nThe method takes an `HttpServletRequest` object and a `FilterChain` object as input, and returns nothing. The method firstly retrieves the authorization header from the request using `request.getHeader(authHeaderName)` and checks if it is null or not starting with the prefix specified in the properties file using `!authHeader.startsWith(authHeaderPrefix)`. If either of those conditions are true, then the filter chain is executed. \nIf the condition is false, the method firstly retrieves the authentication token from the request using `getAuthentication(request)` and sets it in the security context using `SecurityContextHolder.getContext().setAuthentication(authentication);`. Finally, the filter chain is executed."
            },
            "name": "doFilterInternal",
            "location": {
              "start": 99,
              "insert": 54,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 53,
                "end": 98
              }
            },
            "item_type": "method",
            "length": 16,
            "docLength": 45
          },
          {
            "id": "c57791e7-3308-06a1-c24d-d28a94909c1f",
            "ancestors": [
              "af5b0576-de22-08b5-214a-f2267d62a090"
            ],
            "type": "function",
            "description": "retrieves an authentication token from a request header, decodes it, and returns a `UsernamePasswordAuthenticationToken` instance representing the authenticated user.",
            "params": [
              {
                "name": "request",
                "type_name": "HttpServletRequest",
                "description": "HTTP request that contains the authentication token in the header.\n\n* `request.getHeader()` retrieves the value of an HTTP header field from the incoming request. In this case, it retrieves the authorization token header field named `environment.getProperty(\"authorization.token.header.name\")`.\n* `authHeader.replace()` replaces a prefix string with a new value in the authorization token header field. The prefix is specified by `environment.getProperty(\"authorization.token.header.prefix\")`.\n* `appJwtEncoderDecoder.decode()` deserializes the authorization token into an instance of `AppJwt`. It takes the token string as input and a secret key specified by `environment.getProperty(\"token.secret\")` to validate the token.\n* `jwt.getUserId()` retrieves the user ID associated with the decoded JWT token.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "UsernamePasswordAuthenticationToken",
              "description": "a `UsernamePasswordAuthenticationToken` object representing a user authenticated through an authorization token.\n\n* The `String` variable `authHeader` is extracted from the `HttpServletRequest` parameter `request`.\n* The `authHeader` value is then trimmed by removing the prefix specified in the `environment.getProperty(\"authorization.token.header.prefix\")` property.\n* The resulting token is then decoded using the `appJwtEncoderDecoder.decode()` method and passed to the `environment.getProperty(\"token.secret\")` property for decoding.\n* If the decoded token contains a user ID, a new `UsernamePasswordAuthenticationToken` object is created with the user ID as the username and an empty list of credentials.\n\nIn summary, the `getAuthentication` function extracts the authentication token from the HTTP request header, decodes it using the provided secret key, and returns a `UsernamePasswordAuthenticationToken` object if the decoded token contains a user ID.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "HttpServletRequest request = ...; // Obtain the HttpServletRequest object.\nUsernamePasswordAuthenticationToken authentication = getAuthentication(request);\nSecurityContextHolder.getContext().setAuthentication(authentication);\nchain.doFilter(request, response);\n",
              "description": "\nExplanation: The above code first obtains a `HttpServletRequest` object and passes it to the `getAuthentication()` method to retrieve the authentication token from the request header. Next, the retrieved authentication token is set in the current security context using `SecurityContextHolder.getContext().setAuthentication()`. Finally, the `FilterChain` chain is executed by passing the same request object to the filter chain.\n\nNote that this code assumes that the environment variable \"authorization.token.header.name\" has been set to \"Authorization\" and the environment variable \"authorization.token.header.prefix\" has been set to \"Bearer \". If these variables have different values, then the appropriate replacement needs to be made in the call to `getHeader()`.\n\nAnother example would be:\n"
            },
            "name": "getAuthentication",
            "location": {
              "start": 168,
              "insert": 116,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 115,
                "end": 167
              }
            },
            "item_type": "method",
            "length": 16,
            "docLength": 52
          }
        ]
      }
    }
  },
  {
    "name": "WebSecurity.java",
    "path": "service/src/main/java/com/myhome/security/WebSecurity.java",
    "content": {
      "structured": {
        "description": "Security settings and configurations for an application using Spring Security. It enables CORS functionality, disables CSRF protection, and configures session management. Additionally, it sets up filters for authenticating and authorizing requests based on community authorization.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.security.CommunityAuthorizationFilter Pages: 1 -->\n<svg width=\"193pt\" height=\"93pt\"\n viewBox=\"0.00 0.00 193.00 93.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 89)\">\n<title>com.myhome.security.CommunityAuthorizationFilter</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"185,-30 0,-30 0,0 185,0 185,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.security.Community</text>\n<text text-anchor=\"middle\" x=\"92.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">AuthorizationFilter</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"162,-85 23,-85 23,-66 162,-66 162,-85\"/>\n<text text-anchor=\"middle\" x=\"92.5\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BasicAuthenticationFilter</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M92.5,-55.65C92.5,-47.36 92.5,-37.78 92.5,-30.11\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"89,-55.87 92.5,-65.87 96,-55.87 89,-55.87\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "159fe549-0b73-15ac-7743-33dc4fdbb81f",
            "ancestors": [],
            "type": "function",
            "description": "is used to configure security settings for an Spring Boot application. It allows you to enable CORS functionality, disable CSRF protection, and configure session management policies. Additionally, it sets up authorization rules for various HTTP methods and URL paths using the `authorizeRequests` method. The `getCommunityFilter` method creates a filter that combines the `AuthenticationManager` and `CommunityService` objects to enable community-related authentication and authorization functionality. Finally, the `configure` method configures the `AuthenticationManagerBuilder` instance by specifying the user details service and password encoder used for customizing authentication logic.",
            "name": "WebSecurity",
            "location": {
              "start": 43,
              "insert": 36,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 35,
                "end": 42
              }
            },
            "item_type": "class",
            "length": 96,
            "docLength": 7
          },
          {
            "id": "c6d782b0-4c68-7f8a-db4e-30ab76e04f73",
            "ancestors": [
              "159fe549-0b73-15ac-7743-33dc4fdbb81f"
            ],
            "type": "function",
            "description": "sets up security configurations for an API. It disables CSRF and frames, allows anonymous access to certain endpoints, and adds a filter to authorize requests based on the user's role.",
            "params": [
              {
                "name": "http",
                "type_name": "HttpSecurity",
                "description": "HTTP security configuration object, which is used to configure various settings for securing the application's endpoints.\n\n* `cors()`: Enables Cross-Origin Resource Sharing (CORS) functionality.\n* `csrf()`.disable(): Disables Cross-Site Request Forgery (CSRF) protection.\n* `headers().frameOptions()`.disable(): Disables the ability to use frame options in HTTP requests.\n* `sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)`: Configures session creation policy to be stateless.\n* `addFilterAfter(getCommunityFilter(), MyHomeAuthorizationFilter.class)`: Adds a filter after the community filter and before the end of the configuration chain.\n\nThe `http` object is deserialized from the input, and its properties are explained above.",
                "complex_type": true
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\n  protected void configure(HttpSecurity http) throws Exception {\n    // ...\n    http.authorizeRequests()\n        .antMatchers(\"/admin/**\").hasRole(\"ADMIN\")\n        .anyRequest().authenticated();\n    // ...\n  }\n",
              "description": "\nThe above example restricts access to the '/admin' path for users with the ADMIN role and requires all other requests to be authenticated."
            },
            "name": "configure",
            "location": {
              "start": 70,
              "insert": 53,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 52,
                "end": 69
              }
            },
            "item_type": "method",
            "length": 33,
            "docLength": 17
          },
          {
            "id": "a6e71d03-d8e1-1da2-bf4a-7a81f2879421",
            "ancestors": [
              "159fe549-0b73-15ac-7743-33dc4fdbb81f"
            ],
            "type": "function",
            "description": "creates a `CommunityAuthorizationFilter` instance by combining the `AuthenticationManager` and `CommunityService`. This filter is used to authorize community-related operations based on user authentication.",
            "params": [],
            "returns": {
              "type_name": "Exception",
              "description": "an instance of the `CommunityAuthorizationFilter` class, which filters community-related endpoints based on user roles and permissions.\n\nThe `CommunityAuthorizationFilter` object is created through a combination of two parameters: `authenticationManager()` and `communityService`. The `authenticationManager()` parameter represents an instance of the `AuthenticationManager` interface, which is responsible for managing user authentication in the system. The `communityService` parameter represents an instance of the `CommunityService` interface, which is responsible for handling community-related operations.\n\nThe `CommunityAuthorizationFilter` object itself is a subclass of the `AbstractFilter` class, which provides a generic filter implementation that can be used to perform various types of filtering tasks. In this case, the `getCommunityFilter` function returns an instance of the `CommunityAuthorizationFilter` class, which is capable of filtering community-related operations based on user authentication and authorization.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "private Filter getCommunityFilter() throws Exception {\n    return new CommunityAuthorizationFilter(authenticationManager(), communityService);\n  }\n\n// ...\n\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    http.cors().and().csrf().disable();\n    http.headers().frameOptions().disable();\n    http.sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS);\n    http.addFilterAfter(getCommunityFilter(), MyHomeAuthorizationFilter.class);\n}\n",
              "description": ""
            },
            "name": "getCommunityFilter",
            "location": {
              "start": 118,
              "insert": 104,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 103,
                "end": 117
              }
            },
            "item_type": "method",
            "length": 3,
            "docLength": 14
          },
          {
            "id": "5a19c9a3-c4a1-aba1-ce4d-7b22e8238266",
            "ancestors": [
              "159fe549-0b73-15ac-7743-33dc4fdbb81f"
            ],
            "type": "function",
            "description": "configures authentication-related settings by passing user details service and password encoder instances to the builder.",
            "params": [
              {
                "name": "auth",
                "type_name": "AuthenticationManagerBuilder",
                "description": "AuthenticationManagerBuilder, which is used to configure various aspects of authentication management, including the userDetailsService and passwordEncoder.\n\n* `userDetailsService`: A reference to an implementation of `UserDetailsService`, which is responsible for retrieving user details from the database or other data source.\n* `passwordEncoder`: A reference to an implementation of `PasswordEncoder`, which is used to encrypt passwords for the user accounts.",
                "complex_type": true
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\n  protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n    // Use userDetailsService and passwordEncoder for customizing authentication logic\n    auth.userDetailsService(userDetailsService).passwordEncoder(passwordEncoder);\n  }\n",
              "description": "\nIn this example, the method `configure` is called on an instance of `AuthenticationManagerBuilder`. The method takes two parameters: `auth`, which represents the `AuthenticationManagerBuilder` being configured, and `userDetailsService`, which is an instance of a class that implements the `UserDetailsService` interface. The method also takes a parameter named `passwordEncoder`, which is an instance of a class that implements the `PasswordEncoder` interface.\nThe method sets the user details service and password encoder by calling the methods `userDetailsService` and `passwordEncoder` on the `AuthenticationManagerBuilder` instance, respectively. This allows customizing authentication logic using these services and encoders."
            },
            "name": "configure",
            "location": {
              "start": 134,
              "insert": 122,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 121,
                "end": 133
              }
            },
            "item_type": "method",
            "length": 4,
            "docLength": 12
          }
        ]
      }
    }
  },
  {
    "name": "CommunityAuthorizationFilter.java",
    "path": "service/src/main/java/com/myhome/security/filters/CommunityAuthorizationFilter.java",
    "content": {
      "structured": {
        "description": "An interceptor that checks if the current user is a community admin based on their ID. It uses Spring Security's SecurityContextHolder and CommunityService interfaces to retrieve the currently authenticated user ID and find a list of community admins for a given community ID. The interceptor then filters and maps the list of admins to find the ID of the currently authenticated user, and checks if they are present in the list to determine if they are a community admin.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.security.filters.CommunityAuthorizationFilter Pages: 1 -->\n<svg width=\"172pt\" height=\"93pt\"\n viewBox=\"0.00 0.00 172.00 93.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 89)\">\n<title>com.myhome.security.filters.CommunityAuthorizationFilter</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"164,-30 0,-30 0,0 164,0 164,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.security.filters.</text>\n<text text-anchor=\"middle\" x=\"82\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">CommunityAuthorizationFilter</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"151.5,-85 12.5,-85 12.5,-66 151.5,-66 151.5,-85\"/>\n<text text-anchor=\"middle\" x=\"82\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BasicAuthenticationFilter</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M82,-55.65C82,-47.36 82,-37.78 82,-30.11\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"78.5,-55.87 82,-65.87 85.5,-55.87 78.5,-55.87\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "82d2c950-d916-04b7-7643-4d104faeec47",
            "ancestors": [],
            "type": "function",
            "description": ":\n\n* Extends the `FilterChain` class and provides a way to access previous filters in the chain.\n* Uses the `addAmnestyRequestPattern()` method to match requests based on a pattern that includes the community ID in the request URI.\n* Checks if the current user is an admin of a specific community by querying the community service and checking if their ID exists in a list of admins for that community.",
            "name": "CommunityAuthorizationFilter",
            "location": {
              "start": 24,
              "insert": 17,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 16,
                "end": 23
              }
            },
            "item_type": "class",
            "length": 132,
            "docLength": 7
          },
          {
            "id": "f969ad89-2bd4-cfa5-4748-779f6f95b156",
            "ancestors": [
              "82d2c950-d916-04b7-7643-4d104faeec47"
            ],
            "type": "function",
            "description": "in a Servlet Filter performs an internal filter operation based on the request URI and user's role. If the request URI matches a specific pattern, it checks if the user is an admin for a particular community and sets a HTTP Status Code accordingly. If not, it calls the superclass' `doFilterInternal` method to continue the filtering process.",
            "params": [
              {
                "name": "request",
                "type_name": "HttpServletRequest",
                "description": "HTTP request being processed by the filter.\n\n* `getRequestURI()` returns the requested resource path, which is matched against a pattern using the `Matcher` object `ADD_AMENITY_REQUEST_PATTERN`.\n* `isUserCommunityAdmin(request)` checks whether the user is an administrator of a community, and if not, responds with a forbidden status code.\n* `super.doFilterInternal(request, response, chain)` calls the parent class's implementation of the `doFilterInternal` method.",
                "complex_type": true
              },
              {
                "name": "response",
                "type_name": "HttpServletResponse",
                "description": "HTTP response object that is being filtered by the `doFilterInternal` method.\n\n* `HttpServletResponse response`: This is an instance of `HttpServletResponse`, which represents the HTTP response object for the current request. It provides various attributes and methods for handling HTTP requests and responses.\n* `status`: This attribute indicates the status code of the response, which can be one of the values in the `HttpServletResponse.SC_` constant class (e.g., `HttpServletResponse.SC_OK`, `HttpServletResponse.SC_FORBIDDEN`, etc.).\n* `ServletException`: This attribute represents any exception thrown during the handling of the request, which can be caught and handled by the `doFilterInternal` function or propagated to the caller.",
                "complex_type": true
              },
              {
                "name": "chain",
                "type_name": "FilterChain",
                "description": "next filter in the chain that should be applied to the request after the current filter has been executed.\n\n* `HttpServletRequest request`: The incoming HTTP request.\n* `HttpServletResponse response`: The outgoing HTTP response.\n* `FilterChain chain`: The filter chain that triggered this function's execution. It can be modified or destroyed within the function.",
                "complex_type": true
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\n  protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response,\n      FilterChain chain) throws IOException, ServletException {\n\n    Matcher urlMatcher = ADD_AMENITY_REQUEST_PATTERN.matcher(request.getRequestURI());\n\n    if (urlMatcher.find() && !isUserCommunityAdmin(request)) {\n      response.setStatus(HttpServletResponse.SC_FORBIDDEN);\n      return;\n    }\n\n    super.doFilterInternal(request, response, chain);\n  }\n",
              "description": "\nIn this example, the method doFilterInternal is overridden to check whether a user has permission to add an amenity in a community. The method first checks if the URL of the request matches with the pattern for adding an amenity, and then checks whether the current user is a community admin using the `isUserCommunityAdmin` method. If the user is not a community admin, the filter sets the response status to SC_FORBIDDEN, which returns a 403 Forbidden status code, indicating that the user does not have permission to add an amenity in the requested community. Finally, the method calls the `super.doFilterInternal` method to pass the request and response objects to the next filter in the chain."
            },
            "name": "doFilterInternal",
            "location": {
              "start": 79,
              "insert": 37,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 36,
                "end": 78
              }
            },
            "item_type": "method",
            "length": 13,
            "docLength": 42
          },
          {
            "id": "2b2504a4-03e7-65b4-7b4d-37e0ae876e17",
            "ancestors": [
              "82d2c950-d916-04b7-7643-4d104faeec47"
            ],
            "type": "function",
            "description": "verifies if a user is an administrator of a specific community based on the current SecurityContext and the request URI. It queries the community service to find admins for the community ID and checks if the user ID matches any of them.",
            "params": [
              {
                "name": "request",
                "type_name": "HttpServletRequest",
                "description": "HTTP request object containing information about the current user and their actions, which is used to determine if the user is a community administrator.\n\n* `getRequestURI()` returns the requested URL of the request.\n* `split(\"/\")` splits the URL into its component parts (such as scheme, host, port, and path). The second element in the resulting array is the community ID.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "boolean",
              "description": "a boolean value indicating whether the current user is an admin of a specific community.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "@Override\nprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException, ServletException {\n    if (isUserCommunityAdmin(request)) {\n        // do stuff\n    } else {\n        // do other stuff\n    }\n}\n",
              "description": "\nThis method overrides the doFilterInternal method from the superclass. The isUserCommunityAdmin method is then called to check whether the currently authenticated user is an admin of a specific community, based on the request's URI and the current user's ID. If this condition is true, the code inside the if block will be executed; otherwise, the else block will be executed.\n\nIn this example, the doFilterInternal method acts as a filter in the web application's request chain, where it checks whether the currently authenticated user is an admin of a specific community based on the request URI and user ID before deciding what to do with the request. If the user is an admin, the if block will be executed; otherwise, the else block will be executed."
            },
            "name": "isUserCommunityAdmin",
            "location": {
              "start": 143,
              "insert": 93,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 92,
                "end": 142
              }
            },
            "item_type": "method",
            "length": 12,
            "docLength": 50
          }
        ]
      }
    }
  },
  {
    "name": "AppJwt.java",
    "path": "service/src/main/java/com/myhome/security/jwt/AppJwt.java",
    "content": {
      "structured": {
        "description": "A class named AppJwt that represents a JWT in an application. The class has two fields: userId and expiration, which represent a unique identifier for a user in the application and the date and time after which the JWT becomes invalid or no longer valid, respectively. The class uses Lombok tools to simplify code generation and provides built-in functionality for generating getters, setters, and toString methods.",
        "items": [
          {
            "id": "df26e6b3-1912-75a2-7a40-ea86628d3550",
            "ancestors": [],
            "type": "function",
            "description": "represents a JWT in an application with a unique identifier for a user and an expiration date.\nFields:\n\t- userId (String): represents a unique identifier for a user in the application.\n\t- expiration (LocalDateTime): represents the date and time after which the JWT becomes invalid or no longer valid.\n\n",
            "fields": [
              {
                "name": "userId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "AppJwt",
                "description": "represents a unique identifier for a user in the application."
              },
              {
                "name": "expiration",
                "type_name": "LocalDateTime",
                "value": null,
                "constant": false,
                "class_name": "AppJwt",
                "description": "represents the date and time after which the JWT becomes invalid or no longer valid."
              }
            ],
            "name": "AppJwt",
            "location": {
              "start": 34,
              "insert": 27,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 26,
                "end": 33
              }
            },
            "item_type": "class",
            "length": 7,
            "docLength": 7
          }
        ]
      }
    }
  },
  {
    "name": "AppJwtEncoderDecoder.java",
    "path": "service/src/main/java/com/myhome/security/jwt/AppJwtEncoderDecoder.java",
    "content": {
      "structured": {
        "description": "An interface `AppJwtEncoderDecoder` that provides functionality for encoding and decoding JWTs (JSON Web Tokens) for an application. The interface specifies two methods: `decode(String encodedJwt, String secret)` and `encode(AppJwt jwt, String secret)`. These methods allow developers to manipulate JWTs programmatically.",
        "items": [
          {
            "id": "e5bd259f-f960-9c9b-1a48-6d9c5371df89",
            "ancestors": [],
            "type": "function",
            "description": "provides a logic for encoding and decoding Application's JWTs.",
            "name": "AppJwtEncoderDecoder",
            "location": {
              "start": 25,
              "insert": 22,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 21,
                "end": 24
              }
            },
            "item_type": "interface",
            "length": 5,
            "docLength": 3
          }
        ]
      }
    }
  },
  {
    "name": "NoSecretJwtEncoderDecoder.java",
    "path": "service/src/main/java/com/myhome/security/jwt/impl/NoSecretJwtEncoderDecoder.java",
    "content": {
      "structured": {
        "description": "An implementation of AppJwtEncoderDecoder, a class that decodes and encodes JWTs. The decode function takes an encoded JWT and a secret key and returns an AppJwt object with extracted user ID and expiration time. The encode function takes an AppJwt object and a secret key and returns a base64-encoded string representing the user ID and expiration date of the JWT.",
        "items": [
          {
            "id": "f8e550f9-61b5-069f-3b4e-643eb43bd940",
            "ancestors": [],
            "type": "function",
            "description": "is an implementation of the AppJwtEncoderDecoder interface that handles JSON Web Token (JWT) encoding and decoding without using secrets. It provides methods for encoding and decoding JWTs, as well as creating new `AppJwt` objects from decoded JWTs.",
            "name": "NoSecretJwtEncoderDecoder",
            "location": {
              "start": 34,
              "insert": 28,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 27,
                "end": 33
              }
            },
            "item_type": "class",
            "length": 54,
            "docLength": 6
          },
          {
            "id": "7e2dbd6c-5621-868e-164d-c65aeb0c323f",
            "ancestors": [
              "f8e550f9-61b5-069f-3b4e-643eb43bd940"
            ],
            "type": "function",
            "description": "decodes a JSON Web Token (JWT) string and returns an instance of the `AppJwt` class with extracted user ID and expiration date.",
            "params": [
              {
                "name": "encodedJwt",
                "type_name": "String",
                "description": "JSON Web Token (JWT) that is to be decoded and converted into an instance of the `AppJwt` class.",
                "complex_type": false
              },
              {
                "name": "secret",
                "type_name": "String",
                "description": "decryption secret used to extract the user ID and expiration time from the encoded JWT.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "AppJwt",
              "description": "an instance of the `AppJwt` class with a user ID and expiration time extracted from the encoded JWT.\n\n* The `AppJwt` object is constructed using the `builder()` method, which allows for flexible configuration and customization of the resulting object.\n* The `userId` attribute represents the user ID associated with the JWT token.\n* The `expiration` attribute contains the expiration time of the JWT token in the form of a `LocalDateTime` object, representing the point in time when the token will become invalid.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "AppJwt decodedToken = NoSecretJwtEncoderDecoder.decode(\"your-encoded-jwt\", \"your-secret\");\nSystem.out.println(decodedToken.getUserId()); // Your user ID\nSystem.out.println(decodedToken.getExpiration()); // Your expiration time\n",
              "description": ""
            },
            "name": "decode",
            "location": {
              "start": 62,
              "insert": 39,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 38,
                "end": 61
              }
            },
            "item_type": "method",
            "length": 4,
            "docLength": 23
          },
          {
            "id": "ff55caed-66af-e594-c04e-c76cd7a1bdaa",
            "ancestors": [
              "f8e550f9-61b5-069f-3b4e-643eb43bd940"
            ],
            "type": "function",
            "description": "takes a `AppJwt` object and a secret as input and returns a encoded string consisting of the user ID and expiration time.",
            "params": [
              {
                "name": "jwt",
                "type_name": "AppJwt",
                "description": "JWT (JSON Web Token) object containing information about the user and its expiration date, which is used to generate a unique identifier for the user.\n\n* `jwt`: This is an instance of the `AppJwt` class, which contains properties such as `getUserId()` and `getExpiration()`.",
                "complex_type": true
              },
              {
                "name": "secret",
                "type_name": "String",
                "description": "symmetric key used for signing the JWT token.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "String",
              "description": "a string consisting of the `userId` and `expiration` values concatenated with a separator.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "AppJwt jwt = AppJwt.builder().userId(\"123456\").expiration(LocalDateTime.now()).build();\nString secret = \"mysecret\";\nString encodedJwt = NoSecretJwtEncoderDecoder.encode(jwt, secret);\nSystem.out.println(encodedJwt);\n",
              "description": ""
            },
            "name": "encode",
            "location": {
              "start": 84,
              "insert": 67,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 66,
                "end": 83
              }
            },
            "item_type": "method",
            "length": 3,
            "docLength": 17
          }
        ]
      }
    }
  },
  {
    "name": "SecretJwtEncoderDecoder.java",
    "path": "service/src/main/java/com/myhome/security/jwt/impl/SecretJwtEncoderDecoder.java",
    "content": {
      "structured": {
        "description": "An implementation of AppJwtEncoderDecoder, which provides methods for encoding and decoding JSON Web Tokens (JWTs). The class uses the HmacShaKeyFor method to generate a signing key for the JWT, and the Jwts builder class to parse and generate JWT claims. The decode method takes an encoded JWT and a secret, uses JWT parser to extract claims from the JWT, and creates a new AppJwt instance with the extracted information. The encode method takes a `Jwt` object and a secret as input, creates a new JWT with an updated expiration date based on the current time zone, and signs it using HMAC-SHA-512 algorithm with the provided secret.",
        "items": [
          {
            "id": "745ce09a-b797-1598-0e4c-90412702c203",
            "ancestors": [],
            "type": "function",
            "description": "is an implementation of the AppJwtEncoderDecoder interface, which provides functions for encoding and decoding JSON Web Tokens (JWTs) using HMAC-SHA-512 algorithm with a secret key. The class takes an encoded JWT and a secret as input, and uses JWT parser to extract claims from the JWT before creating a new AppJwt instance with the extracted information. Additionally, the class provides functions for encoding and decoding JWTs using HMAC-SHA-512 algorithm with a provided secret key.",
            "name": "SecretJwtEncoderDecoder",
            "location": {
              "start": 39,
              "insert": 33,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 32,
                "end": 38
              }
            },
            "item_type": "class",
            "length": 62,
            "docLength": 6
          },
          {
            "id": "6ecd0d19-1729-1d9f-7e48-3842bb187ab4",
            "ancestors": [
              "745ce09a-b797-1598-0e4c-90412702c203"
            ],
            "type": "function",
            "description": "parses an JSON Web Token (JWT) and extracts its claims, including the user ID and expiration time. It then builds a new `AppJwt` object with the extracted information.",
            "params": [
              {
                "name": "encodedJwt",
                "type_name": "String",
                "description": "JSON Web Token (JWT) that contains the user's information and is to be decoded and converted into an `AppJwt` object.",
                "complex_type": false
              },
              {
                "name": "secret",
                "type_name": "String",
                "description": "secret key used for HMAC-based signature verification, which is required to validate the JWT token's signature and ensure its authenticity.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "AppJwt",
              "description": "an instance of `AppJwt` with updated fields for the user ID and expiration date.\n\n* The user ID is extracted from the claims in the JWT and is stored in the `userId` field of the `AppJwt` object.\n* The expiration date of the JWT is also extracted from the claims and is stored in the `expiration` field of the `AppJwt` object, which is represented as a `LocalDateTime`.\n\nThese properties are essential for decoding the JWT and extracting relevant information about the user and the JWT's validity.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "@Override public AppJwt decode(String encodedJwt, String secret) {\n    Claims claims = Jwts.parserBuilder()\n        .setSigningKey(Keys.hmacShaKeyFor(secret.getBytes()))\n        .build()\n        .parseClaimsJws(encodedJwt)\n        .getBody();\n    String userId = claims.getSubject();\n    Date expiration = claims.getExpiration();\n    return AppJwt.builder()\n        .userId(userId)\n        .expiration(expiration.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime())\n        .build();\n  }\n",
              "description": "\nIt is a method that takes an encoded JWT and secret as its input parameters, decodes the JWT using the HMAC-SHA512 algorithm with the provided secret, and creates a new AppJwt object with user ID and expiration date."
            },
            "name": "decode",
            "location": {
              "start": 63,
              "insert": 43,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 42,
                "end": 62
              }
            },
            "item_type": "method",
            "length": 13,
            "docLength": 20
          },
          {
            "id": "89db0b89-8737-53ac-7d41-a5cd9e3bd0e4",
            "ancestors": [
              "745ce09a-b797-1598-0e4c-90412702c203"
            ],
            "type": "function",
            "description": "takes a `Jwt` object and a secret as input, creates a new JWT with an updated expiration date and signs it using HMAC-SHA-512 algorithm with the provided secret.",
            "params": [
              {
                "name": "jwt",
                "type_name": "AppJwt",
                "description": "JSON Web Token to be encoded, which contains information about the user and the expiration time.\n\n* `jwt`: A `AppJwt` object containing information about the JWT token, such as the user ID and expiration time.\n* `secret`: The secret key used for signing the JWT.",
                "complex_type": true
              },
              {
                "name": "secret",
                "type_name": "String",
                "description": "secret key used for HMAC-based signatures in the `encode()` function.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "String",
              "description": "a compact JWT with the user ID, expiration date, and HMAC-SHA signature calculated using the secret.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "AppJwt appJwt = new AppJwt(\"1234\", LocalDateTime.now().plusDays(1));\nString secret = \"mysecret\";\nString encodedJWT = SecretJwtEncoderDecoder.encode(appJwt, secret);\n",
              "description": "\nIn this example, a new AppJwt object is created with the user ID and expiration date set to LocalDateTime.now().plusDays(1). Then, this AppJwt object is passed as an argument to the encode method along with a secret key 'mysecret'. The result of the encode method is stored in the encodedJWT variable."
            },
            "name": "encode",
            "location": {
              "start": 93,
              "insert": 77,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 76,
                "end": 92
              }
            },
            "item_type": "method",
            "length": 7,
            "docLength": 16
          }
        ]
      }
    }
  },
  {
    "name": "AmenityService.java",
    "path": "service/src/main/java/com/myhome/services/AmenityService.java",
    "content": {
      "structured": {
        "description": "an interface called `AmenityService` that provides various methods for managing amenities in a community. These methods include creating new amenities, retrieving details of existing amenities, deleting amenities, listing all amenities, and updating existing amenities. The interface uses packages such as `com.myhome.domain`, `com.myhome.model`, and `java.util`.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.services.AmenityService Pages: 1 -->\n<svg width=\"208pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 208.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.services.AmenityService</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"186,-96 14,-96 14,-66 186,-66 186,-96\"/>\n<text text-anchor=\"start\" x=\"22\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.services.Amenity</text>\n<text text-anchor=\"middle\" x=\"100\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Service</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1services_1_1springdatajpa_1_1AmenitySDJpaService.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"200,-30 0,-30 0,0 200,0 200,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.services.springdatajpa.</text>\n<text text-anchor=\"middle\" x=\"100\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">AmenitySDJpaService</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node2 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node1&#45;&gt;Node2</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M100,-55.54C100,-46.96 100,-37.61 100,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"96.5,-55.8 100,-65.8 103.5,-55.8 96.5,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "c1f72b57-7d51-ea97-4e44-08d64bc3a315",
            "ancestors": [],
            "type": "function",
            "description": "provides methods for creating, retrieving, deleting, listing, and updating amenities in a community.",
            "name": "AmenityService",
            "location": {
              "start": 29,
              "insert": 25,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 24,
                "end": 28
              }
            },
            "item_type": "interface",
            "length": 12,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "AuthenticationService.java",
    "path": "service/src/main/java/com/myhome/services/AuthenticationService.java",
    "content": {
      "structured": {
        "description": "An interface `AuthenticationService` that provides a method `login` to authenticate users and return an `AuthenticationData` object representing the authenticated user.",
        "items": [
          {
            "id": "2e5cb858-1603-8390-bb46-96bc119186f0",
            "ancestors": [],
            "type": "function",
            "description": "provides a method for logging in users through the login() method, which returns an AuthenticationData object representing the authenticated user.",
            "name": "AuthenticationService",
            "location": {
              "start": 10,
              "insert": 6,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 5,
                "end": 9
              }
            },
            "item_type": "interface",
            "length": 3,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "BookingService.java",
    "path": "service/src/main/java/com/myhome/services/BookingService.java",
    "content": {
      "structured": {
        "description": "An interface named BookingService that provides a method for deleting bookings based on amenity ID and booking ID. The method, deleteBooking(), takes in two parameters: amenityId and bookingId, and returns a boolean value indicating whether the booking was successfully deleted.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.services.BookingService Pages: 1 -->\n<svg width=\"208pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 208.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.services.BookingService</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"185,-96 15,-96 15,-66 185,-66 185,-96\"/>\n<text text-anchor=\"start\" x=\"23\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.services.Booking</text>\n<text text-anchor=\"middle\" x=\"100\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Service</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1services_1_1springdatajpa_1_1BookingSDJpaService.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"200,-30 0,-30 0,0 200,0 200,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.services.springdatajpa.</text>\n<text text-anchor=\"middle\" x=\"100\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingSDJpaService</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node2 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node1&#45;&gt;Node2</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M100,-55.54C100,-46.96 100,-37.61 100,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"96.5,-55.8 100,-65.8 103.5,-55.8 96.5,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "8b1e27ec-b3c1-ce9f-f54c-fde696eee014",
            "ancestors": [],
            "type": "function",
            "description": "provides a method for deleting bookings based on amenity ID and booking ID.",
            "name": "BookingService",
            "location": {
              "start": 6,
              "insert": 3,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 2,
                "end": 5
              }
            },
            "item_type": "interface",
            "length": 5,
            "docLength": 3
          }
        ]
      }
    }
  },
  {
    "name": "CommunityService.java",
    "path": "service/src/main/java/com/myhome/services/CommunityService.java",
    "content": {
      "structured": {
        "description": "An interface for managing communities in a Spring Data-based application. The interface provides methods for creating new communities, listing all communities, deleting existing communities, and adding or removing admins and houses from communities. It also includes methods for finding community details by ID, community houses by ID, and community admins by ID.",
        "items": [
          {
            "id": "66aeae6c-06f1-da8e-a54d-d0a0328b0887",
            "ancestors": [],
            "type": "function",
            "description": "provides a set of methods for managing communities in a Spring Data-based application, including creating new communities, listing all communities, and deleting existing communities.",
            "name": "CommunityService",
            "location": {
              "start": 33,
              "insert": 28,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 27,
                "end": 32
              }
            },
            "item_type": "interface",
            "length": 27,
            "docLength": 5
          }
        ]
      }
    }
  },
  {
    "name": "HouseMemberDocumentService.java",
    "path": "service/src/main/java/com/myhome/services/HouseMemberDocumentService.java",
    "content": {
      "structured": {
        "description": "An interface named HouseMemberDocumentService that provides methods for deleting, finding, updating, and creating House Member Documents. The methods include deleteHouseMemberDocument(String memberId), findHouseMemberDocument(String memberId), updateHouseMemberDocument(MultipartFile multipartFile, String memberId), and createHouseMemberDocument(MultipartFile multipartFile, String memberId).",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.services.HouseMemberDocumentService Pages: 1 -->\n<svg width=\"211pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 211.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.services.HouseMemberDocumentService</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"182,-96 21,-96 21,-66 182,-66 182,-96\"/>\n<text text-anchor=\"start\" x=\"29\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.services.House</text>\n<text text-anchor=\"middle\" x=\"101.5\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">MemberDocumentService</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1services_1_1springdatajpa_1_1HouseMemberDocumentSDJpaService.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"203,-30 0,-30 0,0 203,0 203,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.services.springdatajpa.</text>\n<text text-anchor=\"middle\" x=\"101.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">HouseMemberDocumentSDJpaService</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node2 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node1&#45;&gt;Node2</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M101.5,-55.54C101.5,-46.96 101.5,-37.61 101.5,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"98,-55.8 101.5,-65.8 105,-55.8 98,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "f62460f3-43fe-aa9f-af44-abae85dfbc5b",
            "ancestors": [],
            "type": "function",
            "description": "provides methods for deleting, finding, updating, and creating House Member Documents.",
            "name": "HouseMemberDocumentService",
            "location": {
              "start": 26,
              "insert": 23,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 22,
                "end": 25
              }
            },
            "item_type": "interface",
            "length": 12,
            "docLength": 3
          }
        ]
      }
    }
  },
  {
    "name": "HouseService.java",
    "path": "service/src/main/java/com/myhome/services/HouseService.java",
    "content": {
      "structured": {
        "description": "An interface called `HouseService` that provides methods for managing houses and their members. The interface includes methods for listing all houses and members, adding new members to a house, deleting members from a house, retrieving details of a specific house, and listing members for a set of houses associated with a specific user.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.services.HouseService Pages: 1 -->\n<svg width=\"208pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 208.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.services.HouseService</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"180.5,-96 19.5,-96 19.5,-66 180.5,-66 180.5,-96\"/>\n<text text-anchor=\"start\" x=\"27.5\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.services.House</text>\n<text text-anchor=\"middle\" x=\"100\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Service</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1services_1_1springdatajpa_1_1HouseSDJpaService.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"200,-30 0,-30 0,0 200,0 200,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.services.springdatajpa.</text>\n<text text-anchor=\"middle\" x=\"100\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">HouseSDJpaService</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node2 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node1&#45;&gt;Node2</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M100,-55.54C100,-46.96 100,-37.61 100,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"96.5,-55.8 100,-65.8 103.5,-55.8 96.5,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "cdf6f164-73b1-b18a-b44f-9f41c8e6a431",
            "ancestors": [],
            "type": "function",
            "description": "provides methods for managing houses and their members, including listing all houses and members, adding new members to a house, deleting members from a house, retrieving details of a specific house, and listing members for a set of houses associated with a specific user.",
            "name": "HouseService",
            "location": {
              "start": 32,
              "insert": 26,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 25,
                "end": 31
              }
            },
            "item_type": "interface",
            "length": 15,
            "docLength": 6
          }
        ]
      }
    }
  },
  {
    "name": "MailService.java",
    "path": "service/src/main/java/com/myhome/services/MailService.java",
    "content": {
      "structured": {
        "description": "An interface `MailService` that provides methods for sending emails related to user account management and security token confirmation. The methods include `sendPasswordRecoverCode`, `sendAccountCreated`, `sendPasswordSuccessfullyChanged`, and `sendAccountConfirmed`. These methods allow users to recover their passwords, create new accounts, change their passwords, and confirm their accounts.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.SecurityToken Pages: 1 -->\n<svg width=\"187pt\" height=\"148pt\"\n viewBox=\"0.00 0.00 187.00 148.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 144)\">\n<title>com.myhome.domain.SecurityToken</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"173,-30 6,-30 6,0 173,0 173,-30\"/>\n<text text-anchor=\"start\" x=\"14\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"179,-85 0,-85 0,-66 179,-66 179,-85\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-55.65C89.5,-47.36 89.5,-37.78 89.5,-30.11\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-55.87 89.5,-65.87 93,-55.87 86,-55.87\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"126.5,-140 52.5,-140 52.5,-121 126.5,-121 126.5,-140\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-128\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-110.66C89.5,-101.93 89.5,-91.99 89.5,-85.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-110.75 89.5,-120.75 93,-110.75 86,-110.75\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "f0b861b5-49bd-0fbd-fc4d-ee00c3e9ff9e",
            "ancestors": [],
            "type": "function",
            "description": "provides methods for sending emails related to user account management and security token confirmation.",
            "name": "MailService",
            "location": {
              "start": 10,
              "insert": 6,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 5,
                "end": 9
              }
            },
            "item_type": "interface",
            "length": 10,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "PaymentService.java",
    "path": "service/src/main/java/com/myhome/services/PaymentService.java",
    "content": {
      "structured": {
        "description": "An interface for a payment service layer that provides various methods for scheduling payments, retrieving payment details, getting payments by member, and getting payments by administrator. The interface includes methods for retrieving house members.",
        "items": [
          {
            "id": "f4211db6-4b80-5485-724a-84cc49b99ab4",
            "ancestors": [],
            "type": "function",
            "description": "provides methods for scheduling payments, retrieving payment details, and getting payments by member or administrator, along with an optional method for retrieving house members.",
            "name": "PaymentService",
            "location": {
              "start": 35,
              "insert": 30,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 29,
                "end": 34
              }
            },
            "item_type": "interface",
            "length": 11,
            "docLength": 5
          }
        ]
      }
    }
  }
]
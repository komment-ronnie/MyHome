[
  {
    "name": "SchedulePaymentResponse.java",
    "path": "service/src/main/java/com/myhome/controllers/response/SchedulePaymentResponse.java",
    "content": {
      "structured": {
        "description": "A `SchedulePaymentResponse` class, which represents an immutable response for a payment schedule with various attributes such as payment ID, charge amount, and due date. The class uses Lombok's `@AllArgsConstructor` and `@NoArgsConstructor` annotations to automatically generate constructors, and the `@Data` annotation to mark the class as data-only. The `paymentId`, `charge`, `type`, `description`, `recurring`, `dueDate`, `adminId`, and `memberId` fields are defined in the class.",
        "items": [
          {
            "id": "1e32309a-5dc0-aa9e-4d49-fd7cbce50869",
            "ancestors": [],
            "type": "function",
            "description": "represents an immutable response class for a payment schedule with various attributes, including payment ID, charge amount, and due date.\nFields:\n\t- paymentId (String): represents a unique identifier for a scheduled payment.\n\t- charge (BigDecimal): represents a monetary value.\n\t- type (String): in the SchedulePaymentResponse class represents a string value indicating the type of payment being scheduled, such as \"one-time\" or \"recurring\".\n\t- description (String): in the SchedulePaymentResponse class represents a brief textual explanation of the payment's purpose or context.\n\t- recurring (boolean): in the SchedulePaymentResponse class denotes whether a payment is recurring or not.\n\t- dueDate (String): represents a date on which a payment is due, presumably for the scheduled payment described by the other fields in the class.\n\t- adminId (String): represents an identifier for the administrator who manages the payment schedule.\n\t- memberId (String): represents a unique identifier for a specific member within the context of the SchedulePaymentResponse class.\n\n",
            "fields": [
              {
                "name": "paymentId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "SchedulePaymentResponse",
                "description": "represents a unique identifier for a scheduled payment."
              },
              {
                "name": "charge",
                "type_name": "BigDecimal",
                "value": null,
                "constant": false,
                "class_name": "SchedulePaymentResponse",
                "description": "represents a monetary value."
              },
              {
                "name": "type",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "SchedulePaymentResponse",
                "description": "in the SchedulePaymentResponse class represents a string value indicating the type of payment being scheduled, such as \"one-time\" or \"recurring\"."
              },
              {
                "name": "description",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "SchedulePaymentResponse",
                "description": "in the SchedulePaymentResponse class represents a brief textual explanation of the payment's purpose or context."
              },
              {
                "name": "recurring",
                "type_name": "boolean",
                "value": null,
                "constant": false,
                "class_name": "SchedulePaymentResponse",
                "description": "in the SchedulePaymentResponse class denotes whether a payment is recurring or not."
              },
              {
                "name": "dueDate",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "SchedulePaymentResponse",
                "description": "represents a date on which a payment is due, presumably for the scheduled payment described by the other fields in the class."
              },
              {
                "name": "adminId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "SchedulePaymentResponse",
                "description": "represents an identifier for the administrator who manages the payment schedule."
              },
              {
                "name": "memberId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "SchedulePaymentResponse",
                "description": "represents a unique identifier for a specific member within the context of the SchedulePaymentResponse class."
              }
            ],
            "name": "SchedulePaymentResponse",
            "location": {
              "start": 42,
              "insert": 24,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 23,
                "end": 41
              }
            },
            "item_type": "class",
            "length": 13,
            "docLength": 18
          }
        ]
      }
    }
  },
  {
    "name": "Amenity.java",
    "path": "service/src/main/java/com/myhome/domain/Amenity.java",
    "content": {
      "structured": {
        "description": "An `Amenity` entity with fields for its unique ID, name, description, price, and relationships to a community and community house. It also includes a set of booking items associated with each amenity instance. The code uses Lombok's `@AllArgsConstructor`, `@NoArgsConstructor`, `@Getter`, `@Setter`, and `@With` annotations to provide automated constructors, getters, and setters, as well as optional named attributes and entity graphs.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.Amenity Pages: 1 -->\n<svg width=\"187pt\" height=\"137pt\"\n viewBox=\"0.00 0.00 187.00 137.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 133)\">\n<title>com.myhome.domain.Amenity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"173.5,-19 5.5,-19 5.5,0 173.5,0 173.5,-19\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"179,-74 0,-74 0,-55 179,-55 179,-74\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-62\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-44.66C89.5,-35.93 89.5,-25.99 89.5,-19.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-44.75 89.5,-54.75 93,-44.75 86,-44.75\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"126.5,-129 52.5,-129 52.5,-110 126.5,-110 126.5,-129\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-117\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-99.66C89.5,-90.93 89.5,-80.99 89.5,-74.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-99.75 89.5,-109.75 93,-99.75 86,-99.75\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "3e2320c7-b162-9bbf-3a4f-136a524082f4",
            "ancestors": [],
            "type": "function",
            "description": "represents an amenity bookable by guests at a community or community house, with fields for its unique ID, name, description, price, and relationships to the community and community house.\nFields:\n\t- amenityId (String): represents an identifier for each amenity instance within its respective community or community house.\n\t- name (String): in the Amenity entity represents a string value that identifies the name of an amenity.\n\t- description (String): in the Amenity class represents a brief summary of an amenity's features or characteristics.\n\t- price (BigDecimal): represents the cost of an amenity.\n\t- community (Community): in the Amenity class represents an association between an amenity and a community entity.\n\t- communityHouse (CommunityHouse): in the Amenity class represents a reference to a Community House object associated with each amenity instance.\n\t- bookingItems (Set<AmenityBookingItem>): in the Amenity class contains a set of AmenityBookingItem objects representing bookings made by guests at the community or community house associated with each amenity instance.\n\n",
            "fields": [
              {
                "name": "amenityId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Amenity",
                "description": "represents an identifier for each amenity instance within its respective community or community house."
              },
              {
                "name": "name",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Amenity",
                "description": "in the Amenity entity represents a string value that identifies the name of an amenity."
              },
              {
                "name": "description",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Amenity",
                "description": "in the Amenity class represents a brief summary of an amenity's features or characteristics."
              },
              {
                "name": "price",
                "type_name": "BigDecimal",
                "value": null,
                "constant": false,
                "class_name": "Amenity",
                "description": "represents the cost of an amenity."
              },
              {
                "name": "community",
                "type_name": "Community",
                "value": null,
                "constant": false,
                "class_name": "Amenity",
                "description": "in the Amenity class represents an association between an amenity and a community entity."
              },
              {
                "name": "communityHouse",
                "type_name": "CommunityHouse",
                "value": null,
                "constant": false,
                "class_name": "Amenity",
                "description": "in the Amenity class represents a reference to a Community House object associated with each amenity instance."
              },
              {
                "name": "bookingItems",
                "type_name": "Set<AmenityBookingItem>",
                "value": "new HashSet<>()",
                "constant": false,
                "class_name": "Amenity",
                "description": "in the Amenity class contains a set of AmenityBookingItem objects representing bookings made by guests at the community or community house associated with each amenity instance."
              }
            ],
            "name": "Amenity",
            "location": {
              "start": 54,
              "insert": 37,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 36,
                "end": 53
              }
            },
            "item_type": "class",
            "length": 38,
            "docLength": 17
          }
        ]
      }
    }
  },
  {
    "name": "AmenityBookingItem.java",
    "path": "service/src/main/java/com/myhome/domain/AmenityBookingItem.java",
    "content": {
      "structured": {
        "description": "An entity called `AmenityBookingItem` in a database, which represents a booking item for an amenity. The entity has fields for the unique identifier of the booking item, the amenity ID, booking start and end dates, and the user who made the booking. The code also defines named entity graphs for the `AmenityBookingItem` entity, which specify the relationships between the fields and the corresponding database tables.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.AmenityBookingItem Pages: 1 -->\n<svg width=\"187pt\" height=\"148pt\"\n viewBox=\"0.00 0.00 187.00 148.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 144)\">\n<title>com.myhome.domain.AmenityBookingItem</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"173.5,-30 5.5,-30 5.5,0 173.5,0 173.5,-30\"/>\n<text text-anchor=\"start\" x=\"13.5\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"179,-85 0,-85 0,-66 179,-66 179,-85\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-55.65C89.5,-47.36 89.5,-37.78 89.5,-30.11\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-55.87 89.5,-65.87 93,-55.87 86,-55.87\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"126.5,-140 52.5,-140 52.5,-121 126.5,-121 126.5,-140\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-128\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-110.66C89.5,-101.93 89.5,-91.99 89.5,-85.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-110.75 89.5,-120.75 93,-110.75 86,-110.75\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "0f0c55ff-55d8-3695-6b42-5440ebc17887",
            "ancestors": [],
            "type": "function",
            "description": "represents a booking item for an amenity in a database, including the amenity ID, booking start and end dates, and the user who made the booking.\nFields:\n\t- amenityBookingItemId (String): represents a unique identifier for each booking item in the database.\n\t- amenity (Amenity): in the AmenityBookingItem entity represents an amenity that has been booked for a specific period of time by a particular user.\n\t- bookingStartDate (LocalDateTime): represents the date and time at which a booking for an amenity starts.\n\t- bookingEndDate (LocalDateTime): represents the end time of a booking for an amenity.\n\t- bookingUser (User): represents the user who made the booking for an amenity listed in the AmenityBookingItem entity.\n\n",
            "fields": [
              {
                "name": "amenityBookingItemId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "AmenityBookingItem",
                "description": "represents a unique identifier for each booking item in the database."
              },
              {
                "name": "amenity",
                "type_name": "Amenity",
                "value": null,
                "constant": false,
                "class_name": "AmenityBookingItem",
                "description": "in the AmenityBookingItem entity represents an amenity that has been booked for a specific period of time by a particular user."
              },
              {
                "name": "bookingStartDate",
                "type_name": "LocalDateTime",
                "value": null,
                "constant": false,
                "class_name": "AmenityBookingItem",
                "description": "represents the date and time at which a booking for an amenity starts."
              },
              {
                "name": "bookingEndDate",
                "type_name": "LocalDateTime",
                "value": null,
                "constant": false,
                "class_name": "AmenityBookingItem",
                "description": "represents the end time of a booking for an amenity."
              },
              {
                "name": "bookingUser",
                "type_name": "User",
                "value": null,
                "constant": false,
                "class_name": "AmenityBookingItem",
                "description": "represents the user who made the booking for an amenity listed in the AmenityBookingItem entity."
              }
            ],
            "name": "AmenityBookingItem",
            "location": {
              "start": 38,
              "insert": 24,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 23,
                "end": 37
              }
            },
            "item_type": "class",
            "length": 33,
            "docLength": 14
          }
        ]
      }
    }
  },
  {
    "name": "AuthenticationData.java",
    "path": "service/src/main/java/com/myhome/domain/AuthenticationData.java",
    "content": {
      "structured": {
        "description": "A class named `AuthenticationData` that stores JWT token and user ID for authentication purposes. The class has two fields: `jwtToken` and `userId`, both of which are private and have appropriate getter and constructor methods.",
        "items": [
          {
            "id": "ab6d036e-a0c9-1c8e-744d-731448be3cd9",
            "ancestors": [],
            "type": "function",
            "description": "represents a data structure for storing JWT token and user ID for authentication purposes with private fields for jwtToken and userId.\nFields:\n\t- jwtToken (String): in the AuthenticationData class represents a unique identifier for a user's JWT token.\n\t- userId (String): in the AuthenticationData class represents a unique identifier for a user's authentication credentials.\n\n",
            "fields": [
              {
                "name": "jwtToken",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "AuthenticationData",
                "description": "in the AuthenticationData class represents a unique identifier for a user's JWT token."
              },
              {
                "name": "userId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "AuthenticationData",
                "description": "in the AuthenticationData class represents a unique identifier for a user's authentication credentials."
              }
            ],
            "name": "AuthenticationData",
            "location": {
              "start": 15,
              "insert": 6,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 5,
                "end": 14
              }
            },
            "item_type": "class",
            "length": 6,
            "docLength": 9
          }
        ]
      }
    }
  },
  {
    "name": "BaseEntity.java",
    "path": "service/src/main/java/com/myhome/domain/BaseEntity.java",
    "content": {
      "structured": {
        "description": "A base class called `BaseEntity` for JPA entities, which automatically generates a unique identifier (id) field using the `@GeneratedValue` annotation. The `id` field is annotated with `@Id` and uses the `GenerationType.IDENTITY` strategy to create a serial version of the ID. The class also includes other annotations such as `@Data`, `@NoArgsConstructor`, `@AllArgsConstructor`, and `@MappedSuperclass` to enable additional features in the JPA perspective.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.BaseEntity Pages: 1 -->\n<svg width=\"531pt\" height=\"371pt\"\n viewBox=\"0.00 0.00 531.00 371.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 367)\">\n<title>com.myhome.domain.BaseEntity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"289,-191 110,-191 110,-172 289,-172 289,-191\"/>\n<text text-anchor=\"middle\" x=\"199.5\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Amenity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-363 340,-363 340,-344 508,-344 508,-363\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-351\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node3 -->\n<g id=\"edge2_Node000001_Node000003\" class=\"edge\">\n<title>Node1&#45;&gt;Node3</title>\n<g id=\"a_edge2_Node000001_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-200.41C227.9,-233.41 269.35,-301.17 325,-334.5 331.47,-338.37 338.57,-341.48 345.9,-343.97\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"213.09,-198.58 205.34,-191.36 206.89,-201.84 213.09,-198.58\"/>\n</a>\n</g>\n</g>\n<!-- Node4 -->\n<g id=\"Node000004\" class=\"node\">\n<title>Node4</title>\n<g id=\"a_Node000004\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1AmenityBookingItem.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-325.5 340,-325.5 340,-295.5 508,-295.5 508,-325.5\"/>\n<text text-anchor=\"start\" x=\"348\" y=\"-313.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-302.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node4 -->\n<g id=\"edge3_Node000001_Node000004\" class=\"edge\">\n<title>Node1&#45;&gt;Node4</title>\n<g id=\"a_edge3_Node000001_Node000004\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-198.45C237.46,-221.83 280.13,-263.69 325,-286.5 331.79,-289.95 339.11,-292.93 346.57,-295.48\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"218.15,-196.01 208.81,-191.01 212.99,-200.74 218.15,-196.01\"/>\n</a>\n</g>\n</g>\n<!-- Node5 -->\n<g id=\"Node000005\" class=\"node\">\n<title>Node5</title>\n<g id=\"a_Node000005\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Community.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-277 332,-277 332,-258 516,-258 516,-277\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-265\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node5 -->\n<g id=\"edge4_Node000001_Node000005\" class=\"edge\">\n<title>Node1&#45;&gt;Node5</title>\n<g id=\"a_edge4_Node000001_Node000005\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-196.49C247.51,-211.78 287.48,-235.12 325,-248.5 335.77,-252.34 347.51,-255.47 358.99,-257.99\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"225.09,-193.5 214.78,-191.06 221.31,-199.4 225.09,-193.5\"/>\n</a>\n</g>\n</g>\n<!-- Node6 -->\n<g id=\"Node000006\" class=\"node\">\n<title>Node6</title>\n<g id=\"a_Node000006\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1CommunityHouse.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-239.5 332,-239.5 332,-209.5 516,-209.5 516,-239.5\"/>\n<text text-anchor=\"start\" x=\"340\" y=\"-227.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-216.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node6 -->\n<g id=\"edge5_Node000001_Node000006\" class=\"edge\">\n<title>Node1&#45;&gt;Node6</title>\n<g id=\"a_edge5_Node000001_Node000006\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-193.01C286.24,-198.07 317.36,-204.08 345.35,-209.49\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"260.36,-189.5 249.88,-191.04 259.03,-196.38 260.36,-189.5\"/>\n</a>\n</g>\n</g>\n<!-- Node7 -->\n<g id=\"Node000007\" class=\"node\">\n<title>Node7</title>\n<g id=\"a_Node000007\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMember.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-191 325,-191 325,-172 523,-172 523,-191\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node7 -->\n<g id=\"edge6_Node000001_Node000007\" class=\"edge\">\n<title>Node1&#45;&gt;Node7</title>\n<g id=\"a_edge6_Node000001_Node000007\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M299.35,-181.5C307.82,-181.5 316.38,-181.5 324.85,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"299.08,-178 289.08,-181.5 299.08,-185 299.08,-178\"/>\n</a>\n</g>\n</g>\n<!-- Node8 -->\n<g id=\"Node000008\" class=\"node\">\n<title>Node8</title>\n<g id=\"a_Node000008\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMemberDocument.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-153.5 325,-153.5 325,-123.5 523,-123.5 523,-153.5\"/>\n<text text-anchor=\"start\" x=\"333\" y=\"-141.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-130.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node8 -->\n<g id=\"edge7_Node000001_Node000008\" class=\"edge\">\n<title>Node1&#45;&gt;Node8</title>\n<g id=\"a_edge7_Node000001_Node000008\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-169.99C286.24,-164.93 317.36,-158.92 345.35,-153.51\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"259.03,-166.62 249.88,-171.96 260.36,-173.5 259.03,-166.62\"/>\n</a>\n</g>\n</g>\n<!-- Node9 -->\n<g id=\"Node000009\" class=\"node\">\n<title>Node9</title>\n<g id=\"a_Node000009\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Payment.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"509,-105 339,-105 339,-86 509,-86 509,-105\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-93\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Payment</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node9 -->\n<g id=\"edge8_Node000001_Node000009\" class=\"edge\">\n<title>Node1&#45;&gt;Node9</title>\n<g id=\"a_edge8_Node000001_Node000009\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-166.51C247.51,-151.22 287.48,-127.88 325,-114.5 335.77,-110.66 347.51,-107.53 358.99,-105.01\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"221.31,-163.6 214.78,-171.94 225.09,-169.5 221.31,-163.6\"/>\n</a>\n</g>\n</g>\n<!-- Node10 -->\n<g id=\"Node000010\" class=\"node\">\n<title>Node10</title>\n<g id=\"a_Node000010\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1SecurityToken.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"507.5,-67.5 340.5,-67.5 340.5,-37.5 507.5,-37.5 507.5,-67.5\"/>\n<text text-anchor=\"start\" x=\"348.5\" y=\"-55.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-44.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node10 -->\n<g id=\"edge9_Node000001_Node000010\" class=\"edge\">\n<title>Node1&#45;&gt;Node10</title>\n<g id=\"a_edge9_Node000001_Node000010\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-164.55C237.46,-141.17 280.13,-99.31 325,-76.5 331.79,-73.05 339.11,-70.07 346.57,-67.52\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"212.99,-162.26 208.81,-171.99 218.15,-166.99 212.99,-162.26\"/>\n</a>\n</g>\n</g>\n<!-- Node11 -->\n<g id=\"Node000011\" class=\"node\">\n<title>Node11</title>\n<g id=\"a_Node000011\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1User.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"498.5,-19 349.5,-19 349.5,0 498.5,0 498.5,-19\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node11 -->\n<g id=\"edge10_Node000001_Node000011\" class=\"edge\">\n<title>Node1&#45;&gt;Node11</title>\n<g id=\"a_edge10_Node000001_Node000011\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-162.59C227.9,-129.59 269.35,-61.83 325,-28.5 332.51,-24 340.87,-20.54 349.45,-17.88\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"206.89,-161.16 205.34,-171.64 213.09,-164.42 206.89,-161.16\"/>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"74,-191 0,-191 0,-172 74,-172 74,-191\"/>\n<text text-anchor=\"middle\" x=\"37\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M84.03,-181.5C92.2,-181.5 100.96,-181.5 109.86,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.02,-178 74.02,-181.5 84.02,-185 84.02,-178\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "91fb64b5-2e57-909f-6145-be276da7a271",
            "ancestors": [],
            "type": "function",
            "description": "serves as a base class for JPA entities with an automatically generated unique identifier (id) field.\nFields:\n\t- id (Long): in the BaseEntity class represents a unique identifier for each instance of the entity.\n\n",
            "fields": [
              {
                "name": "id",
                "type_name": "Long",
                "value": null,
                "constant": false,
                "class_name": "BaseEntity",
                "description": "in the BaseEntity class represents a unique identifier for each instance of the entity."
              }
            ],
            "name": "BaseEntity",
            "location": {
              "start": 38,
              "insert": 32,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 31,
                "end": 37
              }
            },
            "item_type": "class",
            "length": 10,
            "docLength": 6
          }
        ]
      }
    }
  },
  {
    "name": "Community.java",
    "path": "service/src/main/java/com/myhome/domain/Community.java",
    "content": {
      "structured": {
        "description": "An `Community` entity with various associations to other entities, including users, houses, and amenities. The entity has fields for admins, houses, name, communityId, district, and amenities, and uses annotations to define the relationships between these fields and other entities.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.BaseEntity Pages: 1 -->\n<svg width=\"531pt\" height=\"371pt\"\n viewBox=\"0.00 0.00 531.00 371.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 367)\">\n<title>com.myhome.domain.BaseEntity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"289,-191 110,-191 110,-172 289,-172 289,-191\"/>\n<text text-anchor=\"middle\" x=\"199.5\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Amenity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-363 340,-363 340,-344 508,-344 508,-363\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-351\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node3 -->\n<g id=\"edge2_Node000001_Node000003\" class=\"edge\">\n<title>Node1&#45;&gt;Node3</title>\n<g id=\"a_edge2_Node000001_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-200.41C227.9,-233.41 269.35,-301.17 325,-334.5 331.47,-338.37 338.57,-341.48 345.9,-343.97\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"213.09,-198.58 205.34,-191.36 206.89,-201.84 213.09,-198.58\"/>\n</a>\n</g>\n</g>\n<!-- Node4 -->\n<g id=\"Node000004\" class=\"node\">\n<title>Node4</title>\n<g id=\"a_Node000004\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1AmenityBookingItem.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-325.5 340,-325.5 340,-295.5 508,-295.5 508,-325.5\"/>\n<text text-anchor=\"start\" x=\"348\" y=\"-313.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-302.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node4 -->\n<g id=\"edge3_Node000001_Node000004\" class=\"edge\">\n<title>Node1&#45;&gt;Node4</title>\n<g id=\"a_edge3_Node000001_Node000004\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-198.45C237.46,-221.83 280.13,-263.69 325,-286.5 331.79,-289.95 339.11,-292.93 346.57,-295.48\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"218.15,-196.01 208.81,-191.01 212.99,-200.74 218.15,-196.01\"/>\n</a>\n</g>\n</g>\n<!-- Node5 -->\n<g id=\"Node000005\" class=\"node\">\n<title>Node5</title>\n<g id=\"a_Node000005\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Community.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-277 332,-277 332,-258 516,-258 516,-277\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-265\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node5 -->\n<g id=\"edge4_Node000001_Node000005\" class=\"edge\">\n<title>Node1&#45;&gt;Node5</title>\n<g id=\"a_edge4_Node000001_Node000005\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-196.49C247.51,-211.78 287.48,-235.12 325,-248.5 335.77,-252.34 347.51,-255.47 358.99,-257.99\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"225.09,-193.5 214.78,-191.06 221.31,-199.4 225.09,-193.5\"/>\n</a>\n</g>\n</g>\n<!-- Node6 -->\n<g id=\"Node000006\" class=\"node\">\n<title>Node6</title>\n<g id=\"a_Node000006\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1CommunityHouse.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-239.5 332,-239.5 332,-209.5 516,-209.5 516,-239.5\"/>\n<text text-anchor=\"start\" x=\"340\" y=\"-227.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-216.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node6 -->\n<g id=\"edge5_Node000001_Node000006\" class=\"edge\">\n<title>Node1&#45;&gt;Node6</title>\n<g id=\"a_edge5_Node000001_Node000006\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-193.01C286.24,-198.07 317.36,-204.08 345.35,-209.49\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"260.36,-189.5 249.88,-191.04 259.03,-196.38 260.36,-189.5\"/>\n</a>\n</g>\n</g>\n<!-- Node7 -->\n<g id=\"Node000007\" class=\"node\">\n<title>Node7</title>\n<g id=\"a_Node000007\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMember.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-191 325,-191 325,-172 523,-172 523,-191\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node7 -->\n<g id=\"edge6_Node000001_Node000007\" class=\"edge\">\n<title>Node1&#45;&gt;Node7</title>\n<g id=\"a_edge6_Node000001_Node000007\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M299.35,-181.5C307.82,-181.5 316.38,-181.5 324.85,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"299.08,-178 289.08,-181.5 299.08,-185 299.08,-178\"/>\n</a>\n</g>\n</g>\n<!-- Node8 -->\n<g id=\"Node000008\" class=\"node\">\n<title>Node8</title>\n<g id=\"a_Node000008\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMemberDocument.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-153.5 325,-153.5 325,-123.5 523,-123.5 523,-153.5\"/>\n<text text-anchor=\"start\" x=\"333\" y=\"-141.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-130.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node8 -->\n<g id=\"edge7_Node000001_Node000008\" class=\"edge\">\n<title>Node1&#45;&gt;Node8</title>\n<g id=\"a_edge7_Node000001_Node000008\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-169.99C286.24,-164.93 317.36,-158.92 345.35,-153.51\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"259.03,-166.62 249.88,-171.96 260.36,-173.5 259.03,-166.62\"/>\n</a>\n</g>\n</g>\n<!-- Node9 -->\n<g id=\"Node000009\" class=\"node\">\n<title>Node9</title>\n<g id=\"a_Node000009\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Payment.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"509,-105 339,-105 339,-86 509,-86 509,-105\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-93\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Payment</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node9 -->\n<g id=\"edge8_Node000001_Node000009\" class=\"edge\">\n<title>Node1&#45;&gt;Node9</title>\n<g id=\"a_edge8_Node000001_Node000009\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-166.51C247.51,-151.22 287.48,-127.88 325,-114.5 335.77,-110.66 347.51,-107.53 358.99,-105.01\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"221.31,-163.6 214.78,-171.94 225.09,-169.5 221.31,-163.6\"/>\n</a>\n</g>\n</g>\n<!-- Node10 -->\n<g id=\"Node000010\" class=\"node\">\n<title>Node10</title>\n<g id=\"a_Node000010\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1SecurityToken.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"507.5,-67.5 340.5,-67.5 340.5,-37.5 507.5,-37.5 507.5,-67.5\"/>\n<text text-anchor=\"start\" x=\"348.5\" y=\"-55.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-44.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node10 -->\n<g id=\"edge9_Node000001_Node000010\" class=\"edge\">\n<title>Node1&#45;&gt;Node10</title>\n<g id=\"a_edge9_Node000001_Node000010\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-164.55C237.46,-141.17 280.13,-99.31 325,-76.5 331.79,-73.05 339.11,-70.07 346.57,-67.52\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"212.99,-162.26 208.81,-171.99 218.15,-166.99 212.99,-162.26\"/>\n</a>\n</g>\n</g>\n<!-- Node11 -->\n<g id=\"Node000011\" class=\"node\">\n<title>Node11</title>\n<g id=\"a_Node000011\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1User.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"498.5,-19 349.5,-19 349.5,0 498.5,0 498.5,-19\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node11 -->\n<g id=\"edge10_Node000001_Node000011\" class=\"edge\">\n<title>Node1&#45;&gt;Node11</title>\n<g id=\"a_edge10_Node000001_Node000011\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-162.59C227.9,-129.59 269.35,-61.83 325,-28.5 332.51,-24 340.87,-20.54 349.45,-17.88\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"206.89,-161.16 205.34,-171.64 213.09,-164.42 206.89,-161.16\"/>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"74,-191 0,-191 0,-172 74,-172 74,-191\"/>\n<text text-anchor=\"middle\" x=\"37\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M84.03,-181.5C92.2,-181.5 100.96,-181.5 109.86,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.02,-178 74.02,-181.5 84.02,-185 84.02,-178\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "c6c67be7-24cd-52a6-0e44-d36e5851faf9",
            "ancestors": [],
            "type": "function",
            "description": "represents a valid user in the service with various associations to other entities, including users, houses, and amenities.\nFields:\n\t- admins (Set<User>): represents a set of user objects related to the community through their association with the community as admins.\n\t- houses (Set<CommunityHouse>): in the Community class represents a set of House objects related to the community through their association with the community as houses, as defined in the Java code provided.\n\t- name (String): in the Community entity represents a unique identifier for a community within a specific district.\n\t- communityId (String): in the Community class represents a unique identifier for a specific community within the application's domain.\n\t- district (String): in the Community class represents a geographical area where the community is located.\n\t- amenities (Set<Amenity>): in the Community class represents a set of Amenity objects related to the community through the mappedBy attribute in the OneToMany annotation.\n\n",
            "fields": [
              {
                "name": "admins",
                "type_name": "Set<User>",
                "value": "new HashSet<>()",
                "constant": false,
                "class_name": "Community",
                "description": "represents a set of user objects related to the community through their association with the community as admins."
              },
              {
                "name": "houses",
                "type_name": "Set<CommunityHouse>",
                "value": "new HashSet<>()",
                "constant": false,
                "class_name": "Community",
                "description": "in the Community class represents a set of House objects related to the community through their association with the community as houses, as defined in the Java code provided."
              },
              {
                "name": "name",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Community",
                "description": "in the Community entity represents a unique identifier for a community within a specific district."
              },
              {
                "name": "communityId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Community",
                "description": "in the Community class represents a unique identifier for a specific community within the application's domain."
              },
              {
                "name": "district",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Community",
                "description": "in the Community class represents a geographical area where the community is located."
              },
              {
                "name": "amenities",
                "type_name": "Set<Amenity>",
                "value": "new HashSet<>()",
                "constant": false,
                "class_name": "Community",
                "description": "in the Community class represents a set of Amenity objects related to the community through the mappedBy attribute in the OneToMany annotation."
              }
            ],
            "name": "Community",
            "location": {
              "start": 58,
              "insert": 39,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 38,
                "end": 57
              }
            },
            "item_type": "class",
            "length": 43,
            "docLength": 19
          }
        ]
      }
    }
  },
  {
    "name": "CommunityHouse.java",
    "path": "service/src/main/java/com/myhome/domain/CommunityHouse.java",
    "content": {
      "structured": {
        "description": "A `CommunityHouse` class that represents a house within a community, with relationships to `Community`, `HouseMembers`, and `Amenities`. The code uses Lombok and JPA annotations to define getters, setters, and named entity graphs. The `CommunityHouse` class has fields for the community, name, houseId, and relationships to `HouseMembers` and `Amenities`.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.BaseEntity Pages: 1 -->\n<svg width=\"531pt\" height=\"371pt\"\n viewBox=\"0.00 0.00 531.00 371.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 367)\">\n<title>com.myhome.domain.BaseEntity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"289,-191 110,-191 110,-172 289,-172 289,-191\"/>\n<text text-anchor=\"middle\" x=\"199.5\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Amenity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-363 340,-363 340,-344 508,-344 508,-363\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-351\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node3 -->\n<g id=\"edge2_Node000001_Node000003\" class=\"edge\">\n<title>Node1&#45;&gt;Node3</title>\n<g id=\"a_edge2_Node000001_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-200.41C227.9,-233.41 269.35,-301.17 325,-334.5 331.47,-338.37 338.57,-341.48 345.9,-343.97\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"213.09,-198.58 205.34,-191.36 206.89,-201.84 213.09,-198.58\"/>\n</a>\n</g>\n</g>\n<!-- Node4 -->\n<g id=\"Node000004\" class=\"node\">\n<title>Node4</title>\n<g id=\"a_Node000004\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1AmenityBookingItem.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-325.5 340,-325.5 340,-295.5 508,-295.5 508,-325.5\"/>\n<text text-anchor=\"start\" x=\"348\" y=\"-313.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-302.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node4 -->\n<g id=\"edge3_Node000001_Node000004\" class=\"edge\">\n<title>Node1&#45;&gt;Node4</title>\n<g id=\"a_edge3_Node000001_Node000004\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-198.45C237.46,-221.83 280.13,-263.69 325,-286.5 331.79,-289.95 339.11,-292.93 346.57,-295.48\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"218.15,-196.01 208.81,-191.01 212.99,-200.74 218.15,-196.01\"/>\n</a>\n</g>\n</g>\n<!-- Node5 -->\n<g id=\"Node000005\" class=\"node\">\n<title>Node5</title>\n<g id=\"a_Node000005\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Community.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-277 332,-277 332,-258 516,-258 516,-277\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-265\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node5 -->\n<g id=\"edge4_Node000001_Node000005\" class=\"edge\">\n<title>Node1&#45;&gt;Node5</title>\n<g id=\"a_edge4_Node000001_Node000005\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-196.49C247.51,-211.78 287.48,-235.12 325,-248.5 335.77,-252.34 347.51,-255.47 358.99,-257.99\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"225.09,-193.5 214.78,-191.06 221.31,-199.4 225.09,-193.5\"/>\n</a>\n</g>\n</g>\n<!-- Node6 -->\n<g id=\"Node000006\" class=\"node\">\n<title>Node6</title>\n<g id=\"a_Node000006\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1CommunityHouse.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-239.5 332,-239.5 332,-209.5 516,-209.5 516,-239.5\"/>\n<text text-anchor=\"start\" x=\"340\" y=\"-227.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-216.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node6 -->\n<g id=\"edge5_Node000001_Node000006\" class=\"edge\">\n<title>Node1&#45;&gt;Node6</title>\n<g id=\"a_edge5_Node000001_Node000006\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-193.01C286.24,-198.07 317.36,-204.08 345.35,-209.49\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"260.36,-189.5 249.88,-191.04 259.03,-196.38 260.36,-189.5\"/>\n</a>\n</g>\n</g>\n<!-- Node7 -->\n<g id=\"Node000007\" class=\"node\">\n<title>Node7</title>\n<g id=\"a_Node000007\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMember.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-191 325,-191 325,-172 523,-172 523,-191\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node7 -->\n<g id=\"edge6_Node000001_Node000007\" class=\"edge\">\n<title>Node1&#45;&gt;Node7</title>\n<g id=\"a_edge6_Node000001_Node000007\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M299.35,-181.5C307.82,-181.5 316.38,-181.5 324.85,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"299.08,-178 289.08,-181.5 299.08,-185 299.08,-178\"/>\n</a>\n</g>\n</g>\n<!-- Node8 -->\n<g id=\"Node000008\" class=\"node\">\n<title>Node8</title>\n<g id=\"a_Node000008\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMemberDocument.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-153.5 325,-153.5 325,-123.5 523,-123.5 523,-153.5\"/>\n<text text-anchor=\"start\" x=\"333\" y=\"-141.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-130.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node8 -->\n<g id=\"edge7_Node000001_Node000008\" class=\"edge\">\n<title>Node1&#45;&gt;Node8</title>\n<g id=\"a_edge7_Node000001_Node000008\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-169.99C286.24,-164.93 317.36,-158.92 345.35,-153.51\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"259.03,-166.62 249.88,-171.96 260.36,-173.5 259.03,-166.62\"/>\n</a>\n</g>\n</g>\n<!-- Node9 -->\n<g id=\"Node000009\" class=\"node\">\n<title>Node9</title>\n<g id=\"a_Node000009\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Payment.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"509,-105 339,-105 339,-86 509,-86 509,-105\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-93\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Payment</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node9 -->\n<g id=\"edge8_Node000001_Node000009\" class=\"edge\">\n<title>Node1&#45;&gt;Node9</title>\n<g id=\"a_edge8_Node000001_Node000009\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-166.51C247.51,-151.22 287.48,-127.88 325,-114.5 335.77,-110.66 347.51,-107.53 358.99,-105.01\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"221.31,-163.6 214.78,-171.94 225.09,-169.5 221.31,-163.6\"/>\n</a>\n</g>\n</g>\n<!-- Node10 -->\n<g id=\"Node000010\" class=\"node\">\n<title>Node10</title>\n<g id=\"a_Node000010\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1SecurityToken.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"507.5,-67.5 340.5,-67.5 340.5,-37.5 507.5,-37.5 507.5,-67.5\"/>\n<text text-anchor=\"start\" x=\"348.5\" y=\"-55.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-44.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node10 -->\n<g id=\"edge9_Node000001_Node000010\" class=\"edge\">\n<title>Node1&#45;&gt;Node10</title>\n<g id=\"a_edge9_Node000001_Node000010\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-164.55C237.46,-141.17 280.13,-99.31 325,-76.5 331.79,-73.05 339.11,-70.07 346.57,-67.52\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"212.99,-162.26 208.81,-171.99 218.15,-166.99 212.99,-162.26\"/>\n</a>\n</g>\n</g>\n<!-- Node11 -->\n<g id=\"Node000011\" class=\"node\">\n<title>Node11</title>\n<g id=\"a_Node000011\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1User.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"498.5,-19 349.5,-19 349.5,0 498.5,0 498.5,-19\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node11 -->\n<g id=\"edge10_Node000001_Node000011\" class=\"edge\">\n<title>Node1&#45;&gt;Node11</title>\n<g id=\"a_edge10_Node000001_Node000011\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-162.59C227.9,-129.59 269.35,-61.83 325,-28.5 332.51,-24 340.87,-20.54 349.45,-17.88\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"206.89,-161.16 205.34,-171.64 213.09,-164.42 206.89,-161.16\"/>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"74,-191 0,-191 0,-172 74,-172 74,-191\"/>\n<text text-anchor=\"middle\" x=\"37\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M84.03,-181.5C92.2,-181.5 100.96,-181.5 109.86,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.02,-178 74.02,-181.5 84.02,-185 84.02,-178\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "08cebbe9-6fef-8e93-184f-86559cc3ce68",
            "ancestors": [],
            "type": "function",
            "description": "represents a house within a community and contains relationships with HouseMembers and Amenities.\nFields:\n\t- community (Community): represents an association between a CommunityHouse entity and a single Community instance.\n\t- name (String): in the CommunityHouse class represents a unique identifier for a specific community house within a community.\n\t- houseId (String): in the CommunityHouse class represents a unique identifier for each CommunityHouse instance in the system.\n\t- houseMembers (Set<HouseMember>): in the CommunityHouse class contains a set of objects related to a particular community house through a many-to-one relationship with the HouseMember entity.\n\t- amenities (Set<Amenity>): in the CommunityHouse class represents a set of Amenity objects related to the house.\n\n",
            "fields": [
              {
                "name": "community",
                "type_name": "Community",
                "value": null,
                "constant": false,
                "class_name": "CommunityHouse",
                "description": "represents an association between a CommunityHouse entity and a single Community instance."
              },
              {
                "name": "name",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "CommunityHouse",
                "description": "in the CommunityHouse class represents a unique identifier for a specific community house within a community."
              },
              {
                "name": "houseId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "CommunityHouse",
                "description": "in the CommunityHouse class represents a unique identifier for each CommunityHouse instance in the system."
              },
              {
                "name": "houseMembers",
                "type_name": "Set<HouseMember>",
                "value": "new HashSet<>()",
                "constant": false,
                "class_name": "CommunityHouse",
                "description": "in the CommunityHouse class contains a set of objects related to a particular community house through a many-to-one relationship with the HouseMember entity."
              },
              {
                "name": "amenities",
                "type_name": "Set<Amenity>",
                "value": "new HashSet<>()",
                "constant": false,
                "class_name": "CommunityHouse",
                "description": "in the CommunityHouse class represents a set of Amenity objects related to the house."
              }
            ],
            "name": "CommunityHouse",
            "location": {
              "start": 52,
              "insert": 36,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 35,
                "end": 51
              }
            },
            "item_type": "class",
            "length": 35,
            "docLength": 16
          }
        ]
      }
    }
  },
  {
    "name": "HouseMember.java",
    "path": "service/src/main/java/com/myhome/domain/HouseMember.java",
    "content": {
      "structured": {
        "description": "An entity called `HouseMember` that represents an individual member of a community house. The entity has several attributes, including `memberId`, `name`, and `communityHouse`. It also has relationships with other entities, such as `HouseMemberDocument` and `CommunityHouse`. The code uses Lombok for automating boilerplate code generation and follows a structured approach to annotation and naming conventions.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.BaseEntity Pages: 1 -->\n<svg width=\"531pt\" height=\"371pt\"\n viewBox=\"0.00 0.00 531.00 371.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 367)\">\n<title>com.myhome.domain.BaseEntity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"289,-191 110,-191 110,-172 289,-172 289,-191\"/>\n<text text-anchor=\"middle\" x=\"199.5\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Amenity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-363 340,-363 340,-344 508,-344 508,-363\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-351\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node3 -->\n<g id=\"edge2_Node000001_Node000003\" class=\"edge\">\n<title>Node1&#45;&gt;Node3</title>\n<g id=\"a_edge2_Node000001_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-200.41C227.9,-233.41 269.35,-301.17 325,-334.5 331.47,-338.37 338.57,-341.48 345.9,-343.97\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"213.09,-198.58 205.34,-191.36 206.89,-201.84 213.09,-198.58\"/>\n</a>\n</g>\n</g>\n<!-- Node4 -->\n<g id=\"Node000004\" class=\"node\">\n<title>Node4</title>\n<g id=\"a_Node000004\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1AmenityBookingItem.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-325.5 340,-325.5 340,-295.5 508,-295.5 508,-325.5\"/>\n<text text-anchor=\"start\" x=\"348\" y=\"-313.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-302.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node4 -->\n<g id=\"edge3_Node000001_Node000004\" class=\"edge\">\n<title>Node1&#45;&gt;Node4</title>\n<g id=\"a_edge3_Node000001_Node000004\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-198.45C237.46,-221.83 280.13,-263.69 325,-286.5 331.79,-289.95 339.11,-292.93 346.57,-295.48\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"218.15,-196.01 208.81,-191.01 212.99,-200.74 218.15,-196.01\"/>\n</a>\n</g>\n</g>\n<!-- Node5 -->\n<g id=\"Node000005\" class=\"node\">\n<title>Node5</title>\n<g id=\"a_Node000005\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Community.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-277 332,-277 332,-258 516,-258 516,-277\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-265\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node5 -->\n<g id=\"edge4_Node000001_Node000005\" class=\"edge\">\n<title>Node1&#45;&gt;Node5</title>\n<g id=\"a_edge4_Node000001_Node000005\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-196.49C247.51,-211.78 287.48,-235.12 325,-248.5 335.77,-252.34 347.51,-255.47 358.99,-257.99\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"225.09,-193.5 214.78,-191.06 221.31,-199.4 225.09,-193.5\"/>\n</a>\n</g>\n</g>\n<!-- Node6 -->\n<g id=\"Node000006\" class=\"node\">\n<title>Node6</title>\n<g id=\"a_Node000006\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1CommunityHouse.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-239.5 332,-239.5 332,-209.5 516,-209.5 516,-239.5\"/>\n<text text-anchor=\"start\" x=\"340\" y=\"-227.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-216.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node6 -->\n<g id=\"edge5_Node000001_Node000006\" class=\"edge\">\n<title>Node1&#45;&gt;Node6</title>\n<g id=\"a_edge5_Node000001_Node000006\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-193.01C286.24,-198.07 317.36,-204.08 345.35,-209.49\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"260.36,-189.5 249.88,-191.04 259.03,-196.38 260.36,-189.5\"/>\n</a>\n</g>\n</g>\n<!-- Node7 -->\n<g id=\"Node000007\" class=\"node\">\n<title>Node7</title>\n<g id=\"a_Node000007\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMember.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-191 325,-191 325,-172 523,-172 523,-191\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node7 -->\n<g id=\"edge6_Node000001_Node000007\" class=\"edge\">\n<title>Node1&#45;&gt;Node7</title>\n<g id=\"a_edge6_Node000001_Node000007\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M299.35,-181.5C307.82,-181.5 316.38,-181.5 324.85,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"299.08,-178 289.08,-181.5 299.08,-185 299.08,-178\"/>\n</a>\n</g>\n</g>\n<!-- Node8 -->\n<g id=\"Node000008\" class=\"node\">\n<title>Node8</title>\n<g id=\"a_Node000008\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMemberDocument.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-153.5 325,-153.5 325,-123.5 523,-123.5 523,-153.5\"/>\n<text text-anchor=\"start\" x=\"333\" y=\"-141.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-130.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node8 -->\n<g id=\"edge7_Node000001_Node000008\" class=\"edge\">\n<title>Node1&#45;&gt;Node8</title>\n<g id=\"a_edge7_Node000001_Node000008\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-169.99C286.24,-164.93 317.36,-158.92 345.35,-153.51\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"259.03,-166.62 249.88,-171.96 260.36,-173.5 259.03,-166.62\"/>\n</a>\n</g>\n</g>\n<!-- Node9 -->\n<g id=\"Node000009\" class=\"node\">\n<title>Node9</title>\n<g id=\"a_Node000009\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Payment.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"509,-105 339,-105 339,-86 509,-86 509,-105\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-93\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Payment</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node9 -->\n<g id=\"edge8_Node000001_Node000009\" class=\"edge\">\n<title>Node1&#45;&gt;Node9</title>\n<g id=\"a_edge8_Node000001_Node000009\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-166.51C247.51,-151.22 287.48,-127.88 325,-114.5 335.77,-110.66 347.51,-107.53 358.99,-105.01\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"221.31,-163.6 214.78,-171.94 225.09,-169.5 221.31,-163.6\"/>\n</a>\n</g>\n</g>\n<!-- Node10 -->\n<g id=\"Node000010\" class=\"node\">\n<title>Node10</title>\n<g id=\"a_Node000010\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1SecurityToken.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"507.5,-67.5 340.5,-67.5 340.5,-37.5 507.5,-37.5 507.5,-67.5\"/>\n<text text-anchor=\"start\" x=\"348.5\" y=\"-55.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-44.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node10 -->\n<g id=\"edge9_Node000001_Node000010\" class=\"edge\">\n<title>Node1&#45;&gt;Node10</title>\n<g id=\"a_edge9_Node000001_Node000010\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-164.55C237.46,-141.17 280.13,-99.31 325,-76.5 331.79,-73.05 339.11,-70.07 346.57,-67.52\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"212.99,-162.26 208.81,-171.99 218.15,-166.99 212.99,-162.26\"/>\n</a>\n</g>\n</g>\n<!-- Node11 -->\n<g id=\"Node000011\" class=\"node\">\n<title>Node11</title>\n<g id=\"a_Node000011\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1User.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"498.5,-19 349.5,-19 349.5,0 498.5,0 498.5,-19\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node11 -->\n<g id=\"edge10_Node000001_Node000011\" class=\"edge\">\n<title>Node1&#45;&gt;Node11</title>\n<g id=\"a_edge10_Node000001_Node000011\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-162.59C227.9,-129.59 269.35,-61.83 325,-28.5 332.51,-24 340.87,-20.54 349.45,-17.88\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"206.89,-161.16 205.34,-171.64 213.09,-164.42 206.89,-161.16\"/>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"74,-191 0,-191 0,-172 74,-172 74,-191\"/>\n<text text-anchor=\"middle\" x=\"37\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M84.03,-181.5C92.2,-181.5 100.96,-181.5 109.86,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.02,-178 74.02,-181.5 84.02,-185 84.02,-178\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "ea23a427-b934-f7a9-a24b-4993f3c9eceb",
            "ancestors": [],
            "type": "function",
            "description": "represents an individual member of a house with unique identification and relationships to other entities such as documents, communities, and members.\nFields:\n\t- memberId (String): in the HouseMember class represents a unique identifier for each member of a community house.\n\t- houseMemberDocument (HouseMemberDocument): in the HouseMember class represents a relationship between a House Member entity and a specific document, allowing for the association of a member with a particular document.\n\t- name (String): in the HouseMember class represents a string value that identifies an individual member of a community house.\n\t- communityHouse (CommunityHouse): in the HouseMember class represents a reference to an instance of the CommunityHouse class, which is a related or associated entity in the domain model.\n\n",
            "fields": [
              {
                "name": "memberId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "HouseMember",
                "description": "in the HouseMember class represents a unique identifier for each member of a community house."
              },
              {
                "name": "houseMemberDocument",
                "type_name": "HouseMemberDocument",
                "value": null,
                "constant": false,
                "class_name": "HouseMember",
                "description": "in the HouseMember class represents a relationship between a House Member entity and a specific document, allowing for the association of a member with a particular document."
              },
              {
                "name": "name",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "HouseMember",
                "description": "in the HouseMember class represents a string value that identifies an individual member of a community house."
              },
              {
                "name": "communityHouse",
                "type_name": "CommunityHouse",
                "value": null,
                "constant": false,
                "class_name": "HouseMember",
                "description": "in the HouseMember class represents a reference to an instance of the CommunityHouse class, which is a related or associated entity in the domain model."
              }
            ],
            "name": "HouseMember",
            "location": {
              "start": 45,
              "insert": 30,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 29,
                "end": 44
              }
            },
            "item_type": "class",
            "length": 22,
            "docLength": 15
          }
        ]
      }
    }
  },
  {
    "name": "HouseMemberDocument.java",
    "path": "service/src/main/java/com/myhome/domain/HouseMemberDocument.java",
    "content": {
      "structured": {
        "description": "An entity class called `HouseMemberDocument` that represents a document with a unique filename and binary content stored as a large object (Lob) in the byte array format. The class uses JPA annotations for persistence and includes methods for constructing the object and computing its hash code.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.BaseEntity Pages: 1 -->\n<svg width=\"531pt\" height=\"371pt\"\n viewBox=\"0.00 0.00 531.00 371.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 367)\">\n<title>com.myhome.domain.BaseEntity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"289,-191 110,-191 110,-172 289,-172 289,-191\"/>\n<text text-anchor=\"middle\" x=\"199.5\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Amenity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-363 340,-363 340,-344 508,-344 508,-363\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-351\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node3 -->\n<g id=\"edge2_Node000001_Node000003\" class=\"edge\">\n<title>Node1&#45;&gt;Node3</title>\n<g id=\"a_edge2_Node000001_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-200.41C227.9,-233.41 269.35,-301.17 325,-334.5 331.47,-338.37 338.57,-341.48 345.9,-343.97\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"213.09,-198.58 205.34,-191.36 206.89,-201.84 213.09,-198.58\"/>\n</a>\n</g>\n</g>\n<!-- Node4 -->\n<g id=\"Node000004\" class=\"node\">\n<title>Node4</title>\n<g id=\"a_Node000004\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1AmenityBookingItem.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-325.5 340,-325.5 340,-295.5 508,-295.5 508,-325.5\"/>\n<text text-anchor=\"start\" x=\"348\" y=\"-313.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-302.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node4 -->\n<g id=\"edge3_Node000001_Node000004\" class=\"edge\">\n<title>Node1&#45;&gt;Node4</title>\n<g id=\"a_edge3_Node000001_Node000004\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-198.45C237.46,-221.83 280.13,-263.69 325,-286.5 331.79,-289.95 339.11,-292.93 346.57,-295.48\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"218.15,-196.01 208.81,-191.01 212.99,-200.74 218.15,-196.01\"/>\n</a>\n</g>\n</g>\n<!-- Node5 -->\n<g id=\"Node000005\" class=\"node\">\n<title>Node5</title>\n<g id=\"a_Node000005\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Community.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-277 332,-277 332,-258 516,-258 516,-277\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-265\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node5 -->\n<g id=\"edge4_Node000001_Node000005\" class=\"edge\">\n<title>Node1&#45;&gt;Node5</title>\n<g id=\"a_edge4_Node000001_Node000005\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-196.49C247.51,-211.78 287.48,-235.12 325,-248.5 335.77,-252.34 347.51,-255.47 358.99,-257.99\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"225.09,-193.5 214.78,-191.06 221.31,-199.4 225.09,-193.5\"/>\n</a>\n</g>\n</g>\n<!-- Node6 -->\n<g id=\"Node000006\" class=\"node\">\n<title>Node6</title>\n<g id=\"a_Node000006\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1CommunityHouse.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-239.5 332,-239.5 332,-209.5 516,-209.5 516,-239.5\"/>\n<text text-anchor=\"start\" x=\"340\" y=\"-227.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-216.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node6 -->\n<g id=\"edge5_Node000001_Node000006\" class=\"edge\">\n<title>Node1&#45;&gt;Node6</title>\n<g id=\"a_edge5_Node000001_Node000006\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-193.01C286.24,-198.07 317.36,-204.08 345.35,-209.49\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"260.36,-189.5 249.88,-191.04 259.03,-196.38 260.36,-189.5\"/>\n</a>\n</g>\n</g>\n<!-- Node7 -->\n<g id=\"Node000007\" class=\"node\">\n<title>Node7</title>\n<g id=\"a_Node000007\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMember.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-191 325,-191 325,-172 523,-172 523,-191\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node7 -->\n<g id=\"edge6_Node000001_Node000007\" class=\"edge\">\n<title>Node1&#45;&gt;Node7</title>\n<g id=\"a_edge6_Node000001_Node000007\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M299.35,-181.5C307.82,-181.5 316.38,-181.5 324.85,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"299.08,-178 289.08,-181.5 299.08,-185 299.08,-178\"/>\n</a>\n</g>\n</g>\n<!-- Node8 -->\n<g id=\"Node000008\" class=\"node\">\n<title>Node8</title>\n<g id=\"a_Node000008\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMemberDocument.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-153.5 325,-153.5 325,-123.5 523,-123.5 523,-153.5\"/>\n<text text-anchor=\"start\" x=\"333\" y=\"-141.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-130.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node8 -->\n<g id=\"edge7_Node000001_Node000008\" class=\"edge\">\n<title>Node1&#45;&gt;Node8</title>\n<g id=\"a_edge7_Node000001_Node000008\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-169.99C286.24,-164.93 317.36,-158.92 345.35,-153.51\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"259.03,-166.62 249.88,-171.96 260.36,-173.5 259.03,-166.62\"/>\n</a>\n</g>\n</g>\n<!-- Node9 -->\n<g id=\"Node000009\" class=\"node\">\n<title>Node9</title>\n<g id=\"a_Node000009\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Payment.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"509,-105 339,-105 339,-86 509,-86 509,-105\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-93\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Payment</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node9 -->\n<g id=\"edge8_Node000001_Node000009\" class=\"edge\">\n<title>Node1&#45;&gt;Node9</title>\n<g id=\"a_edge8_Node000001_Node000009\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-166.51C247.51,-151.22 287.48,-127.88 325,-114.5 335.77,-110.66 347.51,-107.53 358.99,-105.01\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"221.31,-163.6 214.78,-171.94 225.09,-169.5 221.31,-163.6\"/>\n</a>\n</g>\n</g>\n<!-- Node10 -->\n<g id=\"Node000010\" class=\"node\">\n<title>Node10</title>\n<g id=\"a_Node000010\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1SecurityToken.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"507.5,-67.5 340.5,-67.5 340.5,-37.5 507.5,-37.5 507.5,-67.5\"/>\n<text text-anchor=\"start\" x=\"348.5\" y=\"-55.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-44.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node10 -->\n<g id=\"edge9_Node000001_Node000010\" class=\"edge\">\n<title>Node1&#45;&gt;Node10</title>\n<g id=\"a_edge9_Node000001_Node000010\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-164.55C237.46,-141.17 280.13,-99.31 325,-76.5 331.79,-73.05 339.11,-70.07 346.57,-67.52\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"212.99,-162.26 208.81,-171.99 218.15,-166.99 212.99,-162.26\"/>\n</a>\n</g>\n</g>\n<!-- Node11 -->\n<g id=\"Node000011\" class=\"node\">\n<title>Node11</title>\n<g id=\"a_Node000011\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1User.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"498.5,-19 349.5,-19 349.5,0 498.5,0 498.5,-19\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node11 -->\n<g id=\"edge10_Node000001_Node000011\" class=\"edge\">\n<title>Node1&#45;&gt;Node11</title>\n<g id=\"a_edge10_Node000001_Node000011\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-162.59C227.9,-129.59 269.35,-61.83 325,-28.5 332.51,-24 340.87,-20.54 349.45,-17.88\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"206.89,-161.16 205.34,-171.64 213.09,-164.42 206.89,-161.16\"/>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"74,-191 0,-191 0,-172 74,-172 74,-191\"/>\n<text text-anchor=\"middle\" x=\"37\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M84.03,-181.5C92.2,-181.5 100.96,-181.5 109.86,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.02,-178 74.02,-181.5 84.02,-185 84.02,-178\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "bec804bf-e042-4db1-bc46-6f8afd8c57fd",
            "ancestors": [],
            "type": "function",
            "description": "represents an entity in a database with two fields: documentFilename and documentContent, both stored as Large Object Binary (Lob) in byte array format for storing binary data.\nFields:\n\t- documentFilename (String): represents a unique name for a file containing document content in the HouseMemberDocument class.\n\t- documentContent (byte[]): is an array of bytes with unknown length and type, stored as a Large Object Binary (Lob) in the byte array format.\n\n",
            "fields": [
              {
                "name": "documentFilename",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "HouseMemberDocument",
                "description": "represents a unique name for a file containing document content in the HouseMemberDocument class."
              },
              {
                "name": "documentContent",
                "type_name": "byte[]",
                "value": "new byte[0]",
                "constant": false,
                "class_name": "HouseMemberDocument",
                "description": "is an array of bytes with unknown length and type, stored as a Large Object Binary (Lob) in the byte array format."
              }
            ],
            "name": "HouseMemberDocument",
            "location": {
              "start": 38,
              "insert": 27,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 26,
                "end": 37
              }
            },
            "item_type": "class",
            "length": 14,
            "docLength": 11
          }
        ]
      }
    }
  },
  {
    "name": "PasswordActionType.java",
    "path": "service/src/main/java/com/myhome/domain/PasswordActionType.java",
    "content": {
      "structured": {
        "description": "An enum class `PasswordActionType` with two constant values: `FORGOT` and `RESET`.",
        "items": []
      }
    }
  },
  {
    "name": "Payment.java",
    "path": "service/src/main/java/com/myhome/domain/Payment.java",
    "content": {
      "structured": {
        "description": "an entity called Payment that represents a payment made by a user to their housing provider. The Payment class has several fields and methods: paymentId, charge, type, description, recurring, dueDate, admin, and member. The paymentId field is unique and non-null, while the other fields can be null. The charge field represents the amount of money paid, the type field identifies the payment's purpose, and the description field provides a brief summary. The recurring field indicates whether the payment is recurring, and the dueDate field represents the date the payment is expected to be made. The admin and member fields represent the user who manages or oversees the payment, and the member associated with the payment, respectively.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.BaseEntity Pages: 1 -->\n<svg width=\"531pt\" height=\"371pt\"\n viewBox=\"0.00 0.00 531.00 371.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 367)\">\n<title>com.myhome.domain.BaseEntity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"289,-191 110,-191 110,-172 289,-172 289,-191\"/>\n<text text-anchor=\"middle\" x=\"199.5\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Amenity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-363 340,-363 340,-344 508,-344 508,-363\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-351\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node3 -->\n<g id=\"edge2_Node000001_Node000003\" class=\"edge\">\n<title>Node1&#45;&gt;Node3</title>\n<g id=\"a_edge2_Node000001_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-200.41C227.9,-233.41 269.35,-301.17 325,-334.5 331.47,-338.37 338.57,-341.48 345.9,-343.97\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"213.09,-198.58 205.34,-191.36 206.89,-201.84 213.09,-198.58\"/>\n</a>\n</g>\n</g>\n<!-- Node4 -->\n<g id=\"Node000004\" class=\"node\">\n<title>Node4</title>\n<g id=\"a_Node000004\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1AmenityBookingItem.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-325.5 340,-325.5 340,-295.5 508,-295.5 508,-325.5\"/>\n<text text-anchor=\"start\" x=\"348\" y=\"-313.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-302.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node4 -->\n<g id=\"edge3_Node000001_Node000004\" class=\"edge\">\n<title>Node1&#45;&gt;Node4</title>\n<g id=\"a_edge3_Node000001_Node000004\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-198.45C237.46,-221.83 280.13,-263.69 325,-286.5 331.79,-289.95 339.11,-292.93 346.57,-295.48\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"218.15,-196.01 208.81,-191.01 212.99,-200.74 218.15,-196.01\"/>\n</a>\n</g>\n</g>\n<!-- Node5 -->\n<g id=\"Node000005\" class=\"node\">\n<title>Node5</title>\n<g id=\"a_Node000005\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Community.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-277 332,-277 332,-258 516,-258 516,-277\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-265\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node5 -->\n<g id=\"edge4_Node000001_Node000005\" class=\"edge\">\n<title>Node1&#45;&gt;Node5</title>\n<g id=\"a_edge4_Node000001_Node000005\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-196.49C247.51,-211.78 287.48,-235.12 325,-248.5 335.77,-252.34 347.51,-255.47 358.99,-257.99\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"225.09,-193.5 214.78,-191.06 221.31,-199.4 225.09,-193.5\"/>\n</a>\n</g>\n</g>\n<!-- Node6 -->\n<g id=\"Node000006\" class=\"node\">\n<title>Node6</title>\n<g id=\"a_Node000006\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1CommunityHouse.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-239.5 332,-239.5 332,-209.5 516,-209.5 516,-239.5\"/>\n<text text-anchor=\"start\" x=\"340\" y=\"-227.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-216.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node6 -->\n<g id=\"edge5_Node000001_Node000006\" class=\"edge\">\n<title>Node1&#45;&gt;Node6</title>\n<g id=\"a_edge5_Node000001_Node000006\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-193.01C286.24,-198.07 317.36,-204.08 345.35,-209.49\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"260.36,-189.5 249.88,-191.04 259.03,-196.38 260.36,-189.5\"/>\n</a>\n</g>\n</g>\n<!-- Node7 -->\n<g id=\"Node000007\" class=\"node\">\n<title>Node7</title>\n<g id=\"a_Node000007\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMember.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-191 325,-191 325,-172 523,-172 523,-191\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node7 -->\n<g id=\"edge6_Node000001_Node000007\" class=\"edge\">\n<title>Node1&#45;&gt;Node7</title>\n<g id=\"a_edge6_Node000001_Node000007\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M299.35,-181.5C307.82,-181.5 316.38,-181.5 324.85,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"299.08,-178 289.08,-181.5 299.08,-185 299.08,-178\"/>\n</a>\n</g>\n</g>\n<!-- Node8 -->\n<g id=\"Node000008\" class=\"node\">\n<title>Node8</title>\n<g id=\"a_Node000008\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMemberDocument.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-153.5 325,-153.5 325,-123.5 523,-123.5 523,-153.5\"/>\n<text text-anchor=\"start\" x=\"333\" y=\"-141.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-130.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node8 -->\n<g id=\"edge7_Node000001_Node000008\" class=\"edge\">\n<title>Node1&#45;&gt;Node8</title>\n<g id=\"a_edge7_Node000001_Node000008\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-169.99C286.24,-164.93 317.36,-158.92 345.35,-153.51\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"259.03,-166.62 249.88,-171.96 260.36,-173.5 259.03,-166.62\"/>\n</a>\n</g>\n</g>\n<!-- Node9 -->\n<g id=\"Node000009\" class=\"node\">\n<title>Node9</title>\n<g id=\"a_Node000009\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Payment.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"509,-105 339,-105 339,-86 509,-86 509,-105\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-93\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Payment</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node9 -->\n<g id=\"edge8_Node000001_Node000009\" class=\"edge\">\n<title>Node1&#45;&gt;Node9</title>\n<g id=\"a_edge8_Node000001_Node000009\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-166.51C247.51,-151.22 287.48,-127.88 325,-114.5 335.77,-110.66 347.51,-107.53 358.99,-105.01\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"221.31,-163.6 214.78,-171.94 225.09,-169.5 221.31,-163.6\"/>\n</a>\n</g>\n</g>\n<!-- Node10 -->\n<g id=\"Node000010\" class=\"node\">\n<title>Node10</title>\n<g id=\"a_Node000010\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1SecurityToken.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"507.5,-67.5 340.5,-67.5 340.5,-37.5 507.5,-37.5 507.5,-67.5\"/>\n<text text-anchor=\"start\" x=\"348.5\" y=\"-55.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-44.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node10 -->\n<g id=\"edge9_Node000001_Node000010\" class=\"edge\">\n<title>Node1&#45;&gt;Node10</title>\n<g id=\"a_edge9_Node000001_Node000010\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-164.55C237.46,-141.17 280.13,-99.31 325,-76.5 331.79,-73.05 339.11,-70.07 346.57,-67.52\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"212.99,-162.26 208.81,-171.99 218.15,-166.99 212.99,-162.26\"/>\n</a>\n</g>\n</g>\n<!-- Node11 -->\n<g id=\"Node000011\" class=\"node\">\n<title>Node11</title>\n<g id=\"a_Node000011\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1User.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"498.5,-19 349.5,-19 349.5,0 498.5,0 498.5,-19\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node11 -->\n<g id=\"edge10_Node000001_Node000011\" class=\"edge\">\n<title>Node1&#45;&gt;Node11</title>\n<g id=\"a_edge10_Node000001_Node000011\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-162.59C227.9,-129.59 269.35,-61.83 325,-28.5 332.51,-24 340.87,-20.54 349.45,-17.88\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"206.89,-161.16 205.34,-171.64 213.09,-164.42 206.89,-161.16\"/>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"74,-191 0,-191 0,-172 74,-172 74,-191\"/>\n<text text-anchor=\"middle\" x=\"37\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M84.03,-181.5C92.2,-181.5 100.96,-181.5 109.86,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.02,-178 74.02,-181.5 84.02,-185 84.02,-178\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "986a0b81-f9b4-439e-4b4e-f377bb0dca95",
            "ancestors": [],
            "type": "function",
            "description": "represents a payment made by a user to their housing provider for various expenses, including the amount paid, category of payment, and due date.\nFields:\n\t- paymentId (String): represents a unique identifier for each payment transaction in the service.\n\t- charge (BigDecimal): represents an amount of money to be paid by a user or member of a house.\n\t- type (String): represents the category of payment, such as \"electricity bill\" or \"house rent\".\n\t- description (String): in the Payment class represents a brief narrative or summary of the payment's purpose or context.\n\t- recurring (boolean): in the Payment entity indicates whether a payment is recurring or not.\n\t- dueDate (LocalDate): represents the date when a payment is expected to be made.\n\t- admin (User): in the Payment entity represents a user who manages or oversees payments made by the HouseMember associated with the payment.\n\t- member (HouseMember): in the Payment class represents an association between a payment and a member of a house.\n\n",
            "fields": [
              {
                "name": "paymentId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Payment",
                "description": "represents a unique identifier for each payment transaction in the service."
              },
              {
                "name": "charge",
                "type_name": "BigDecimal",
                "value": null,
                "constant": false,
                "class_name": "Payment",
                "description": "represents an amount of money to be paid by a user or member of a house."
              },
              {
                "name": "type",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Payment",
                "description": "represents the category of payment, such as \"electricity bill\" or \"house rent\"."
              },
              {
                "name": "description",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "Payment",
                "description": "in the Payment class represents a brief narrative or summary of the payment's purpose or context."
              },
              {
                "name": "recurring",
                "type_name": "boolean",
                "value": null,
                "constant": false,
                "class_name": "Payment",
                "description": "in the Payment entity indicates whether a payment is recurring or not."
              },
              {
                "name": "dueDate",
                "type_name": "LocalDate",
                "value": null,
                "constant": false,
                "class_name": "Payment",
                "description": "represents the date when a payment is expected to be made."
              },
              {
                "name": "admin",
                "type_name": "User",
                "value": null,
                "constant": false,
                "class_name": "Payment",
                "description": "in the Payment entity represents a user who manages or oversees payments made by the HouseMember associated with the payment."
              },
              {
                "name": "member",
                "type_name": "HouseMember",
                "value": null,
                "constant": false,
                "class_name": "Payment",
                "description": "in the Payment class represents an association between a payment and a member of a house."
              }
            ],
            "name": "Payment",
            "location": {
              "start": 54,
              "insert": 35,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 34,
                "end": 53
              }
            },
            "item_type": "class",
            "length": 23,
            "docLength": 19
          }
        ]
      }
    }
  },
  {
    "name": "SecurityToken.java",
    "path": "service/src/main/java/com/myhome/domain/SecurityToken.java",
    "content": {
      "structured": {
        "description": "A `SecurityToken` class that represents a security token with various attributes and relationships. It uses Lombok to generate getters and setters, and also provides `@ToString`, `@Data`, `@AllArgsConstructor`, and `@NoArgsConstructor` annotations for additional functionality. The class has columns for token type, token value, creation date, expiry date, and ownership by a user, as well as methods for getting and setting these values.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.BaseEntity Pages: 1 -->\n<svg width=\"531pt\" height=\"371pt\"\n viewBox=\"0.00 0.00 531.00 371.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 367)\">\n<title>com.myhome.domain.BaseEntity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"289,-191 110,-191 110,-172 289,-172 289,-191\"/>\n<text text-anchor=\"middle\" x=\"199.5\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Amenity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-363 340,-363 340,-344 508,-344 508,-363\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-351\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node3 -->\n<g id=\"edge2_Node000001_Node000003\" class=\"edge\">\n<title>Node1&#45;&gt;Node3</title>\n<g id=\"a_edge2_Node000001_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-200.41C227.9,-233.41 269.35,-301.17 325,-334.5 331.47,-338.37 338.57,-341.48 345.9,-343.97\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"213.09,-198.58 205.34,-191.36 206.89,-201.84 213.09,-198.58\"/>\n</a>\n</g>\n</g>\n<!-- Node4 -->\n<g id=\"Node000004\" class=\"node\">\n<title>Node4</title>\n<g id=\"a_Node000004\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1AmenityBookingItem.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-325.5 340,-325.5 340,-295.5 508,-295.5 508,-325.5\"/>\n<text text-anchor=\"start\" x=\"348\" y=\"-313.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-302.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node4 -->\n<g id=\"edge3_Node000001_Node000004\" class=\"edge\">\n<title>Node1&#45;&gt;Node4</title>\n<g id=\"a_edge3_Node000001_Node000004\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-198.45C237.46,-221.83 280.13,-263.69 325,-286.5 331.79,-289.95 339.11,-292.93 346.57,-295.48\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"218.15,-196.01 208.81,-191.01 212.99,-200.74 218.15,-196.01\"/>\n</a>\n</g>\n</g>\n<!-- Node5 -->\n<g id=\"Node000005\" class=\"node\">\n<title>Node5</title>\n<g id=\"a_Node000005\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Community.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-277 332,-277 332,-258 516,-258 516,-277\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-265\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node5 -->\n<g id=\"edge4_Node000001_Node000005\" class=\"edge\">\n<title>Node1&#45;&gt;Node5</title>\n<g id=\"a_edge4_Node000001_Node000005\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-196.49C247.51,-211.78 287.48,-235.12 325,-248.5 335.77,-252.34 347.51,-255.47 358.99,-257.99\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"225.09,-193.5 214.78,-191.06 221.31,-199.4 225.09,-193.5\"/>\n</a>\n</g>\n</g>\n<!-- Node6 -->\n<g id=\"Node000006\" class=\"node\">\n<title>Node6</title>\n<g id=\"a_Node000006\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1CommunityHouse.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-239.5 332,-239.5 332,-209.5 516,-209.5 516,-239.5\"/>\n<text text-anchor=\"start\" x=\"340\" y=\"-227.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-216.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node6 -->\n<g id=\"edge5_Node000001_Node000006\" class=\"edge\">\n<title>Node1&#45;&gt;Node6</title>\n<g id=\"a_edge5_Node000001_Node000006\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-193.01C286.24,-198.07 317.36,-204.08 345.35,-209.49\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"260.36,-189.5 249.88,-191.04 259.03,-196.38 260.36,-189.5\"/>\n</a>\n</g>\n</g>\n<!-- Node7 -->\n<g id=\"Node000007\" class=\"node\">\n<title>Node7</title>\n<g id=\"a_Node000007\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMember.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-191 325,-191 325,-172 523,-172 523,-191\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node7 -->\n<g id=\"edge6_Node000001_Node000007\" class=\"edge\">\n<title>Node1&#45;&gt;Node7</title>\n<g id=\"a_edge6_Node000001_Node000007\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M299.35,-181.5C307.82,-181.5 316.38,-181.5 324.85,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"299.08,-178 289.08,-181.5 299.08,-185 299.08,-178\"/>\n</a>\n</g>\n</g>\n<!-- Node8 -->\n<g id=\"Node000008\" class=\"node\">\n<title>Node8</title>\n<g id=\"a_Node000008\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMemberDocument.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-153.5 325,-153.5 325,-123.5 523,-123.5 523,-153.5\"/>\n<text text-anchor=\"start\" x=\"333\" y=\"-141.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-130.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node8 -->\n<g id=\"edge7_Node000001_Node000008\" class=\"edge\">\n<title>Node1&#45;&gt;Node8</title>\n<g id=\"a_edge7_Node000001_Node000008\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-169.99C286.24,-164.93 317.36,-158.92 345.35,-153.51\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"259.03,-166.62 249.88,-171.96 260.36,-173.5 259.03,-166.62\"/>\n</a>\n</g>\n</g>\n<!-- Node9 -->\n<g id=\"Node000009\" class=\"node\">\n<title>Node9</title>\n<g id=\"a_Node000009\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Payment.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"509,-105 339,-105 339,-86 509,-86 509,-105\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-93\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Payment</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node9 -->\n<g id=\"edge8_Node000001_Node000009\" class=\"edge\">\n<title>Node1&#45;&gt;Node9</title>\n<g id=\"a_edge8_Node000001_Node000009\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-166.51C247.51,-151.22 287.48,-127.88 325,-114.5 335.77,-110.66 347.51,-107.53 358.99,-105.01\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"221.31,-163.6 214.78,-171.94 225.09,-169.5 221.31,-163.6\"/>\n</a>\n</g>\n</g>\n<!-- Node10 -->\n<g id=\"Node000010\" class=\"node\">\n<title>Node10</title>\n<g id=\"a_Node000010\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1SecurityToken.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"507.5,-67.5 340.5,-67.5 340.5,-37.5 507.5,-37.5 507.5,-67.5\"/>\n<text text-anchor=\"start\" x=\"348.5\" y=\"-55.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-44.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node10 -->\n<g id=\"edge9_Node000001_Node000010\" class=\"edge\">\n<title>Node1&#45;&gt;Node10</title>\n<g id=\"a_edge9_Node000001_Node000010\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-164.55C237.46,-141.17 280.13,-99.31 325,-76.5 331.79,-73.05 339.11,-70.07 346.57,-67.52\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"212.99,-162.26 208.81,-171.99 218.15,-166.99 212.99,-162.26\"/>\n</a>\n</g>\n</g>\n<!-- Node11 -->\n<g id=\"Node000011\" class=\"node\">\n<title>Node11</title>\n<g id=\"a_Node000011\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1User.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"498.5,-19 349.5,-19 349.5,0 498.5,0 498.5,-19\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node11 -->\n<g id=\"edge10_Node000001_Node000011\" class=\"edge\">\n<title>Node1&#45;&gt;Node11</title>\n<g id=\"a_edge10_Node000001_Node000011\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-162.59C227.9,-129.59 269.35,-61.83 325,-28.5 332.51,-24 340.87,-20.54 349.45,-17.88\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"206.89,-161.16 205.34,-171.64 213.09,-164.42 206.89,-161.16\"/>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"74,-191 0,-191 0,-172 74,-172 74,-191\"/>\n<text text-anchor=\"middle\" x=\"37\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M84.03,-181.5C92.2,-181.5 100.96,-181.5 109.86,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.02,-178 74.02,-181.5 84.02,-185 84.02,-178\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "d2a008a0-6161-3d86-034c-67618604d6d9",
            "ancestors": [],
            "type": "function",
            "description": "represents a security token with various attributes and relationships, including token type, token value, creation date, expiry date, and ownership by a user.\nFields:\n\t- tokenType (SecurityTokenType): represents an enumeration of SecurityTokenType enums used to identify the type of security token being represented by the SecurityToken class.\n\t- token (String): represents a unique identifier for a security token, which can be of various types (represented by the `tokenType` field) and has attributes such as creation and expiry dates, and a flag indicating whether it has been used.\n\t- creationDate (LocalDate): represents the date when the security token was created.\n\t- expiryDate (LocalDate): represents the date after which the security token is no longer valid.\n\t- isUsed (boolean): in SecurityToken indicates whether a security token has been used or not.\n\t- tokenOwner (User): represents a user who owns or has access to a security token.\n\n",
            "fields": [
              {
                "name": "tokenType",
                "type_name": "SecurityTokenType",
                "value": null,
                "constant": false,
                "class_name": "SecurityToken",
                "description": "represents an enumeration of SecurityTokenType enums used to identify the type of security token being represented by the SecurityToken class."
              },
              {
                "name": "token",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "SecurityToken",
                "description": "represents a unique identifier for a security token, which can be of various types (represented by the `tokenType` field) and has attributes such as creation and expiry dates, and a flag indicating whether it has been used."
              },
              {
                "name": "creationDate",
                "type_name": "LocalDate",
                "value": null,
                "constant": false,
                "class_name": "SecurityToken",
                "description": "represents the date when the security token was created."
              },
              {
                "name": "expiryDate",
                "type_name": "LocalDate",
                "value": null,
                "constant": false,
                "class_name": "SecurityToken",
                "description": "represents the date after which the security token is no longer valid."
              },
              {
                "name": "isUsed",
                "type_name": "boolean",
                "value": null,
                "constant": false,
                "class_name": "SecurityToken",
                "description": "in SecurityToken indicates whether a security token has been used or not."
              },
              {
                "name": "tokenOwner",
                "type_name": "User",
                "value": null,
                "constant": false,
                "class_name": "SecurityToken",
                "description": "represents a user who owns or has access to a security token."
              }
            ],
            "name": "SecurityToken",
            "location": {
              "start": 32,
              "insert": 15,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 14,
                "end": 31
              }
            },
            "item_type": "class",
            "length": 19,
            "docLength": 17
          }
        ]
      }
    }
  },
  {
    "name": "SecurityTokenType.java",
    "path": "service/src/main/java/com/myhome/domain/SecurityTokenType.java",
    "content": {
      "structured": {
        "description": "An enumeration class `SecurityTokenType` with two constant fields: `RESET` and `EMAIL_CONFIRM`.",
        "items": []
      }
    }
  },
  {
    "name": "User.java",
    "path": "service/src/main/java/com/myhome/domain/User.java",
    "content": {
      "structured": {
        "description": "An entity class `User` representing a valid user in a service, with attributes for name, userId, email, email confirmed, encrypted password, communities, and user tokens. The code also defines named entity graphs for the user's communities and user tokens, and includes annotations for JPA mapping and entity lifecycle management.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.BaseEntity Pages: 1 -->\n<svg width=\"531pt\" height=\"371pt\"\n viewBox=\"0.00 0.00 531.00 371.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 367)\">\n<title>com.myhome.domain.BaseEntity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"289,-191 110,-191 110,-172 289,-172 289,-191\"/>\n<text text-anchor=\"middle\" x=\"199.5\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Amenity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-363 340,-363 340,-344 508,-344 508,-363\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-351\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node3 -->\n<g id=\"edge2_Node000001_Node000003\" class=\"edge\">\n<title>Node1&#45;&gt;Node3</title>\n<g id=\"a_edge2_Node000001_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-200.41C227.9,-233.41 269.35,-301.17 325,-334.5 331.47,-338.37 338.57,-341.48 345.9,-343.97\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"213.09,-198.58 205.34,-191.36 206.89,-201.84 213.09,-198.58\"/>\n</a>\n</g>\n</g>\n<!-- Node4 -->\n<g id=\"Node000004\" class=\"node\">\n<title>Node4</title>\n<g id=\"a_Node000004\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1AmenityBookingItem.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"508,-325.5 340,-325.5 340,-295.5 508,-295.5 508,-325.5\"/>\n<text text-anchor=\"start\" x=\"348\" y=\"-313.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-302.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingItem</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node4 -->\n<g id=\"edge3_Node000001_Node000004\" class=\"edge\">\n<title>Node1&#45;&gt;Node4</title>\n<g id=\"a_edge3_Node000001_Node000004\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-198.45C237.46,-221.83 280.13,-263.69 325,-286.5 331.79,-289.95 339.11,-292.93 346.57,-295.48\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"218.15,-196.01 208.81,-191.01 212.99,-200.74 218.15,-196.01\"/>\n</a>\n</g>\n</g>\n<!-- Node5 -->\n<g id=\"Node000005\" class=\"node\">\n<title>Node5</title>\n<g id=\"a_Node000005\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Community.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-277 332,-277 332,-258 516,-258 516,-277\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-265\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node5 -->\n<g id=\"edge4_Node000001_Node000005\" class=\"edge\">\n<title>Node1&#45;&gt;Node5</title>\n<g id=\"a_edge4_Node000001_Node000005\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-196.49C247.51,-211.78 287.48,-235.12 325,-248.5 335.77,-252.34 347.51,-255.47 358.99,-257.99\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"225.09,-193.5 214.78,-191.06 221.31,-199.4 225.09,-193.5\"/>\n</a>\n</g>\n</g>\n<!-- Node6 -->\n<g id=\"Node000006\" class=\"node\">\n<title>Node6</title>\n<g id=\"a_Node000006\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1CommunityHouse.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"516,-239.5 332,-239.5 332,-209.5 516,-209.5 516,-239.5\"/>\n<text text-anchor=\"start\" x=\"340\" y=\"-227.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-216.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node6 -->\n<g id=\"edge5_Node000001_Node000006\" class=\"edge\">\n<title>Node1&#45;&gt;Node6</title>\n<g id=\"a_edge5_Node000001_Node000006\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-193.01C286.24,-198.07 317.36,-204.08 345.35,-209.49\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"260.36,-189.5 249.88,-191.04 259.03,-196.38 260.36,-189.5\"/>\n</a>\n</g>\n</g>\n<!-- Node7 -->\n<g id=\"Node000007\" class=\"node\">\n<title>Node7</title>\n<g id=\"a_Node000007\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMember.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-191 325,-191 325,-172 523,-172 523,-191\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node7 -->\n<g id=\"edge6_Node000001_Node000007\" class=\"edge\">\n<title>Node1&#45;&gt;Node7</title>\n<g id=\"a_edge6_Node000001_Node000007\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M299.35,-181.5C307.82,-181.5 316.38,-181.5 324.85,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"299.08,-178 289.08,-181.5 299.08,-185 299.08,-178\"/>\n</a>\n</g>\n</g>\n<!-- Node8 -->\n<g id=\"Node000008\" class=\"node\">\n<title>Node8</title>\n<g id=\"a_Node000008\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1HouseMemberDocument.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"523,-153.5 325,-153.5 325,-123.5 523,-123.5 523,-153.5\"/>\n<text text-anchor=\"start\" x=\"333\" y=\"-141.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.HouseMember</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-130.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node8 -->\n<g id=\"edge7_Node000001_Node000008\" class=\"edge\">\n<title>Node1&#45;&gt;Node8</title>\n<g id=\"a_edge7_Node000001_Node000008\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M260.03,-169.99C286.24,-164.93 317.36,-158.92 345.35,-153.51\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"259.03,-166.62 249.88,-171.96 260.36,-173.5 259.03,-166.62\"/>\n</a>\n</g>\n</g>\n<!-- Node9 -->\n<g id=\"Node000009\" class=\"node\">\n<title>Node9</title>\n<g id=\"a_Node000009\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1Payment.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"509,-105 339,-105 339,-86 509,-86 509,-105\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-93\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Payment</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node9 -->\n<g id=\"edge8_Node000001_Node000009\" class=\"edge\">\n<title>Node1&#45;&gt;Node9</title>\n<g id=\"a_edge8_Node000001_Node000009\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M223.26,-166.51C247.51,-151.22 287.48,-127.88 325,-114.5 335.77,-110.66 347.51,-107.53 358.99,-105.01\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"221.31,-163.6 214.78,-171.94 225.09,-169.5 221.31,-163.6\"/>\n</a>\n</g>\n</g>\n<!-- Node10 -->\n<g id=\"Node000010\" class=\"node\">\n<title>Node10</title>\n<g id=\"a_Node000010\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1SecurityToken.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"507.5,-67.5 340.5,-67.5 340.5,-37.5 507.5,-37.5 507.5,-67.5\"/>\n<text text-anchor=\"start\" x=\"348.5\" y=\"-55.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"424\" y=\"-44.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node10 -->\n<g id=\"edge9_Node000001_Node000010\" class=\"edge\">\n<title>Node1&#45;&gt;Node10</title>\n<g id=\"a_edge9_Node000001_Node000010\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M215.63,-164.55C237.46,-141.17 280.13,-99.31 325,-76.5 331.79,-73.05 339.11,-70.07 346.57,-67.52\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"212.99,-162.26 208.81,-171.99 218.15,-166.99 212.99,-162.26\"/>\n</a>\n</g>\n</g>\n<!-- Node11 -->\n<g id=\"Node000011\" class=\"node\">\n<title>Node11</title>\n<g id=\"a_Node000011\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1User.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"498.5,-19 349.5,-19 349.5,0 498.5,0 498.5,-19\"/>\n<text text-anchor=\"middle\" x=\"424\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node11 -->\n<g id=\"edge10_Node000001_Node000011\" class=\"edge\">\n<title>Node1&#45;&gt;Node11</title>\n<g id=\"a_edge10_Node000001_Node000011\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M210.09,-162.59C227.9,-129.59 269.35,-61.83 325,-28.5 332.51,-24 340.87,-20.54 349.45,-17.88\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"206.89,-161.16 205.34,-171.64 213.09,-164.42 206.89,-161.16\"/>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"74,-191 0,-191 0,-172 74,-172 74,-191\"/>\n<text text-anchor=\"middle\" x=\"37\" y=\"-179\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M84.03,-181.5C92.2,-181.5 100.96,-181.5 109.86,-181.5\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.02,-178 74.02,-181.5 84.02,-185 84.02,-178\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "5723b4c6-b137-fd89-6243-c59d57f262ee",
            "ancestors": [],
            "type": "function",
            "description": "represents a valid user in a service with attributes for name, userId, email, email confirmed, encrypted password, communities, and userTokens.\nFields:\n\t- name (String): represents a user's personal name.\n\t- userId (String): represents a unique identifier for each user in the system.\n\t- email (String): in the User class represents an identifier for a user's email address within the service.\n\t- emailConfirmed (boolean): represents a boolean value indicating whether the user's email address has been confirmed through a verification process.\n\t- encryptedPassword (String): in the User class represents an encrypted password for the user's account in the system.\n\t- communities (Set<Community>): is a set of Community objects associated with each User entity in the system.\n\t- userTokens (Set<SecurityToken>): stores a set of SecurityToken objects associated with each User entity through the tokenOwner attribute.\n\n",
            "fields": [
              {
                "name": "name",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "User",
                "description": "represents a user's personal name."
              },
              {
                "name": "userId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "User",
                "description": "represents a unique identifier for each user in the system."
              },
              {
                "name": "email",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "User",
                "description": "in the User class represents an identifier for a user's email address within the service."
              },
              {
                "name": "emailConfirmed",
                "type_name": "boolean",
                "value": "false",
                "constant": false,
                "class_name": "User",
                "description": "represents a boolean value indicating whether the user's email address has been confirmed through a verification process."
              },
              {
                "name": "encryptedPassword",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "User",
                "description": "in the User class represents an encrypted password for the user's account in the system."
              },
              {
                "name": "communities",
                "type_name": "Set<Community>",
                "value": "new HashSet<>()",
                "constant": false,
                "class_name": "User",
                "description": "is a set of Community objects associated with each User entity in the system."
              },
              {
                "name": "userTokens",
                "type_name": "Set<SecurityToken>",
                "value": "new HashSet<>()",
                "constant": false,
                "class_name": "User",
                "description": "stores a set of SecurityToken objects associated with each User entity through the tokenOwner attribute."
              }
            ],
            "name": "User",
            "location": {
              "start": 60,
              "insert": 43,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 42,
                "end": 59
              }
            },
            "item_type": "class",
            "length": 37,
            "docLength": 17
          }
        ]
      }
    }
  },
  {
    "name": "AmenityBookingItemRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/AmenityBookingItemRepository.java",
    "content": {
      "structured": {
        "description": "An interface called AmenityBookingItemRepository that extends the JpaRepository interface and provides a method for finding an Optional<AmenityBookingItem> by amenityBookingItemId.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.repositories.AmenityBookingItemRepository Pages: 1 -->\n<svg width=\"184pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 184.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.repositories.AmenityBookingItemRepository</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"174.5,-30 1.5,-30 1.5,0 174.5,0 174.5,-30\"/>\n<text text-anchor=\"start\" x=\"9.5\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.repositories.</text>\n<text text-anchor=\"middle\" x=\"88\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">AmenityBookingItemRepository</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"176,-96 0,-96 0,-66 176,-66 176,-96\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">JpaRepository&lt; AmenityBooking</text>\n<text text-anchor=\"middle\" x=\"88\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Item, String &gt;</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M88,-55.54C88,-46.96 88,-37.61 88,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"84.5,-55.8 88,-65.8 91.5,-55.8 84.5,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "c8b94f4f-99bf-f7af-9c42-880ed59e73ea",
            "ancestors": [],
            "type": "function",
            "description": "extends JpaRepository and provides a method for finding an Optional<AmenityBookingItem> by amenityBookingItemId.",
            "name": "AmenityBookingItemRepository",
            "location": {
              "start": 11,
              "insert": 7,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 6,
                "end": 10
              }
            },
            "item_type": "interface",
            "length": 3,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "AmenityRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/AmenityRepository.java",
    "content": {
      "structured": {
        "description": "An interface AmenityRepository, which extends the JpaRepository class and provides methods for querying and retrieving amenities based on their amenity ID, along with an optional community graph. The code includes a Query method that uses the EntityGraph annotation to specify the graph for the findByAmenityIdWithCommunity method, and another Query method that does not use EntityGraph but specifies the parameter for the amenity ID.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.Amenity Pages: 1 -->\n<svg width=\"187pt\" height=\"137pt\"\n viewBox=\"0.00 0.00 187.00 137.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 133)\">\n<title>com.myhome.domain.Amenity</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"173.5,-19 5.5,-19 5.5,0 173.5,0 173.5,-19\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Amenity</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"179,-74 0,-74 0,-55 179,-55 179,-74\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-62\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-44.66C89.5,-35.93 89.5,-25.99 89.5,-19.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-44.75 89.5,-54.75 93,-44.75 86,-44.75\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"126.5,-129 52.5,-129 52.5,-110 126.5,-110 126.5,-129\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-117\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-99.66C89.5,-90.93 89.5,-80.99 89.5,-74.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-99.75 89.5,-109.75 93,-99.75 86,-99.75\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "0aa30983-37aa-c480-444b-d76cb153d814",
            "ancestors": [],
            "type": "function",
            "description": "provides methods for querying and retrieving amenities based on their amenity ID, along with an optional community graph.",
            "name": "AmenityRepository",
            "location": {
              "start": 30,
              "insert": 26,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 25,
                "end": 29
              }
            },
            "item_type": "interface",
            "length": 8,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "CommunityHouseRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/CommunityHouseRepository.java",
    "content": {
      "structured": {
        "description": "A repository interface for interacting with CommunityHouse objects. The interface provides methods for finding individual CommunityHouses by houseId and retrieving all CommunityHouses in a community by communityId. Additionally, it includes methods for deleting CommunityHouses by houseId and querying the CommunityHouse database using EntityGraphs.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.CommunityHouse Pages: 1 -->\n<svg width=\"192pt\" height=\"148pt\"\n viewBox=\"0.00 0.00 192.00 148.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 144)\">\n<title>com.myhome.domain.CommunityHouse</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"184,-30 0,-30 0,0 184,0 184,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n<text text-anchor=\"middle\" x=\"92\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">House</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"181.5,-85 2.5,-85 2.5,-66 181.5,-66 181.5,-85\"/>\n<text text-anchor=\"middle\" x=\"92\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M92,-55.65C92,-47.36 92,-37.78 92,-30.11\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"88.5,-55.87 92,-65.87 95.5,-55.87 88.5,-55.87\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"129,-140 55,-140 55,-121 129,-121 129,-140\"/>\n<text text-anchor=\"middle\" x=\"92\" y=\"-128\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M92,-110.66C92,-101.93 92,-91.99 92,-85.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"88.5,-110.75 92,-120.75 95.5,-110.75 88.5,-110.75\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "3d067e60-c67b-5896-1845-003dbbc69251",
            "ancestors": [],
            "type": "function",
            "description": "provides methods for interacting with CommunityHouse objects, including finding individual CommunityHouses by houseId and retrieving all CommunityHouses in a community by communityId.",
            "name": "CommunityHouseRepository",
            "location": {
              "start": 34,
              "insert": 29,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 28,
                "end": 33
              }
            },
            "item_type": "interface",
            "length": 18,
            "docLength": 5
          }
        ]
      }
    }
  },
  {
    "name": "CommunityRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/CommunityRepository.java",
    "content": {
      "structured": {
        "description": "A CommunityRepository interface for interacting with Community entities in a Spring Data JPA environment. The interface provides methods for finding specific communities by communityId, querying for communities with houses, admins, or amenities, and checking if a community exists.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.Community Pages: 1 -->\n<svg width=\"192pt\" height=\"137pt\"\n viewBox=\"0.00 0.00 192.00 137.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 133)\">\n<title>com.myhome.domain.Community</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"184,-19 0,-19 0,0 184,0 184,-19\"/>\n<text text-anchor=\"middle\" x=\"92\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"181.5,-74 2.5,-74 2.5,-55 181.5,-55 181.5,-74\"/>\n<text text-anchor=\"middle\" x=\"92\" y=\"-62\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M92,-44.66C92,-35.93 92,-25.99 92,-19.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"88.5,-44.75 92,-54.75 95.5,-44.75 88.5,-44.75\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"129,-129 55,-129 55,-110 129,-110 129,-129\"/>\n<text text-anchor=\"middle\" x=\"92\" y=\"-117\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M92,-99.66C92,-90.93 92,-80.99 92,-74.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"88.5,-99.75 92,-109.75 95.5,-99.75 88.5,-99.75\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "746b12e5-9be1-d990-ca47-34b1b0fce4b4",
            "ancestors": [],
            "type": "function",
            "description": "offers a set of methods for interacting with Community entities in a Spring Data JPA environment, including finding specific communities by communityId, querying for communities with houses, admins, or amenities, and checking if a community exists.",
            "name": "CommunityRepository",
            "location": {
              "start": 32,
              "insert": 27,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 26,
                "end": 31
              }
            },
            "item_type": "interface",
            "length": 19,
            "docLength": 5
          }
        ]
      }
    }
  },
  {
    "name": "HouseMemberDocumentRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/HouseMemberDocumentRepository.java",
    "content": {
      "structured": {
        "description": "An interface called `HouseMemberDocumentRepository`, which implements a JPA repository for managing `HouseMemberDocument` objects using Spring Data JPA. The interface extends the `JpaRepository` interface and includes the standard methods for querying, saving, and deleting objects.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.repositories.HouseMemberDocumentRepository Pages: 1 -->\n<svg width=\"199pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 199.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.repositories.HouseMemberDocumentRepository</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"191,-30 0,-30 0,0 191,0 191,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.repositories.</text>\n<text text-anchor=\"middle\" x=\"95.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">HouseMemberDocumentRepository</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"179,-96 12,-96 12,-66 179,-66 179,-96\"/>\n<text text-anchor=\"start\" x=\"20\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">JpaRepository&lt; HouseMember</text>\n<text text-anchor=\"middle\" x=\"95.5\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Document, Long &gt;</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M95.5,-55.54C95.5,-46.96 95.5,-37.61 95.5,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"92,-55.8 95.5,-65.8 99,-55.8 92,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "49072940-cc84-68bd-4948-b7c737f50f39",
            "ancestors": [],
            "type": "function",
            "description": "defines a JPA repository for managing HouseMemberDocument objects using Spring Data JPA.",
            "name": "HouseMemberDocumentRepository",
            "location": {
              "start": 26,
              "insert": 22,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 21,
                "end": 25
              }
            },
            "item_type": "interface",
            "length": 2,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "HouseMemberRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/HouseMemberRepository.java",
    "content": {
      "structured": {
        "description": "An interface for a HouseMemberRepository, which is a Spring Data repository providing methods for interacting with the HouseMember entity. The interface includes methods for finding a specific HouseMember by member ID, listing all HouseMembers for a given house ID, and listing all HouseMembers for a given community house ID with optional user ID filtering.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.repositories.HouseMemberRepository Pages: 1 -->\n<svg width=\"185pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 185.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.repositories.HouseMemberRepository</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"162.5,-30 14.5,-30 14.5,0 162.5,0 162.5,-30\"/>\n<text text-anchor=\"start\" x=\"22.5\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.repositories.</text>\n<text text-anchor=\"middle\" x=\"88.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">HouseMemberRepository</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"177,-96 0,-96 0,-66 177,-66 177,-96\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">CrudRepository&lt; HouseMember,</text>\n<text text-anchor=\"middle\" x=\"88.5\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\"> Long &gt;</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M88.5,-55.54C88.5,-46.96 88.5,-37.61 88.5,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"85,-55.8 88.5,-65.8 92,-55.8 85,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "23a88b46-9953-d7a7-4b47-ece017c79803",
            "ancestors": [],
            "type": "function",
            "description": "provides methods for interacting with the HouseMember entity in a Spring Data repository context, including finding and listing members by various criteria.",
            "name": "HouseMemberRepository",
            "location": {
              "start": 29,
              "insert": 25,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 24,
                "end": 28
              }
            },
            "item_type": "interface",
            "length": 8,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "PaymentRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/PaymentRepository.java",
    "content": {
      "structured": {
        "description": "An interface called PaymentRepository that extends JpaRepository and provides two methods for interacting with payments: findByPaymentId and deleteByPaymentId. The interface uses Spring Data JPA to perform queries on the Payment entity in a database.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.repositories.PaymentRepository Pages: 1 -->\n<svg width=\"156pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 156.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.repositories.PaymentRepository</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"148,-30 0,-30 0,0 148,0 148,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.repositories.</text>\n<text text-anchor=\"middle\" x=\"74\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">PaymentRepository</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"144.5,-96 3.5,-96 3.5,-66 144.5,-66 144.5,-96\"/>\n<text text-anchor=\"start\" x=\"11.5\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">JpaRepository&lt; Payment,</text>\n<text text-anchor=\"middle\" x=\"74\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\"> Long &gt;</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M74,-55.54C74,-46.96 74,-37.61 74,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"70.5,-55.8 74,-65.8 77.5,-55.8 70.5,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "a1a4eb7d-f052-b1ae-ee47-17fe52b47dde",
            "ancestors": [],
            "type": "function",
            "description": "extends JpaRepository and provides two methods for interacting with payments: findByPaymentId and deleteByPaymentId.",
            "name": "PaymentRepository",
            "location": {
              "start": 26,
              "insert": 22,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 21,
                "end": 25
              }
            },
            "item_type": "interface",
            "length": 5,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "SecurityTokenRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/SecurityTokenRepository.java",
    "content": {
      "structured": {
        "description": "An interface for a SecurityTokenRepository, which extends Spring Data JPA's JpaRepository interface to manage SecurityTokens in a database. The interface includes the standard CRUD (create, read, update, delete) methods for managing SecurityTokens, as well as a few additional methods for filtering and finding SecurityTokens based on various criteria.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.repositories.SecurityTokenRepository Pages: 1 -->\n<svg width=\"174pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 174.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.repositories.SecurityTokenRepository</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"157,-30 9,-30 9,0 157,0 157,-30\"/>\n<text text-anchor=\"start\" x=\"17\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.repositories.</text>\n<text text-anchor=\"middle\" x=\"83\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">SecurityTokenRepository</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"166,-96 0,-96 0,-66 166,-66 166,-96\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">JpaRepository&lt; SecurityToken,</text>\n<text text-anchor=\"middle\" x=\"83\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\"> Long &gt;</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M83,-55.54C83,-46.96 83,-37.61 83,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"79.5,-55.8 83,-65.8 86.5,-55.8 79.5,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "c52889a8-1b36-d7a5-b94b-dbe4c325bdc2",
            "ancestors": [],
            "type": "function",
            "description": "extends JpaRepository and manages SecurityTokens in a database using Spring Data JPA for querying and persisting to the database.",
            "name": "SecurityTokenRepository",
            "location": {
              "start": 10,
              "insert": 6,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 5,
                "end": 9
              }
            },
            "item_type": "interface",
            "length": 2,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "UserRepository.java",
    "path": "service/src/main/java/com/myhome/repositories/UserRepository.java",
    "content": {
      "structured": {
        "description": "A UserRepository interface that provides methods for retrieving and manipulating users in a Spring Data JPA repository context. The interface implements the JpaRepository interface and provides additional methods for finding users by email or user ID, as well as methods for finding users with specific communities or tokens associated with them.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.User Pages: 1 -->\n<svg width=\"187pt\" height=\"137pt\"\n viewBox=\"0.00 0.00 187.00 137.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 133)\">\n<title>com.myhome.domain.User</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"164,-19 15,-19 15,0 164,0 164,-19\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"179,-74 0,-74 0,-55 179,-55 179,-74\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-62\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-44.66C89.5,-35.93 89.5,-25.99 89.5,-19.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-44.75 89.5,-54.75 93,-44.75 86,-44.75\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"126.5,-129 52.5,-129 52.5,-110 126.5,-110 126.5,-129\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-117\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-99.66C89.5,-90.93 89.5,-80.99 89.5,-74.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-99.75 89.5,-109.75 93,-99.75 86,-99.75\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "4b3d7c48-b797-c790-814a-ffb27a2dd9b8",
            "ancestors": [],
            "type": "function",
            "description": "provides methods for retrieving and manipulating users in a Spring Data JPA repository context.",
            "name": "UserRepository",
            "location": {
              "start": 33,
              "insert": 29,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 28,
                "end": 32
              }
            },
            "item_type": "interface",
            "length": 21,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "AppUserDetailsService.java",
    "path": "service/src/main/java/com/myhome/security/AppUserDetailsService.java",
    "content": {
      "structured": {
        "description": "An `AppUserDetailsService` class that implements the `UserDetailsService` interface in Spring Security. The class loads a user by their username and returns a `User` object with relevant details, and also provides methods for retrieving a user's details from the repository and mapping them to a `UserDto` object using a mapper. The `loadUserByUsername()` method takes a username as input and returns a `UserDetails` object containing the user's email address, encrypted password, and other attributes. The `getUserDetailsByUsername()` method retrieves a `User` object from the repository based on the given username, maps it to a `UserDto` format using a mapper, and returns the resulting `UserDto`.",
        "items": [
          {
            "id": "d31f3dd4-622f-fba2-d24f-beaff3da2fd8",
            "ancestors": [],
            "type": "function",
            "description": "is an implementation of the UserDetailsService interface, providing functionality for loading user details by username and mapping them to a UserDto format. The class includes methods for retrieving a user object from the repository based on a given username, and then mapping it to a UserDto format using the `userMapper` method.",
            "name": "AppUserDetailsService",
            "location": {
              "start": 40,
              "insert": 33,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 32,
                "end": 39
              }
            },
            "item_type": "class",
            "length": 73,
            "docLength": 7
          },
          {
            "id": "361f3d1a-4acf-e5be-ab47-aa2e56bcecf5",
            "ancestors": [
              "d31f3dd4-622f-fba2-d24f-beaff3da2fd8"
            ],
            "type": "function",
            "description": "retrieves a user from the repository based on their username and returns a `UserDetails` object with the user's email, encrypted password, and other metadata.",
            "params": [
              {
                "name": "username",
                "type_name": "String",
                "description": "username for which the user details are to be loaded.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "User",
              "description": "a `UserDetails` object containing the user's email, encrypted password, and various other attributes.\n\n* `email`: The email address of the user.\n* `encryptedPassword`: The encrypted password for the user.\n* `active`: A boolean indicating whether the user is active (true) or inactive (false).\n* `accountNonExpired`: A boolean indicating whether the user's account is non-expired (true) or expired (false).\n* `credentialsNonExpired`: A boolean indicating whether the user's credentials are non-expired (true) or expired (false).\n* `accountDisabled`: A boolean indicating whether the user's account is disabled (true) or enabled (false).\n* `userDetailsList`: An empty list.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "@Override public UserDetails loadUserByUsername(String username)\n      throws UsernameNotFoundException {\n    // username = \"prathabmurugan\"\n     com.myhome.domain.User user = userRepository.findByEmail(username);\n     if (user == null) {\n       throw new UsernameNotFoundException(username);\n     }\n     return new User(user.getEmail(), \n                    user.getEncryptedPassword(), \n                    true, \n                    true, \n                    true, \n                    true, \n                    Collections.emptyList());\n   }\n",
              "description": ""
            },
            "name": "loadUserByUsername",
            "location": {
              "start": 68,
              "insert": 46,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 45,
                "end": 67
              }
            },
            "item_type": "method",
            "length": 16,
            "docLength": 22
          },
          {
            "id": "a027a70d-f5cd-5ca4-aa46-4a6f571c4d6d",
            "ancestors": [
              "d31f3dd4-622f-fba2-d24f-beaff3da2fd8"
            ],
            "type": "function",
            "description": "retrieves a `User` object from the repository based on the given username and maps it to a `UserDto` object using the provided mapper.",
            "params": [
              {
                "name": "username",
                "type_name": "String",
                "description": "username for which the user details are being retrieved.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "UserDto",
              "description": "a `UserDto` object containing the details of the user with the provided username.\n\nThe function returns a `UserDto` object, which represents a user entity in a more accessible and usable format for client-side applications. The `UserDto` class contains attributes such as `id`, `username`, `email`, `firstName`, `lastName`, and `password`, which are mapped from the corresponding fields in the `User` entity.\n\nThe function first retrieves a `User` object from the `userRepository` using the `findByEmail` method, passing in the `username` parameter as a search criterion. If the user is not found, a `UsernameNotFoundException` is thrown.\n\nOnce the user is retrieved, the `userMapper` class maps the user entity to a `UserDto` object, which is then returned as the function output.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "String username = \"myemail@example.com\";\nUserDto userDetails = appUserDetailsService.getUserDetailsByUsername(username);\n",
              "description": "\nIn this example, the input for the method is a String variable named 'username' which contains the email address of the user whose details are to be retrieved. The method retrieves the user from the repository using the findByEmail method and checks if the user exists. If the user does not exist, it throws a UsernameNotFoundException with the username as the parameter. Otherwise, it maps the user object to a UserDto object using the userMapper's userToUserDto method and returns the resulting UserDto object.\n\nThe output of this example is a UserDto object containing information about the retrieved user."
            },
            "name": "getUserDetailsByUsername",
            "location": {
              "start": 105,
              "insert": 85,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 84,
                "end": 104
              }
            },
            "item_type": "method",
            "length": 7,
            "docLength": 20
          }
        ]
      }
    }
  },
  {
    "name": "CommunityAuthorizationFilter.java",
    "path": "service/src/main/java/com/myhome/security/CommunityAuthorizationFilter.java",
    "content": {
      "structured": {
        "description": "A filter in an HTTP filter chain that checks if the current user is an administrator of a community based on their user ID and the community ID in the request URL. The filter retrieves the list of community admins from the database, filters them to find the user's admin status, and returns a boolean value indicating whether the current user is an administrator of a community based on their ID. The code uses various classes and methods from the Spring Security package, including `SecurityContextHolder`, `HttpServletRequest`, `HttpServletResponse`, `FilterChain`, and `CommunityService`.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.User Pages: 1 -->\n<svg width=\"187pt\" height=\"137pt\"\n viewBox=\"0.00 0.00 187.00 137.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 133)\">\n<title>com.myhome.domain.User</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"164,-19 15,-19 15,0 164,0 164,-19\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.User</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"179,-74 0,-74 0,-55 179,-55 179,-74\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-62\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-44.66C89.5,-35.93 89.5,-25.99 89.5,-19.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-44.75 89.5,-54.75 93,-44.75 86,-44.75\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"126.5,-129 52.5,-129 52.5,-110 126.5,-110 126.5,-129\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-117\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-99.66C89.5,-90.93 89.5,-80.99 89.5,-74.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-99.75 89.5,-109.75 93,-99.75 86,-99.75\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "0c97a671-117e-1b81-144b-5eb004924893",
            "ancestors": [],
            "type": "function",
            "description": "is used to check if an HTTP request has administrative privileges for a specific community based on the user ID and community ID in the request URL. If the user is not an administrator, it sets the response status to SC_UNAUTHORIZED. If the user is an administrator, it delegates the processing to the parent `doFilterInternal` method of the filter chain.",
            "name": "CommunityAuthorizationFilter",
            "location": {
              "start": 25,
              "insert": 19,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 18,
                "end": 24
              }
            },
            "item_type": "class",
            "length": 126,
            "docLength": 6
          },
          {
            "id": "9d5262ea-8b2c-ac8b-4842-82d898bb7372",
            "ancestors": [
              "0c97a671-117e-1b81-144b-5eb004924893"
            ],
            "type": "function",
            "description": "performs authentication and authorization for incoming requests to a Servlet-based web application. It checks if the request URI matches a pattern defined by the `addAdminRequestPattern` field, and if the user is not an administrator, it sets the status code to HTTP 401 (Unauthorized) and stops the chain of filters from processing further.",
            "params": [
              {
                "name": "request",
                "type_name": "HttpServletRequest",
                "description": "HTTP request being processed by the filter.\n\n* `getRequestURI()`: Returns the requested resource's URL.\n* `isUserCommunityAdmin()`: Checks whether the current user is an administrator for a specific community.\n\nThe function then proceeds to perform authentication checks and sets the response status code accordingly.",
                "complex_type": true
              },
              {
                "name": "response",
                "type_name": "HttpServletResponse",
                "description": "HttpServletResponse object that is being filtered by the doFilterInternal method.\n\n* `HttpServletResponse response`: This is an instance of `HttpServletResponse`, which represents the HTTP response object for the current request. It contains information about the request, such as the status code, headers, and other attributes.\n* `FilterChain chain`: This is a reference to the chain of filters that are applied to the current request. The `doFilterInternal` function is called recursively through this chain until the last filter is reached.\n* `HttpServletRequest request`: This is an instance of `HttpServletRequest`, which represents the HTTP request object for the current request. It contains information about the request, such as the URL, method, and other attributes.",
                "complex_type": true
              },
              {
                "name": "chain",
                "type_name": "FilterChain",
                "description": "next filter in the chain that needs to be executed after the current filter is applied.\n\n* `HttpServletRequest request`: The current HTTP request being processed by the filter.\n* `HttpServletResponse response`: The current HTTP response being generated by the filter.\n* `FilterChain chain`: A reference to the chain of filters that this filter is part of, which can be used to manipulate or ignore the subsequent filters in the chain.",
                "complex_type": true
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\n    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response,\n                                    FilterChain chain) throws IOException, ServletException {\n        Matcher urlMatcher = addAdminRequestPattern.matcher(request.getRequestURI());\n\n        if (urlMatcher.find() && !isUserCommunityAdmin(request)) {\n            response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n            return;\n        }\n\n        super.doFilterInternal(request, response, chain);\n    }\n",
              "description": "\nIn this example, we are overriding the doFilterInternal method to filter the incoming requests based on certain parameters. The first parameter is an HttpServletRequest object, which contains information about the current HTTP request being processed. The second parameter is an HttpServletResponse object, which allows us to send a response back to the client. The third parameter is an instance of the FilterChain class, which represents the sequence of filters in the filter chain.\n\nThe first thing we do in this method is create a Matcher object from the addAdminRequestPattern regular expression pattern. We then match this object against the request URI using the find() method and return if there is a match. If there isn't, we check whether the current user is an admin of a community by calling the isUserCommunityAdmin() method and returning if they are not. Finally, we call the super.doFilterInternal() method to pass the request along to the next filter in the chain or the servlet container for further processing.\n\nNote that the isUserCommunityAdmin() method checks whether the current user is an admin of a community by retrieving the list of community admins from the database and filtering them to find the user's admin status. If the user is an admin, the function returns true, otherwise it returns false."
            },
            "name": "doFilterInternal",
            "location": {
              "start": 86,
              "insert": 37,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 36,
                "end": 85
              }
            },
            "item_type": "method",
            "length": 13,
            "docLength": 49
          },
          {
            "id": "8a1787d7-5960-7388-9847-874eca4bc332",
            "ancestors": [
              "0c97a671-117e-1b81-144b-5eb004924893"
            ],
            "type": "function",
            "description": "determines whether a user is an administrator of a community based on their user ID and the community ID in the request URL. It retrieves the list of community admins from the database and filters them based on the user ID to return the admin status.",
            "params": [
              {
                "name": "request",
                "type_name": "HttpServletRequest",
                "description": "HTTP request that triggered the method execution, providing information about the current user and the community ID.\n\n1. `request`: An instance of `HttpServletRequest`, representing an HTTP request.\n2. `request.getRequestURI()`: Returns the URI of the request, without any query parameters.\n3. `request.getParameterValues()`: Returns a map of parameter names to values for the current request.\n4. `SecurityContextHolder.getContext().getAuthentication().getPrincipal()`: Returns the currently authenticated user principal, which is used to determine if the user is an administrator of a community.\n5. `communityService.findCommunityAdminsById(communityId, null)`: Calls the `findCommunityAdminsById` method on the `communityService` class, passing in the `communityId` and `null` as arguments. This method returns an optional list of administrators for the specified community.\n6. `optional`: An instance of `Optional`, which contains a value or is empty.\n7. `optional.isPresent()`: Returns a boolean indicating whether the `optional` instance contains a non-empty value.\n8. `communityAdmins`: An instance of `List<User>`, containing the administrators for the specified community.\n9. `communityAdmins.stream().filter(communityAdmin -> communityAdmin.getUserId().equals(userId))` : Returns a stream of `User` instances, filtered by the user ID.\n10. `communityAdmins.stream().findFirst()`: Returns the first matching `User` instance in the stream, or `null` if no match is found.\n\nNote that some of these properties are not explicitly mentioned in the code snippet provided, but can be inferred from the function's purpose and the methods called within it.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "boolean",
              "description": "a boolean value indicating whether the current user is an administrator of a community.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "if (isUserCommunityAdmin(request)) {\n    chain.doFilter(request, response);\n} else {\n    response.sendError(HttpServletResponse.SC_FORBIDDEN);\n}\n",
              "description": "\nIn this example, the method is called with the `request` object as an argument, and if the current user is a community administrator based on their ID, then the filter chain is allowed to proceed. If the user is not an administrator, then a 403 FORBIDDEN status code is returned.\n\nIt is important to note that this method assumes the following:\n* The `isUserCommunityAdmin` method is defined as shown in the previous example.\n* The filter chain has already been configured to use the `doFilterInternal` method from the superclass.\n* The current user's ID is available through the `SecurityContextHolder`.\n* The community ID is obtained from the request URI using the `getRequestURI` method of the `HttpServletRequest` object.\n\nTo make sure that this code works correctly, it is necessary to test that the filter chain is indeed being passed through to the next filter in the chain after the current filter has completed its operation. This can be done by adding a filter after the current one in the filter chain and ensuring that it receives the request object as an argument. If the filter chain is not proceeding, then the second filter will not receive the request."
            },
            "name": "isUserCommunityAdmin",
            "location": {
              "start": 129,
              "insert": 100,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 99,
                "end": 128
              }
            },
            "item_type": "method",
            "length": 21,
            "docLength": 29
          }
        ]
      }
    }
  },
  {
    "name": "MyHomeAuthorizationFilter.java",
    "path": "service/src/main/java/com/myhome/security/MyHomeAuthorizationFilter.java",
    "content": {
      "structured": {
        "description": "An HTTP filter that authenticates incoming requests based on a token in the request header. The filter retrieves the authentication token from the header, decodes it using a secret key, and returns a `UsernamePasswordAuthenticationToken` object representing the authenticated user if the decoded token contains a user ID. If no user ID is found, the filter returns null.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.security.MyHomeAuthorizationFilter Pages: 1 -->\n<svg width=\"180pt\" height=\"93pt\"\n viewBox=\"0.00 0.00 180.00 93.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 89)\">\n<title>com.myhome.security.MyHomeAuthorizationFilter</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"172,-30 0,-30 0,0 172,0 172,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.security.MyHome</text>\n<text text-anchor=\"middle\" x=\"86\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">AuthorizationFilter</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"155.5,-85 16.5,-85 16.5,-66 155.5,-66 155.5,-85\"/>\n<text text-anchor=\"middle\" x=\"86\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BasicAuthenticationFilter</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M86,-55.65C86,-47.36 86,-37.78 86,-30.11\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"82.5,-55.87 86,-65.87 89.5,-55.87 82.5,-55.87\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "665e9989-35b9-bfac-a44e-ccd026e29fb4",
            "ancestors": [],
            "type": "function",
            "description": "is used to filter incoming HTTP requests based on an authorization token extracted from the request header. The filter decodes the token using a secret key and returns a `UsernamePasswordAuthenticationToken` object representing the authenticated user if the decoded token contains a user ID. If no user ID is found, the filter returns null.",
            "name": "MyHomeAuthorizationFilter",
            "location": {
              "start": 39,
              "insert": 33,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 32,
                "end": 38
              }
            },
            "item_type": "class",
            "length": 131,
            "docLength": 6
          },
          {
            "id": "9cf50950-08c4-71b8-3b44-3c50ea7bd837",
            "ancestors": [
              "665e9989-35b9-bfac-a44e-ccd026e29fb4"
            ],
            "type": "function",
            "description": "determines if a request has a valid authentication token and sets the SecurityContextHolder with the appropriate authentication token before passing the request to the next filter in the chain.",
            "params": [
              {
                "name": "request",
                "type_name": "HttpServletRequest",
                "description": "HTTP request being processed by the filter.\n\n* `authHeaderName`: String representing the name of the HTTP header containing the authentication token.\n* `authHeaderPrefix`: String representing the prefix of the authentication token in the HTTP header.\n* `authHeader`: String representing the actual authentication token found in the HTTP header. If it's null or doesn't start with the prefix, then the authentication token is not present.\n* `request`: HttpServletRequest object containing various attributes related to the HTTP request, such as method, URL, headers, parameters, and more.",
                "complex_type": true
              },
              {
                "name": "response",
                "type_name": "HttpServletResponse",
                "description": "HTTP response object that is being filtered by the `doFilterInternal` method.\n\n1. `HttpServletRequest request`: This is the original HTTP request that was passed to the filter chain.\n2. `HttpServletResponse response`: This is the response object returned by the filter chain after processing the request. It contains information about the response, such as the status code, headers, and content.\n3. `FilterChain chain`: This is the chain of filters that have been configured for the current HTTP request. The `doFilterInternal` function is called recursively to process each filter in the chain.\n4. `IOException`, `ServletException`: These are the exceptions that can be thrown by the `doFilterInternal` function if an error occurs during processing, such as a missing or invalid authentication token.\n5. `environment`: This is a reference to the environment object that contains configuration properties for the filter. In this case, the `environment` object contains property values for the authorization token header name and prefix.",
                "complex_type": true
              },
              {
                "name": "chain",
                "type_name": "FilterChain",
                "description": "FilterChain that will be executed after the authentication check in the function.\n\n* `request`: The original HTTP request object that was passed to the filter chain.\n* `response`: The HTTP response object that the filter chain is processing.\n* `FilterChain`: The filter chain that the current filter is a part of, which contains other filters that can be executed in sequence.\n* `environment`: A reference to the Spring Environment that contains configuration properties and other bean instances.",
                "complex_type": true
              }
            ],
            "usage": {
              "language": "java",
              "code": "public class CustomTokenBasedAuthenticationFilter extends OncePerRequestFilter {\n    @Override\n    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException, ServletException {\n        String authHeaderName = \"Authorization\";\n        String authHeaderPrefix = \"Bearer \";\n        \n        String authHeader = request.getHeader(authHeaderName);\n        if (authHeader == null || !authHeader.startsWith(authHeaderPrefix)) {\n            chain.doFilter(request, response);\n            return;\n        }\n        \n        UsernamePasswordAuthenticationToken authentication = getAuthentication(request);\n        SecurityContextHolder.getContext().setAuthentication(authentication);\n        chain.doFilter(request, response);\n    }\n    \n    private UsernamePasswordAuthenticationToken getAuthentication(HttpServletRequest request) {\n        String authHeader = \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIn0.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\";\n        AppJwt jwt = appJwtEncoderDecoder.decode(authHeader, \"my-secret-key\");\n        \n        if (jwt == null) {\n            return null;\n        }\n        \n        String userId = jwt.getUserId();\n        return new UsernamePasswordAuthenticationToken(userId, null, Collections.emptyList());\n    }\n}\n",
              "description": "\nIn this example, the `doFilterInternal` method is overridden to perform a task that is specific to the current filter. The authentication token is extracted from the request header using the `authHeaderName` and `authHeaderPrefix` variables. If the header does not contain an appropriate value or prefix, the code returns immediately.\nThe `getAuthentication` function extracts the authentication token from the HTTP request header using the provided secret key. If the JWT contains a user ID, a new `UsernamePasswordAuthenticationToken` object is created with the user ID as the username and an empty list of credentials. The `chain.doFilter(request, response);` method is then called to continue processing the filter chain.\nIn summary, the `doFilterInternal` function extracts the authentication token from the HTTP request header using the provided secret key and returns a new `UsernamePasswordAuthenticationToken` object if the JWT contains a user ID.\nThis example assumes that the `appJwtEncoderDecoder` variable is an instance of an `AppJwtEncoderDecoder` class that implements the `decode(String, String)` method to extract the JWT from the request header and the `getUserId()` method to retrieve the user ID. The filter chain continues after this point to perform additional tasks, as needed."
            },
            "name": "doFilterInternal",
            "location": {
              "start": 103,
              "insert": 53,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 52,
                "end": 102
              }
            },
            "item_type": "method",
            "length": 16,
            "docLength": 50
          },
          {
            "id": "cee5b56f-c43a-158c-884a-fdd1409341ea",
            "ancestors": [
              "665e9989-35b9-bfac-a44e-ccd026e29fb4"
            ],
            "type": "function",
            "description": "retrieves an authentication token from a request header, decodes it using the provided secret, and returns a `UsernamePasswordAuthenticationToken` instance representing the user ID and null credentials.",
            "params": [
              {
                "name": "request",
                "type_name": "HttpServletRequest",
                "description": "HTTP request object that contains an authentication token in the header, which is used to retrieve and decode the JWT token.\n\n* `getHeader()`: Retrieves the value of an HTTP header field.\n* `environment.getProperty()`: Gets a property from the environment map.\n* `appJwtEncoderDecoder.decode()`: Decodes a JSON Web Token (JWT) and retrieves the user ID.\n\nThe input `request` has several attributes, including:\n\n* `getHeader()`: Retrieves the value of an HTTP header field.\n* `getProperty()`: Gets a property from the request's properties map.\n* `getMethod()`: Returns the HTTP method (e.g., GET, POST, PUT, DELETE) used to make the request.\n* `getRequestURI()`: Returns the requested resource URL.\n* `getProtocol()`: Returns the protocol (e.g., HTTP/1.1) used to make the request.\n* `getRemoteAddr()`: Returns the client's IP address.\n* `getContentLength()`: Returns the size of the request body in bytes.\n* `getHeaderNames()`: Returns an unmodifiable list of the header fields in the request.\n* `getheader()`: Retrieves the value of a specific HTTP header field.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "UsernamePasswordAuthenticationToken",
              "description": "a `UsernamePasswordAuthenticationToken` object containing the user ID and an empty list of roles.\n\n* The `String` variable `authHeader` represents the value of the `Authorization` header in the HTTP request.\n* The `String` variable `token` represents the decoded JWT token extracted from the `Authorization` header.\n* The `AppJwt` object `jwt` contains information about the user, including their ID.\n* The `UsernamePasswordAuthenticationToken` object returned by the function consists of a user ID and an empty list of credentials, indicating that no password is required for authentication.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "HttpServletRequest request = new MockHttpServletRequest();\nrequest.addHeader(\"Authorization\", \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6ImEiLCJleHAiOjE2MTYyMzk1MDMsImp0aSI6Imlzc3VlciIsInN1YiI6IjEyMzQ1Njc4OTB9.WK-Rw6qAeFZ8_HtXJLvTmg75D7UQ3x8u95r0C2aVs3U\");\n\nString authHeaderName = environment.getProperty(\"authorization.token.header.name\");\nString authHeaderPrefix = environment.getProperty(\"authorization.token.header.prefix\");\n\nUsernamePasswordAuthenticationToken authentication = getAuthentication(request);\n",
              "description": "\nThe resulting `authentification` variable will be a username and password token with the user id \"1\"."
            },
            "name": "getAuthentication",
            "location": {
              "start": 153,
              "insert": 120,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 119,
                "end": 152
              }
            },
            "item_type": "method",
            "length": 16,
            "docLength": 33
          }
        ]
      }
    }
  },
  {
    "name": "WebSecurity.java",
    "path": "service/src/main/java/com/myhome/security/WebSecurity.java",
    "content": {
      "structured": {
        "description": "And configures an OAuth2 authentication filter for a Spring Boot application. It sets up an authentication manager, encrypts passwords, and defines various filters for handling different types of requests. The code also includes configuration for handling community-related operations based on user authentication and authorization. Overall, the code sets up a secure and customizable authentication system for the application.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.security.CommunityAuthorizationFilter Pages: 1 -->\n<svg width=\"193pt\" height=\"93pt\"\n viewBox=\"0.00 0.00 193.00 93.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 89)\">\n<title>com.myhome.security.CommunityAuthorizationFilter</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"185,-30 0,-30 0,0 185,0 185,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.security.Community</text>\n<text text-anchor=\"middle\" x=\"92.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">AuthorizationFilter</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"162,-85 23,-85 23,-66 162,-66 162,-85\"/>\n<text text-anchor=\"middle\" x=\"92.5\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BasicAuthenticationFilter</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M92.5,-55.65C92.5,-47.36 92.5,-37.78 92.5,-30.11\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"89,-55.87 92.5,-65.87 96,-55.87 89,-55.87\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "39af3d0b-4d1f-5680-524e-555ae1c9a963",
            "ancestors": [],
            "type": "function",
            "description": "is configured to enable CORS, disable CSFR and frames, and add a filter to authorize requests based on the user's role. The configure method takes an HttpSecurity object as input and configures various settings related to authentication management, including disabling CSRF and frames, and adding a filter after the community filter and before the end of the configuration chain.",
            "name": "WebSecurity",
            "location": {
              "start": 47,
              "insert": 36,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 35,
                "end": 46
              }
            },
            "item_type": "class",
            "length": 107,
            "docLength": 11
          },
          {
            "id": "60a263d8-d657-f2b4-854f-342ae36adf88",
            "ancestors": [
              "39af3d0b-4d1f-5680-524e-555ae1c9a963"
            ],
            "type": "function",
            "description": "configures the HTTP security for a Spring Boot application, disabling CSRF and frame options, and setting session management to STATELESS. It also authorizes requests based on various URL patterns, permitting all access to specific endpoints. Additionally, it adds a filter to handle JWT encoder/decoder tasks.",
            "params": [
              {
                "name": "http",
                "type_name": "HttpSecurity",
                "description": "HTTP security configuration object, which is used to configure various security features such as CORS, session management, and authorization rules for different URL patterns.\n\n* `cors()`: enables Cross-Origin Resource Sharing (CORS) functionality.\n* `csrf()`. disable(): disables Cross-Site Request Forgery (CSRF) protection.\n* `headers().frameOptions()`. disable(): disables the ability to set frame options for responses.\n* `sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)`: sets the session creation policy to STATELESS, which means that sessions will not be created automatically.\n* `addFilterAfter(getCommunityFilter(), MyHomeAuthorizationFilter.class)`: adds a filter after the community filter and before the end of the configuration chain.\n* `authorizeRequests()`: defines a set of ant matchers that specify which requests are allowed or denied based on various conditions.\n\nIn summary, these properties/attributes configure CORS functionality, disable CSRF protection, disables the ability to set frame options for responses, sets session creation policy to STATELESS, adds a filter after the community filter and before the end of the configuration chain, and defines a set of ant matchers that specify which requests are allowed or denied based on various conditions.",
                "complex_type": true
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\n  protected void configure(HttpSecurity http) throws Exception {\n    http.cors().and().csrf().disable();\n    http.headers().frameOptions().disable();\n    http.sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS);\n    http.addFilterAfter(getCommunityFilter(), MyHomeAuthorizationFilter.class);\n\n    http.authorizeRequests()\n        .antMatchers(environment.getProperty(\"api.public.h2console.url.path\"))\n        .permitAll()\n        .antMatchers(environment.getProperty(\"api.public.actuator.url.path\"))\n        .permitAll()\n        .antMatchers(HttpMethod.POST, environment.getProperty(\"api.public.registration.url.path\"))\n        .permitAll()\n        .antMatchers(HttpMethod.POST, environment.getProperty(\"api.public.login.url.path\"))\n        .permitAll()\n        .antMatchers(HttpMethod.OPTIONS, environment.getProperty(\"api.public.cors.url.path\"))\n        .permitAll()\n        .antMatchers(HttpMethod.GET, environment.getProperty(\"api.public.confirm-email.url.path\"))\n        .permitAll()\n        .antMatchers(HttpMethod.GET, environment.getProperty(\"api.public.resend-confirmation-email.url.path\"))\n        .permitAll()\n        .antMatchers(HttpMethod.POST, environment.getProperty(\"api.public.confirm-email.url.path\"))\n        .permitAll()\n        .antMatchers(\"/swagger/**\")\n        .permitAll()\n        .anyRequest()\n        .authenticated()\n        .and()\n        .addFilter(new MyHomeAuthorizationFilter(authenticationManager(), environment,\n            appJwtEncoderDecoder))\n        .addFilterAfter(getCommunityFilter(), MyHomeAuthorizationFilter.class);\n  }\n}\n",
              "description": ""
            },
            "name": "configure",
            "location": {
              "start": 77,
              "insert": 57,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 56,
                "end": 76
              }
            },
            "item_type": "method",
            "length": 33,
            "docLength": 20
          },
          {
            "id": "afa54fa7-ac72-7ca1-804c-7fcc97b8ce0a",
            "ancestors": [
              "39af3d0b-4d1f-5680-524e-555ae1c9a963"
            ],
            "type": "function",
            "description": "creates a `CommunityAuthorizationFilter` instance, which combines authentication and community service functionality to filter community content access.",
            "params": [],
            "returns": {
              "type_name": "Exception",
              "description": "an instance of `CommunityAuthorizationFilter`.\n\n1. The input parameters used in the function creation include an instance of `AuthenticationManager` and an instance of `CommunityService`. These parameters represent the authentication manager and community service, respectively.\n2. The return value is a `Filter`, which is an interface that defines the functionality for filtering requests and responses based on criteria specified by the developer.\n3. The `Filter` object returned by the function is an instance of `CommunityAuthorizationFilter`. This class implements the `Filter` interface and provides functionality for authorizing requests based on community-specific rules.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "http.addFilterAfter(getCommunityFilter(), MyHomeAuthorizationFilter.class);\n",
              "description": "\nThis line adds a filter after the community filter and before the end of the configuration chain. This is done to ensure that the community authorization filter is executed before the end of the configuration chain. The getCommunityFilter method is called and an instance of the CommunityAuthorizationFilter class is created, which is capable of filtering community-related operations based on user authentication and authorization.\n\nPlease note that the code snippet provided is just one example of how the getCommunityFilter method might be used in a Java configuration class for Spring Security. The actual implementation of this method would depend on the specific needs of the application."
            },
            "name": "getCommunityFilter",
            "location": {
              "start": 132,
              "insert": 111,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 110,
                "end": 131
              }
            },
            "item_type": "method",
            "length": 3,
            "docLength": 21
          },
          {
            "id": "c8353c23-f277-7db2-164f-c719ac24ef33",
            "ancestors": [
              "39af3d0b-4d1f-5680-524e-555ae1c9a963"
            ],
            "type": "function",
            "description": "sets up authentication manager builder's user details service and password encoder.",
            "params": [
              {
                "name": "auth",
                "type_name": "AuthenticationManagerBuilder",
                "description": "Authentication Manager Builder, which is used to configure various aspects of the authentication system, including the user details service and password encoder.\n\n* `userDetailsService`: It is an instance of `UserDetailsService`, which is used to retrieve user details for authentication purposes.\n* `passwordEncoder`: It is an instance of `PasswordEncoder`, responsible for encrypting passwords securely.",
                "complex_type": true
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\nprotected void configure(AuthenticationManagerBuilder auth) throws Exception {\n  // This is the implementation of UserDetailsService that would be used by Spring Security\n  auth.userDetailsService(myUserDetailsService);\n  \n  // This is the PasswordEncoder that would be used by Spring Security\n  auth.passwordEncoder(new BCryptPasswordEncoder());\n}\n",
              "description": "\nThis example shows how to configure a custom implementation of UserDetailsService and PasswordEncoder using AuthenticationManagerBuilder.\nThe first line uses the userDetailsService method to provide an instance of a custom implementation of UserDetailsService to Spring Security. The second line uses the passwordEncoder method to provide a custom implementation of PasswordEncoder to Spring Security.\nThis example shows how to configure a custom implementation of UserDetailsService and PasswordEncoder using AuthenticationManagerBuilder in the context of a web application built with Spring Boot."
            },
            "name": "configure",
            "location": {
              "start": 149,
              "insert": 136,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 135,
                "end": 148
              }
            },
            "item_type": "method",
            "length": 4,
            "docLength": 13
          }
        ]
      }
    }
  },
  {
    "name": "CommunityAuthorizationFilter.java",
    "path": "service/src/main/java/com/myhome/security/filters/CommunityAuthorizationFilter.java",
    "content": {
      "structured": {
        "description": "A filter that checks if an user is an admin of a specific community based on their SecurityContext and request URI. The filter extends BasicAuthenticationFilter and uses CommunityService to query for admins in a specific community by matching the request URI against a pattern. If the user is not an admin, it sets a HTTP Status Code accordingly. Otherwise, it calls the superclass' `doFilterInternal` method to continue the filtering process.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.security.filters.CommunityAuthorizationFilter Pages: 1 -->\n<svg width=\"172pt\" height=\"93pt\"\n viewBox=\"0.00 0.00 172.00 93.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 89)\">\n<title>com.myhome.security.filters.CommunityAuthorizationFilter</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"164,-30 0,-30 0,0 164,0 164,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.security.filters.</text>\n<text text-anchor=\"middle\" x=\"82\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">CommunityAuthorizationFilter</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"151.5,-85 12.5,-85 12.5,-66 151.5,-66 151.5,-85\"/>\n<text text-anchor=\"middle\" x=\"82\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BasicAuthenticationFilter</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M82,-55.65C82,-47.36 82,-37.78 82,-30.11\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"78.5,-55.87 82,-65.87 85.5,-55.87 78.5,-55.87\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "4b28fe65-95ff-1381-5b4d-5be05816fa6d",
            "ancestors": [],
            "type": "function",
            "description": "is a subclass of BasicAuthenticationFilter that performs an internal filter operation based on the request URI and user's role. It checks if the user is an administrator of a particular community by querying the community service and sets a HTTP Status Code accordingly. If not, it calls the superclass' `doFilterInternal` method to continue the filtering process.",
            "name": "CommunityAuthorizationFilter",
            "location": {
              "start": 27,
              "insert": 17,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 16,
                "end": 26
              }
            },
            "item_type": "class",
            "length": 92,
            "docLength": 10
          },
          {
            "id": "3fa682bc-cd0b-e4ac-9b4c-89ecae092f47",
            "ancestors": [
              "4b28fe65-95ff-1381-5b4d-5be05816fa6d"
            ],
            "type": "function",
            "description": "in a filter class intercepts and processes HTTP requests based on a pattern match and user role validation.",
            "params": [
              {
                "name": "request",
                "type_name": "HttpServletRequest",
                "description": "HTTP request received by the filter.\n\n* `request.getRequestURI()`: This property returns the URI (Uniform Resource Identifier) of the incoming HTTP request.\n* `matcher`: This is an instance of `Matcher`, which is a class provided by the `java.util.regex` package, and it is used to match the URL pattern of the request.\n* `urlMatcher.find()`: This method checks if the URL pattern in the request matches the pattern defined in the `ADD_AMENITY_REQUEST_PATTERN` variable.\n* `isUserCommunityAdmin(request)`: This is a method that checks whether the current user is an admin of a specific community, based on the incoming request. If the user is not an admin, a `HttpServletResponse.SC_FORBIDDEN` status code is set and the function returns.\n* `super.doFilterInternal(request, response, chain)`: This is a call to the superclass's `doFilterInternal` method, which handles the processing of the request after the URL pattern has been checked.",
                "complex_type": true
              },
              {
                "name": "response",
                "type_name": "HttpServletResponse",
                "description": "ServletResponse object that contains information about the HTTP request and allows the filter to send a response to the client.\n\n1. `HttpServletResponse`: This is an instance of the `HttpServletResponse` class, which contains information about the current HTTP request and response. It has properties such as `getStatus()`, `getHeader()`, `getMethod()`, and `getProtocol()`.\n2. `status`: The `status` property of `response` represents the status code returned by the server. In this function, it is set to `HttpServletResponse.SC_FORBIDDEN`, indicating that the request was forbidden.\n3. `Header`: The `Header` property of `response` contains a collection of header fields associated with the current HTTP response. It may contain information such as `Content-Type`, `Content-Length`, and `Expires`.\n4. `Method`: The `Method` property of `response` represents the HTTP method (such as GET, POST, PUT, DELETE) used in the current request.\n5. `Protocol`: The `Protocol` property of `response` represents the protocol used for the current HTTP request and response (such as HTTP/1.1 or HTTP/2).",
                "complex_type": true
              },
              {
                "name": "chain",
                "type_name": "FilterChain",
                "description": "FilterChain object that contains the next filter to be executed after the current filter is applied.\n\n* `HttpServletRequest request`: The current HTTP request received by the filter.\n* `HttpServletResponse response`: The response object to which the filter will write the output.\n* `FilterChain chain`: An instance of `FilterChain`, which is a component of the servlet's filter chain architecture. It represents the sequence of filters that are executed in succession to handle an HTTP request. The current filter is positioned at the end of this chain, and it can modify or remove elements from the chain before passing the request on to the next filter or the servant.\n* `IOException`, `ServletException`: Thrown if any I/O or servlet-specific exception occurs during the filtration process.",
                "complex_type": true
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\n  protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response,\n      FilterChain chain) throws IOException, ServletException {\n    // If the requested URL matches a specific pattern (e.g., /communities/{communityID}/amenities), check if the current user is an administrator of that community.\n    Matcher urlMatcher = ADD_AMENITY_REQUEST_PATTERN.matcher(request.getRequestURI());\n    if (urlMatcher.find() && !isUserCommunityAdmin(request)) {\n      response.setStatus(HttpServletResponse.SC_FORBIDDEN);\n      return;\n    }\n    // Otherwise, continue with the filter chain.\n    super.doFilterInternal(request, response, chain);\n  }\n",
              "description": ""
            },
            "name": "doFilterInternal",
            "location": {
              "start": 77,
              "insert": 40,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 39,
                "end": 76
              }
            },
            "item_type": "method",
            "length": 13,
            "docLength": 37
          },
          {
            "id": "a9c66d11-d4a6-76bf-0548-b1cb57ec2b79",
            "ancestors": [
              "4b28fe65-95ff-1381-5b4d-5be05816fa6d"
            ],
            "type": "function",
            "description": "determines if a user is a community admin based on their user ID and the community ID in the request URL. It uses the `SecurityContextHolder` to retrieve the authentication principal, splits the request URI into its components, retrieves the community ID from the second component, and then queries the community service for admins of that community. Finally, it checks if the user ID matches any of the admin IDs in the query result.",
            "params": [
              {
                "name": "request",
                "type_name": "HttpServletRequest",
                "description": "HTTP request object containing information about the current user and their activity, which is used to determine if the user is an administrator of a particular community.\n\n* `request.getRequestURI()`: This property returns the requested URL of the incoming HTTP request, which can be used to identify the community ID from the URL path.\n* `(String) SecurityContextHolder.getContext().getAuthentication().getPrincipal()`: This property retrieves the currently authenticated user ID, which is used to identify the user's role in the community.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "boolean",
              "description": "a boolean value indicating whether the current user is an admin of a specified community.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "@Override\nprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException, ServletException {\n    if (isUserCommunityAdmin(request)) {\n        // User is admin of the community, continue with filtering.\n        super.doFilterInternal(request, response, chain);\n    } else {\n        // User is not admin of the community, respond with HTTP status code 403.\n        response.setStatus(HttpServletResponse.SC_FORBIDDEN);\n    }\n}\n",
              "description": "\nIn this example, isUserCommunityAdmin is called within doFilterInternal to determine whether the current user is an administrator of a specific community based on the request URL. If the user ID matches any admins found by findCommunityAdminsById, the filter chain is continued with doFilterInternal. Otherwise, HTTP status code 403 is returned."
            },
            "name": "isUserCommunityAdmin",
            "location": {
              "start": 106,
              "insert": 91,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 90,
                "end": 105
              }
            },
            "item_type": "method",
            "length": 12,
            "docLength": 15
          }
        ]
      }
    }
  },
  {
    "name": "AppJwt.java",
    "path": "service/src/main/java/com/myhome/security/jwt/AppJwt.java",
    "content": {
      "structured": {
        "description": "A class called `AppJwt` that represents a JWT (JSON Web Token) in an application. The class has two fields: `userId` (a String representing a unique identifier for a user in the application) and `expiration` (a LocalDateTime representing the date and time after which the JWT becomes invalid or no longer valid). The class uses Lombok's Builder, Getter, andToString annotations for builder-like functionality, immutability, and toString() method implementation.",
        "items": [
          {
            "id": "ad248d63-84b5-c0b4-df48-19f2af50855f",
            "ancestors": [],
            "type": "function",
            "description": "represents a JWT in an application with a unique identifier for a user and an expiration date.\nFields:\n\t- userId (String): represents a unique identifier for a user in the application.\n\t- expiration (LocalDateTime): in the AppJwt class represents the date and time after which the JWT becomes invalid or no longer valid.\n\n",
            "fields": [
              {
                "name": "userId",
                "type_name": "String",
                "value": null,
                "constant": false,
                "class_name": "AppJwt",
                "description": "represents a unique identifier for a user in the application."
              },
              {
                "name": "expiration",
                "type_name": "LocalDateTime",
                "value": null,
                "constant": false,
                "class_name": "AppJwt",
                "description": "in the AppJwt class represents the date and time after which the JWT becomes invalid or no longer valid."
              }
            ],
            "name": "AppJwt",
            "location": {
              "start": 35,
              "insert": 27,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 26,
                "end": 34
              }
            },
            "item_type": "class",
            "length": 7,
            "docLength": 8
          }
        ]
      }
    }
  },
  {
    "name": "AppJwtEncoderDecoder.java",
    "path": "service/src/main/java/com/myhome/security/jwt/AppJwtEncoderDecoder.java",
    "content": {
      "structured": {
        "description": "An interface `AppJwtEncoderDecoder` that provides logic for encoding and decoding Application's JWTs. The interface includes two methods: `decode(String encodedJwt, String secret)` and `encode(AppJwt jwt, String secret)`. These methods allow for the manipulation of JWTs for application use cases.",
        "items": [
          {
            "id": "8c964325-ebfc-b182-b444-656ecc7b51ef",
            "ancestors": [],
            "type": "function",
            "description": "provides a logic for encoding and decoding Application's JWTs.",
            "name": "AppJwtEncoderDecoder",
            "location": {
              "start": 25,
              "insert": 22,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 21,
                "end": 24
              }
            },
            "item_type": "interface",
            "length": 5,
            "docLength": 3
          }
        ]
      }
    }
  },
  {
    "name": "NoSecretJwtEncoderDecoder.java",
    "path": "service/src/main/java/com/myhome/security/jwt/impl/NoSecretJwtEncoderDecoder.java",
    "content": {
      "structured": {
        "description": "An implementation of the `AppJwtEncoderDecoder` interface for testing purposes, providing methods for encoding and decoding JSON Web Tokens (JWTs). The `decode` method takes an encoded JWT string and a secret as input, and returns an instance of the `AppJwt` class with extracted user ID and expiration date. The `encode` method takes an instance of the `AppJwt` class and a secret as input, and generates an encoded string consisting of the user ID and expiration time.",
        "items": [
          {
            "id": "54451173-163e-fa89-6a45-c9b959fa8aa9",
            "ancestors": [],
            "type": "function",
            "description": "is an implementation of the AppJwtEncoderDecoder interface that handles JSON Web Token (JWT) encoding and decoding without using secrets. It provides methods for encoding and decoding JWTs, as well as creating new `AppJwt` objects from decoded JWTs.",
            "name": "NoSecretJwtEncoderDecoder",
            "location": {
              "start": 34,
              "insert": 28,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 27,
                "end": 33
              }
            },
            "item_type": "class",
            "length": 49,
            "docLength": 6
          },
          {
            "id": "6f345b3d-9287-e781-b44f-e5d4d7061bd3",
            "ancestors": [
              "54451173-163e-fa89-6a45-c9b959fa8aa9"
            ],
            "type": "function",
            "description": "decodes a JSON Web Token (JWT) and returns an instance of `AppJwt`. It splits the encoded JWT into two parts using a custom separator, then parses the first part as a string representing the user ID and the second part as a date representing the expiration time.",
            "params": [
              {
                "name": "encodedJwt",
                "type_name": "String",
                "description": "JSON Web Token (JWT) that needs to be decoded and converted into an instance of the `AppJwt` class.",
                "complex_type": false
              },
              {
                "name": "secret",
                "type_name": "String",
                "description": "secret key used to sign the JWT token, which is necessary for decoding and verifying the authenticity of the token.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "AppJwt",
              "description": "an instance of `AppJwt` with the user ID and expiration time extracted from the encoded JWT.\n\n* `AppJwt`: This is the class that represents an encrypted JWT (Java Token) object.\n* `userId`: The first element in the split `encodedJwt` string represents the user ID.\n* `expiration`: The second element in the split `encodedJwt` string represents the expiration time of the JWT, which is a `LocalDateTime` object.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "public static void main(String[] args) {\n    String encodedJwt = \"userId+2021-12-31T23:59\"; // An example of a JWT encoded string.\n    String secret = \"my_secret\"; // A secret key used to encrypt and decrypt the JWT.\n    AppJwt appJwt = new NoSecretJwtEncoderDecoder().decode(encodedJwt, secret);\n    System.out.println(\"User ID: \" + appJwt.getUserId());\n    System.out.println(\"Expiration Date: \" + appJwt.getExpiration());\n}\n",
              "description": "\nThis example will print the user ID and expiration date of the JWT token using the decode method from NoSecretJwtEncoderDecoder class."
            },
            "name": "decode",
            "location": {
              "start": 59,
              "insert": 39,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 38,
                "end": 58
              }
            },
            "item_type": "method",
            "length": 4,
            "docLength": 20
          },
          {
            "id": "82373939-dad5-60b4-6e43-0b2bf9b07aec",
            "ancestors": [
              "54451173-163e-fa89-6a45-c9b959fa8aa9"
            ],
            "type": "function",
            "description": "takes a `AppJwt` object and a secret as input and returns a string representing the user ID and expiration time encoded together with the secret.",
            "params": [
              {
                "name": "jwt",
                "type_name": "AppJwt",
                "description": "JSON Web Token to be encoded, containing the user ID and expiration time.\n\n* `jwt`: A `AppJwt` object that contains user identification information and an expiration time.",
                "complex_type": true
              },
              {
                "name": "secret",
                "type_name": "String",
                "description": "secret key used to sign the JWT token.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "String",
              "description": "a concatenation of the `jwt.getUserId()` and `jwt.getExpiration()` values, separated by a separator.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "// Encoding a JWT object with userId = \"12345\" and expiration = 2020-12-31T23:59:59Z\nString encodedJwt = NoSecretJwtEncoderDecoder.encode(new AppJwt(\"12345\", LocalDateTime.of(2020, Month.DECEMBER, 31, 23, 59, 59)), \"secret\");\n\n// The encoded JWT is now a string that consists of the user ID and expiration time concatenated with a separator.\nSystem.out.println(encodedJwt); // Output: 12345+2020-12-31T23:59:59Z\n",
              "description": ""
            },
            "name": "encode",
            "location": {
              "start": 79,
              "insert": 64,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 63,
                "end": 78
              }
            },
            "item_type": "method",
            "length": 3,
            "docLength": 15
          }
        ]
      }
    }
  },
  {
    "name": "SecretJwtEncoderDecoder.java",
    "path": "service/src/main/java/com/myhome/security/jwt/impl/SecretJwtEncoderDecoder.java",
    "content": {
      "structured": {
        "description": "An implementation of AppJwtEncoderDecoder, which is a class that provides functions for encoding and decoding JSON Web Tokens (JWTs) using HMAC-SHA-512 algorithm with a secret key. The class takes an encoded JWT and a secret as input and uses JWT parser to extract claims from the JWT before creating a new AppJwt instance with the extracted information. The class also provides functions for encoding and decoding JWTs using HMAC-SHA-512 algorithm with a provided secret key.",
        "items": [
          {
            "id": "2d0e5b5e-c275-b188-f64e-586d1b03ce49",
            "ancestors": [],
            "type": "function",
            "description": "is a component that encodes and decodes JSON Web Tokens (JWTs) by extracting claims such as the user ID and expiration date, signing them with an HMAC-SHA-512 algorithm using a secret key, and returning the encoded JWT. The class also has methods to decode a JWT and build a new `AppJwt` object with updated fields for the user ID and expiration date.",
            "name": "SecretJwtEncoderDecoder",
            "location": {
              "start": 41,
              "insert": 33,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 32,
                "end": 40
              }
            },
            "item_type": "class",
            "length": 63,
            "docLength": 8
          },
          {
            "id": "08e7554b-c92e-dda3-044f-8673bcef1084",
            "ancestors": [
              "2d0e5b5e-c275-b188-f64e-586d1b03ce49"
            ],
            "type": "function",
            "description": "parses an encoded JWT and extracts the subject, expiration time, and builds a new AppJwt instance with the user ID and expiration date.",
            "params": [
              {
                "name": "encodedJwt",
                "type_name": "String",
                "description": "JSON Web Token (JWT) that contains the user's information and expiration time, which is to be decoded and converted into an instance of the `AppJwt` class.",
                "complex_type": false
              },
              {
                "name": "secret",
                "type_name": "String",
                "description": "HSM key used for signing and verifying the JWT token, which is required to extract the claims from the JWT message.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "AppJwt",
              "description": "an instance of `AppJwt` with updated `userId` and `expiration` fields.\n\n* `userId`: The subject of the JWT claim, representing the user ID.\n* `expiration`: The expiration date and time of the JWT, represented as an Instant in ISO 8601 format, followed by a conversion to a LocalDateTime for ease of use in Java.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "public void demoDecode() {\n    String encodedJwt = \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\";\n    String secret = \"mysecret\";\n    AppJwt appJwt = SecretJwtEncoderDecoder.decode(encodedJwt, secret);\n    System.out.println(\"User ID: \" + appJwt.getUserId());\n    System.out.println(\"Expiration Date: \" + appJwt.getExpiration());\n}\n",
              "description": ""
            },
            "name": "decode",
            "location": {
              "start": 66,
              "insert": 45,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 44,
                "end": 65
              }
            },
            "item_type": "method",
            "length": 13,
            "docLength": 21
          },
          {
            "id": "440f6986-d041-dfb1-cb4c-965b0872fbc7",
            "ancestors": [
              "2d0e5b5e-c275-b188-f64e-586d1b03ce49"
            ],
            "type": "function",
            "description": "takes a JWT object and a secret key as input, generates a new JWT with updated expiration date based on the original JWT's expiration date, and signs it using HMAC-SHA512 algorithm with the provided secret key. The resulting JWT is returned in a compact form.",
            "params": [
              {
                "name": "jwt",
                "type_name": "AppJwt",
                "description": "JSON Web Token (JWT) to be encoded, which contains information about the user and its expiration time.\n\n* `jwt`: This is the input parameter to the `encode` function, which represents an app-specific JSON Web Token (JWT) object. It contains information such as the user ID and expiration date.\n* `secret`: This is the secret key used for signing the JWT.",
                "complex_type": true
              },
              {
                "name": "secret",
                "type_name": "String",
                "description": "symmetric encryption key used for signing the JWT.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "String",
              "description": "a compact JWT containing the user ID, expiration date, and HMAC-SHA-512 signature.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "AppJwt jwt = new AppJwt(1234, LocalDateTime.now().plusHours(1));\nString secret = \"my-secret\";\nString encodedJwt = encode(jwt, secret);\nSystem.out.println(encodedJwt);\n// Output: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTI5OTk2MzQ3LCJleHAiOjE1MTkwNDcxMDcsInVfXC9vYXV0aF9yb2xlXCI6ICJwcm9qZWN0cyIsImF1dGgiOiAiUmVhZCJ9.Ws-KtLNMX8x_PBQj5g4nE68eY8rI7RD2aXO9T5S3yJf8Zkpzl6bVG0dHfXUcMq5v8A\n",
              "description": ""
            },
            "name": "encode",
            "location": {
              "start": 96,
              "insert": 80,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 79,
                "end": 95
              }
            },
            "item_type": "method",
            "length": 7,
            "docLength": 16
          }
        ]
      }
    }
  },
  {
    "name": "AmenityService.java",
    "path": "service/src/main/java/com/myhome/services/AmenityService.java",
    "content": {
      "structured": {
        "description": "An interface `AmenityService` that provides methods for creating, retrieving, deleting, listing, and updating amenities in a community. The interface includes five methods: `createAmenities`, `getAmenityDetails`, `deleteAmenity`, `listAllAmenities`, and `updateAmenity`. These methods allow for the manipulation of amenities within a community, providing a centralized service for managing amenities.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.services.AmenityService Pages: 1 -->\n<svg width=\"208pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 208.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.services.AmenityService</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"186,-96 14,-96 14,-66 186,-66 186,-96\"/>\n<text text-anchor=\"start\" x=\"22\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.services.Amenity</text>\n<text text-anchor=\"middle\" x=\"100\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Service</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1services_1_1springdatajpa_1_1AmenitySDJpaService.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"200,-30 0,-30 0,0 200,0 200,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.services.springdatajpa.</text>\n<text text-anchor=\"middle\" x=\"100\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">AmenitySDJpaService</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node2 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node1&#45;&gt;Node2</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M100,-55.54C100,-46.96 100,-37.61 100,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"96.5,-55.8 100,-65.8 103.5,-55.8 96.5,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "9912cc90-b814-1eba-a54a-9e235c35aba9",
            "ancestors": [],
            "type": "function",
            "description": "provides methods for creating, retrieving, deleting, listing, and updating amenities in a community.",
            "name": "AmenityService",
            "location": {
              "start": 29,
              "insert": 25,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 24,
                "end": 28
              }
            },
            "item_type": "interface",
            "length": 12,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "AuthenticationService.java",
    "path": "service/src/main/java/com/myhome/services/AuthenticationService.java",
    "content": {
      "structured": {
        "description": "An interface `AuthenticationService` which provides a method `login()` that returns an `AuthenticationData` object representing the authenticated user.",
        "items": [
          {
            "id": "c118bf27-75e0-11b3-1740-8b5c04bb86c8",
            "ancestors": [],
            "type": "function",
            "description": "provides a method to log in users and returns an AuthenticationData object representing the authenticated user.",
            "name": "AuthenticationService",
            "location": {
              "start": 10,
              "insert": 6,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 5,
                "end": 9
              }
            },
            "item_type": "interface",
            "length": 3,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "BookingService.java",
    "path": "service/src/main/java/com/myhome/services/BookingService.java",
    "content": {
      "structured": {
        "description": "An interface called BookingService that provides a method for deleting bookings based on amenity ID and booking ID. The method, deleteBooking(), takes two string parameters, amenityId and bookingId, and returns a boolean value indicating whether the booking was successfully deleted.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.services.BookingService Pages: 1 -->\n<svg width=\"208pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 208.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.services.BookingService</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"185,-96 15,-96 15,-66 185,-66 185,-96\"/>\n<text text-anchor=\"start\" x=\"23\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.services.Booking</text>\n<text text-anchor=\"middle\" x=\"100\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Service</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1services_1_1springdatajpa_1_1BookingSDJpaService.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"200,-30 0,-30 0,0 200,0 200,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.services.springdatajpa.</text>\n<text text-anchor=\"middle\" x=\"100\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">BookingSDJpaService</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node2 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node1&#45;&gt;Node2</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M100,-55.54C100,-46.96 100,-37.61 100,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"96.5,-55.8 100,-65.8 103.5,-55.8 96.5,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "496fbd41-865a-a7a5-6748-b25dae26c0af",
            "ancestors": [],
            "type": "function",
            "description": "provides a method for deleting bookings based on amenity ID and booking ID.",
            "name": "BookingService",
            "location": {
              "start": 6,
              "insert": 3,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 2,
                "end": 5
              }
            },
            "item_type": "interface",
            "length": 5,
            "docLength": 3
          }
        ]
      }
    }
  },
  {
    "name": "CommunityService.java",
    "path": "service/src/main/java/com/myhome/services/CommunityService.java",
    "content": {
      "structured": {
        "description": "An interface `CommunityService` that provides various methods for managing communities in a Spring Data-based application. These methods include creating new communities, listing all communities, deleting existing communities, and adding or removing admins and houses from communities. The code also includes methods for retrieving community details and housing information.",
        "items": [
          {
            "id": "a3b820ab-0f6f-42ba-cb4b-9ea3f1a41af1",
            "ancestors": [],
            "type": "function",
            "description": "provides a set of methods for managing communities in a Spring Data-based application, including creating, listing, and deleting communities.",
            "name": "CommunityService",
            "location": {
              "start": 33,
              "insert": 28,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 27,
                "end": 32
              }
            },
            "item_type": "interface",
            "length": 27,
            "docLength": 5
          }
        ]
      }
    }
  },
  {
    "name": "HouseMemberDocumentService.java",
    "path": "service/src/main/java/com/myhome/services/HouseMemberDocumentService.java",
    "content": {
      "structured": {
        "description": "An interface called HouseMemberDocumentService that provides methods for managing House Member Documents. The methods include deleting, finding, updating, and creating documents. The interface uses packages such as Spring Web Multipart and Apache License Version 2.0.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.services.HouseMemberDocumentService Pages: 1 -->\n<svg width=\"211pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 211.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.services.HouseMemberDocumentService</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"182,-96 21,-96 21,-66 182,-66 182,-96\"/>\n<text text-anchor=\"start\" x=\"29\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.services.House</text>\n<text text-anchor=\"middle\" x=\"101.5\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">MemberDocumentService</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1services_1_1springdatajpa_1_1HouseMemberDocumentSDJpaService.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"203,-30 0,-30 0,0 203,0 203,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.services.springdatajpa.</text>\n<text text-anchor=\"middle\" x=\"101.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">HouseMemberDocumentSDJpaService</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node2 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node1&#45;&gt;Node2</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M101.5,-55.54C101.5,-46.96 101.5,-37.61 101.5,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"98,-55.8 101.5,-65.8 105,-55.8 98,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "564b840e-0307-4499-9f4f-6b702c4a06a1",
            "ancestors": [],
            "type": "function",
            "description": "provides methods for deleting, finding, updating, and creating House Member Documents.",
            "name": "HouseMemberDocumentService",
            "location": {
              "start": 26,
              "insert": 23,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 22,
                "end": 25
              }
            },
            "item_type": "interface",
            "length": 12,
            "docLength": 3
          }
        ]
      }
    }
  },
  {
    "name": "HouseService.java",
    "path": "service/src/main/java/com/myhome/services/HouseService.java",
    "content": {
      "structured": {
        "description": "An interface for managing houses and their members using Spring Data. The interface provides methods for listing all houses and members, adding new members to a house, deleting members from a house, retrieving details of a specific house, and listing members for a set of houses associated with a specific user.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.services.HouseService Pages: 1 -->\n<svg width=\"208pt\" height=\"104pt\"\n viewBox=\"0.00 0.00 208.00 104.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 100)\">\n<title>com.myhome.services.HouseService</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"180.5,-96 19.5,-96 19.5,-66 180.5,-66 180.5,-96\"/>\n<text text-anchor=\"start\" x=\"27.5\" y=\"-84\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.services.House</text>\n<text text-anchor=\"middle\" x=\"100\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Service</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1services_1_1springdatajpa_1_1HouseSDJpaService.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"200,-30 0,-30 0,0 200,0 200,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.services.springdatajpa.</text>\n<text text-anchor=\"middle\" x=\"100\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">HouseSDJpaService</text>\n</a>\n</g>\n</g>\n<!-- Node1&#45;&gt;Node2 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node1&#45;&gt;Node2</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M100,-55.54C100,-46.96 100,-37.61 100,-30.16\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"96.5,-55.8 100,-65.8 103.5,-55.8 96.5,-55.8\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "cc94a4a4-6a85-3486-c342-b9f3e01abe01",
            "ancestors": [],
            "type": "function",
            "description": "provides methods for managing houses and their members, including listing all houses and members, adding new members to a house, deleting members from a house, retrieving details of a specific house, and listing members for a set of houses associated with a specific user.",
            "name": "HouseService",
            "location": {
              "start": 32,
              "insert": 26,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 25,
                "end": 31
              }
            },
            "item_type": "interface",
            "length": 15,
            "docLength": 6
          }
        ]
      }
    }
  },
  {
    "name": "MailService.java",
    "path": "service/src/main/java/com/myhome/services/MailService.java",
    "content": {
      "structured": {
        "description": "An interface `MailService` that provides methods for sending emails related to user account management and security token confirmation. The methods include `sendPasswordRecoverCode`, `sendAccountCreated`, `sendPasswordSuccessfullyChanged`, and `sendAccountConfirmed`. These methods are used to handle various email-related tasks in the context of a user account management system.",
        "image": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.SecurityToken Pages: 1 -->\n<svg width=\"187pt\" height=\"148pt\"\n viewBox=\"0.00 0.00 187.00 148.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 144)\">\n<title>com.myhome.domain.SecurityToken</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"173,-30 6,-30 6,0 173,0 173,-30\"/>\n<text text-anchor=\"start\" x=\"14\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Security</text>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Token</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"179,-85 0,-85 0,-66 179,-66 179,-85\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-55.65C89.5,-47.36 89.5,-37.78 89.5,-30.11\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-55.87 89.5,-65.87 93,-55.87 86,-55.87\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"126.5,-140 52.5,-140 52.5,-121 126.5,-121 126.5,-140\"/>\n<text text-anchor=\"middle\" x=\"89.5\" y=\"-128\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M89.5,-110.66C89.5,-101.93 89.5,-91.99 89.5,-85.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"86,-110.75 89.5,-120.75 93,-110.75 86,-110.75\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n",
        "items": [
          {
            "id": "6a68549c-593f-c9b8-7e42-303d30e71832",
            "ancestors": [],
            "type": "function",
            "description": "provides methods for sending emails related to user account management and security token confirmation.",
            "name": "MailService",
            "location": {
              "start": 10,
              "insert": 6,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 5,
                "end": 9
              }
            },
            "item_type": "interface",
            "length": 10,
            "docLength": 4
          }
        ]
      }
    }
  },
  {
    "name": "PaymentService.java",
    "path": "service/src/main/java/com/myhome/services/PaymentService.java",
    "content": {
      "structured": {
        "description": "An interface `PaymentService` that provides various methods for scheduling payments, retrieving payment details, and getting payments by member or administrator. The interface includes methods like `schedulePayment`, `getPaymentDetails`, `getPaymentsByMember`, `getPaymentsByAdmin`, and `getHouseMember`. These methods allow for the manipulation of payment-related data in a Spring Data-based system.",
        "items": [
          {
            "id": "e307e5ba-a398-368e-7a44-6ac8a9959c64",
            "ancestors": [],
            "type": "function",
            "description": "offers several methods for managing payments, including scheduling, retrieving details, and retrieving payments by member or administrator.",
            "name": "PaymentService",
            "location": {
              "start": 35,
              "insert": 30,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 29,
                "end": 34
              }
            },
            "item_type": "interface",
            "length": 11,
            "docLength": 5
          }
        ]
      }
    }
  }
]
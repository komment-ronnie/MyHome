{"name":"PageInfo.java","path":"api/src/main/java/com/myhome/utils/PageInfo.java","content":{"structured":{"description":"A class called `PageInfo` that represents information about a page of data. It has five fields: `currentPage`, `pageLimit`, `totalPages`, `totalElements`, and constructors to create instances of the class. The `of()` method creates a new instance of `PageInfo` from a `Pageable` object and a `Page` object.","items":[{"id":"fd610c6c-19d8-c69c-954b-007692b3b560","ancestors":[],"type":"function","description":"is a data structure that provides information about a page of results. It includes the current page number, page limit, total pages, and total elements. The class also offers a static method for creating a new instance of the class with the specified pageable and page parameters.","name":"PageInfo","code":"@EqualsAndHashCode\n@ToString\n@Getter\n@RequiredArgsConstructor(access = AccessLevel.PRIVATE)\npublic class PageInfo {\n  private final int currentPage;\n  private final int pageLimit;\n  private final int totalPages;\n  private final long totalElements;\n\n  public static PageInfo of(Pageable pageable, Page<?> page) {\n    return new PageInfo(\n        pageable.getPageNumber(),\n        pageable.getPageSize(),\n        page.getTotalPages(),\n        page.getTotalElements()\n    );\n  }\n}","location":{"start":11,"insert":11,"offset":" ","indent":0,"comment":null},"item_type":"class","length":19},{"id":"adb86bce-cb2f-bfb2-b841-d3187544d2df","ancestors":["fd610c6c-19d8-c69c-954b-007692b3b560"],"type":"function","description":"generates a `PageInfo` object from a given `Pageable` and `Page`. The object contains information on the current page, size, total pages, and total elements.","params":[{"name":"pageable","type_name":"Pageable","description":"Pageable object that contains the information about the current page of results, including the page number and the number of elements per page.\n\n* `getPageNumber()` returns the page number of the page being processed.\n* `getPageSize()` returns the number of elements in a page.\n* `getTotalPages()` returns the total number of pages in the result set.\n* `getTotalElements()` returns the total number of elements in the result set.","complex_type":true},{"name":"page","type_name":"Page<?>","description":"current page being processed, providing the total number of elements on that page and the page number within the overall result set.\n\n* `pageNumber`: The number of the current page being served.\n* `pageSize`: The number of elements in a single page.\n* `totalPages`: The total number of pages in the result set.\n* `totalElements`: The total number of elements returned by the query.","complex_type":true}],"returns":{"type_name":"PageInfo","description":"a `PageInfo` object containing information about the page number, size, total pages, and total elements of the given `Pageable` and `Page`.\n\n* `pageNumber`: The page number where the element resides.\n* `pageSize`: The number of elements per page.\n* `totalPages`: The total number of pages in the result set.\n* `totalElements`: The total number of elements in the result set.","complex_type":true},"name":"of","code":"public static PageInfo of(Pageable pageable, Page<?> page) {\n    return new PageInfo(\n        pageable.getPageNumber(),\n        pageable.getPageSize(),\n        page.getTotalPages(),\n        page.getTotalElements()\n    );\n  }","location":{"start":21,"insert":21,"offset":" ","indent":2,"comment":null},"item_type":"method","length":8}]}}}
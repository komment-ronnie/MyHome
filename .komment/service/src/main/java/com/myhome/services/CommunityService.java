{"name":"CommunityService.java","path":"service/src/main/java/com/myhome/services/CommunityService.java","content":{"structured":{"description":"An interface for a community service that provides various methods for managing communities, including creating new communities, listing all communities, and retrieving community details by ID. It also includes methods for adding or removing admins and houses from communities, as well as deleting communities. The code uses packages from Spring Data Domain, which provides functionalities for working with domain objects and their associated data.","items":[{"id":"8676b66d-92d7-ecb5-d84e-2c0ed9d4c092","ancestors":[],"type":"function","description":"provides a set of methods for managing communities in a Spring Data-based application, including creating new communities, listing all communities, and deleting existing communities.","name":"CommunityService","code":"public interface CommunityService {\n  Community createCommunity(CommunityDto communityDto);\n\n  Set<Community> listAll();\n\n  Set<Community> listAll(Pageable pageable);\n\n  Optional<Community> getCommunityDetailsById(String communityId);\n\n  Optional<List<CommunityHouse>> findCommunityHousesById(String communityId, Pageable pageable);\n\n  Optional<List<User>> findCommunityAdminsById(String communityId, Pageable pageable);\n\n  Optional<User> findCommunityAdminById(String adminId);\n\n  Optional<Community> getCommunityDetailsByIdWithAdmins(String communityId);\n\n  Optional<Community> addAdminsToCommunity(String communityId, Set<String> admins);\n\n  Set<String> addHousesToCommunity(String communityId, Set<CommunityHouse> houses);\n\n  boolean removeHouseFromCommunityByHouseId(Community community, String houseId);\n\n  boolean deleteCommunity(String communityId);\n\n  boolean removeAdminFromCommunity(String communityId, String adminId);\n}","location":{"start":28,"insert":28,"offset":" ","indent":0,"comment":null},"item_type":"interface","length":27}]}}}
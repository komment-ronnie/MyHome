{"name":"MyHomeServiceApplication.java","path":"service/src/main/java/com/myhome/MyHomeServiceApplication.java","content":{"structured":{"description":"A Spring Boot application that uses Spring Security's bCrypt password encoder to encrypt passwords. The `getPasswordEncoder()` method returns an instance of `BCryptPasswordEncoder`, which is used to encode and decode passwords in the application.","items":[{"id":"b456feea-3da9-c4ac-ba4d-d402d96f9469","ancestors":[],"type":"function","description":"is a Spring Boot application that provides a password encoder using the BCrypt PasswordEncoder class. The main method starts the application and the getPasswordEncoder() method returns a BCryptPasswordEncoder instance.","name":"MyHomeServiceApplication","code":"@SpringBootApplication\n@ConfigurationPropertiesScan\npublic class MyHomeServiceApplication {\n\n  public static void main(String[] args) {\n    SpringApplication.run(MyHomeServiceApplication.class, args);\n  }\n\n  @Bean\n  public PasswordEncoder getPasswordEncoder() {\n    return new BCryptPasswordEncoder();\n  }\n}","location":{"start":26,"insert":26,"offset":" ","indent":0,"comment":null},"item_type":"class","length":13},{"id":"bcc72cb4-deef-d88b-ec4c-002bc84c2fac","ancestors":["b456feea-3da9-c4ac-ba4d-d402d96f9469"],"type":"function","description":"starts the Spring application by running the `MyHomeServiceApplication` class.","params":[{"name":"args","type_name":"String[]","description":"1 or more command-line arguments passed to the `SpringApplication.run()` method when executing the application.\n\n* The argument array has zero or more elements, which are the command-line arguments passed to the application.\n* The `args` object provides access to the individual arguments in the array through its `get` methods, such as `get[0]` for the first argument and `get[1]` for the second argument, and so on.","complex_type":true}],"name":"main","code":"public static void main(String[] args) {\n    SpringApplication.run(MyHomeServiceApplication.class, args);\n  }","location":{"start":30,"insert":30,"offset":" ","indent":2,"comment":null},"item_type":"method","length":3},{"id":"94db75fa-e676-9688-9b43-e0055efa1d29","ancestors":["b456feea-3da9-c4ac-ba4d-d402d96f9469"],"type":"function","description":"returns a `BCryptPasswordEncoder` instance, which is used to encrypt passwords using the BCrypt hashing algorithm.","params":[],"returns":{"type_name":"instance","description":"a BCryptPasswordEncoder instance, which is a widely-used password hashing algorithm.\n\n1. Type: The `BCryptPasswordEncoder` class is a specific implementation of the `PasswordEncoder` interface in Java.\n2. Parameters: The constructor for `BCryptPasswordEncoder` takes no parameters, indicating that it does not have any mandatory initialization values.\n3. Methods: The `BCryptPasswordEncoder` class provides several methods for password encryption and decryption, including `encode()` and `decode()`.","complex_type":true},"usage":{"language":"java","code":"@Autowired\nprivate PasswordEncoder passwordEncoder;\n\npublic void someMethod() {\n    String encodedPassword = passwordEncoder.encode(\"somePassword\");\n}\n","description":""},"name":"getPasswordEncoder","code":"@Bean\n  public PasswordEncoder getPasswordEncoder() {\n    return new BCryptPasswordEncoder();\n  }","location":{"start":34,"insert":34,"offset":" ","indent":2,"comment":null},"item_type":"method","length":4}]}}}
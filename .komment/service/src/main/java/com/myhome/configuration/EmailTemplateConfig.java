{"name":"EmailTemplateConfig.java","path":"service/src/main/java/com/myhome/configuration/EmailTemplateConfig.java","content":{"structured":{"description":"An EmailTemplateConfig class that configures email template processing using Thymeleaf. It provides aBean for a ResourceBundleMessageSource and a Spring Template Engine, which are used to resolve templates and render emails, respectively. The code also sets up default locale and encoding for the message source and template engine, as well as caching options for the template engine.","items":[{"id":"5920ddab-c3a8-8190-4e40-c6a7519b0f47","ancestors":[],"type":"function","description":"is a configuration class that sets up email template handling for an application. It provides a template engine and message source for Thymeleaf templates, allowing for dynamic email content generation. The class also defines the path to the email templates and their format, as well as caching and encoding settings.","name":"EmailTemplateConfig","code":"@Configuration\n@RequiredArgsConstructor\npublic class EmailTemplateConfig {\n\n  private final EmailTemplateProperties templateProperties;\n  private final EmailTemplateLocalizationProperties localizationProperties;\n\n  @Bean\n  public ResourceBundleMessageSource emailMessageSource() {\n    ResourceBundleMessageSource messageSource = new ResourceBundleMessageSource();\n    messageSource.setBasename(localizationProperties.getPath());\n    messageSource.setDefaultLocale(Locale.ENGLISH);\n    messageSource.setDefaultEncoding(localizationProperties.getEncoding());\n    messageSource.setCacheSeconds(localizationProperties.getCacheSeconds());\n    return messageSource;\n  }\n\n  @Bean\n  public SpringTemplateEngine thymeleafTemplateEngine(ResourceBundleMessageSource emailMessageSource) {\n    SpringTemplateEngine templateEngine = new SpringTemplateEngine();\n    templateEngine.setTemplateResolver(thymeleafTemplateResolver());\n    templateEngine.setTemplateEngineMessageSource(emailMessageSource);\n    return templateEngine;\n  }\n\n  private ITemplateResolver thymeleafTemplateResolver() {\n    ClassLoaderTemplateResolver templateResolver = new ClassLoaderTemplateResolver();\n\n    String templatePath = templateProperties.getPath();\n    String fileSeparator = System.getProperty(\"file.separator\");\n    templateResolver.setPrefix(templatePath.endsWith(fileSeparator) ? templatePath : templatePath + fileSeparator);\n\n    templateResolver.setSuffix(templateProperties.getFormat());\n    templateResolver.setTemplateMode(templateProperties.getMode());\n    templateResolver.setCharacterEncoding(templateProperties.getEncoding());\n    templateResolver.setCacheable(templateProperties.isCache());\n    return templateResolver;\n  }\n\n}","location":{"start":15,"insert":15,"offset":" ","indent":0,"comment":null},"item_type":"class","length":40},{"id":"5a6873de-6ff2-31b4-f346-ca3327a76f14","ancestors":["5920ddab-c3a8-8190-4e40-c6a7519b0f47"],"type":"function","description":"creates a `ResourceBundleMessageSource` instance with configuration options set from the `localizationProperties` object, and returns it.","params":[],"returns":{"type_name":"ResourceBundleMessageSource","description":"a `ResourceBundleMessageSource` instance configured to handle email localization.\n\n* `ResourceBundleMessageSource`: This is the class that represents the message source for email localization.\n* `setBasename(localizationProperties.getPath())`: This sets the base name of the resource bundle file.\n* `setDefaultLocale(Locale.ENGLISH)`: Sets the default locale for the message source.\n* `setDefaultEncoding(localizationProperties.getEncoding())`: Sets the default encoding for the message source.\n* `setCacheSeconds(localizationProperties.getCacheSeconds())`: Sets the cache seconds for the message source.","complex_type":true},"usage":{"language":"java","code":"@Bean\npublic ResourceBundleMessageSource emailMessageSource() {\n    ResourceBundleMessageSource messageSource = new ResourceBundleMessageSource();\n    messageSource.setBasename(localizationProperties.getPath()); // Setting the basename to localization properties\n    messageSource.setDefaultLocale(Locale.ENGLISH); // Setting default locale to English\n    messageSource.setDefaultEncoding(localizationProperties.getEncoding()); // Setting default encoding to localization properties\n    messageSource.setCacheSeconds(localizationProperties.getCacheSeconds()); // Setting cache seconds to localization properties\n    return messageSource;\n}\n","description":"\nIn this example, the method emailMessageSource is being called and returns an instance of ResourceBundleMessageSource. This instance is then set as a bean in the Spring application context. The method sets the basename of the message source to the localization properties provided, which allows for internationalization (i18n) of emails sent through the system."},"name":"emailMessageSource","code":"@Bean\n  public ResourceBundleMessageSource emailMessageSource() {\n    ResourceBundleMessageSource messageSource = new ResourceBundleMessageSource();\n    messageSource.setBasename(localizationProperties.getPath());\n    messageSource.setDefaultLocale(Locale.ENGLISH);\n    messageSource.setDefaultEncoding(localizationProperties.getEncoding());\n    messageSource.setCacheSeconds(localizationProperties.getCacheSeconds());\n    return messageSource;\n  }","location":{"start":22,"insert":22,"offset":" ","indent":2,"comment":null},"item_type":"method","length":9},{"id":"44273123-e868-d0be-894d-e0f0df3da630","ancestors":["5920ddab-c3a8-8190-4e40-c6a7519b0f47"],"type":"function","description":"creates a Spring Template Engine instance and configures it with a Thymeleaf Template Resolver and an Email Message Source for rendering emails.","params":[{"name":"emailMessageSource","type_name":"ResourceBundleMessageSource","description":"message source for email-related messages used by the SpringTemplateEngine.\n\n* `ResourceBundleMessageSource`: This interface represents a message source that retrieves message keys from a resource bundle. It provides access to messages in various formats, including HTML, XML, and YAML.","complex_type":true}],"returns":{"type_name":"instance","description":"a Spring Template Engine instance with Thymeleaf-specific settings and a message source for email messages.\n\n* The SpringTemplateEngine is initialized with a new instance.\n* A template resolver is set to `thymeleafTemplateResolver()`.\n* A message source for emails is set to `emailMessageSource`.","complex_type":true},"usage":{"language":"java","code":"@Bean\n  public SpringTemplateEngine thymeleafTemplateEngine(ResourceBundleMessageSource emailMessageSource) {\n    return new ThymeleafTemplateEngine(emailMessageSource);\n  }\n","description":""},"name":"thymeleafTemplateEngine","code":"@Bean\n  public SpringTemplateEngine thymeleafTemplateEngine(ResourceBundleMessageSource emailMessageSource) {\n    SpringTemplateEngine templateEngine = new SpringTemplateEngine();\n    templateEngine.setTemplateResolver(thymeleafTemplateResolver());\n    templateEngine.setTemplateEngineMessageSource(emailMessageSource);\n    return templateEngine;\n  }","location":{"start":32,"insert":32,"offset":" ","indent":2,"comment":null},"item_type":"method","length":7},{"id":"ddfde6cc-950c-ceb3-0c4a-00d00a370034","ancestors":["5920ddab-c3a8-8190-4e40-c6a7519b0f47"],"type":"function","description":"creates a `ITemplateResolver` instance that sets the prefix, suffix, mode, encoding and caching properties for Thymeleaf template resolution.","params":[],"returns":{"type_name":"ITemplateResolver","description":"a `ITemplateResolver` instance with customized configuration settings for Thymeleaf template resolution.\n\n* `templateProperties`: This is an instance of `ITemplateProperties`, which contains information about the Thymeleaf template, such as its path, format, mode, and encoding.\n* `prefix`: This is a string that represents the prefix of the template path. If the template path ends with the file separator, this property is set to the template path itself. Otherwise, it is set to the template path concatenated with the file separator.\n* `suffix`: This is a string that represents the suffix of the template path. It contains the format of the template.\n* `templateMode`: This is an integer that represents the mode of the template. It can be one of the following values: `ITemplateMode.NONE`, `ITemplateMode.HTML`, or `ITemplateMode.XML`.\n* `characterEncoding`: This is a string that represents the character encoding of the template. It can be any of the supported encodings, such as `UTF-8`, `ISO-8859-1`, etc.\n* `cacheable`: This is a boolean value that indicates whether the template should be cached or not. If set to `true`, the template will be cached; otherwise, it will not be cached.","complex_type":true},"usage":{"language":"java","code":"private ITemplateResolver thymeleafTemplateResolver() {\n    ClassLoaderTemplateResolver templateResolver = new ClassLoaderTemplateResolver();\n\n    String templatePath = templateProperties.getPath();\n    String fileSeparator = System.getProperty(\"file.separator\");\n    templateResolver.setPrefix(templatePath.endsWith(fileSeparator) ? templatePath : templatePath + fileSeparator);\n\n    templateResolver.setSuffix(templateProperties.getFormat());\n    templateResolver.setTemplateMode(templateProperties.getMode());\n    templateResolver.setCharacterEncoding(templateProperties.getEncoding());\n    templateResolver.setCacheable(templateProperties.isCache());\n    return templateResolver;\n  }\n","description":""},"name":"thymeleafTemplateResolver","code":"private ITemplateResolver thymeleafTemplateResolver() {\n    ClassLoaderTemplateResolver templateResolver = new ClassLoaderTemplateResolver();\n\n    String templatePath = templateProperties.getPath();\n    String fileSeparator = System.getProperty(\"file.separator\");\n    templateResolver.setPrefix(templatePath.endsWith(fileSeparator) ? templatePath : templatePath + fileSeparator);\n\n    templateResolver.setSuffix(templateProperties.getFormat());\n    templateResolver.setTemplateMode(templateProperties.getMode());\n    templateResolver.setCharacterEncoding(templateProperties.getEncoding());\n    templateResolver.setCacheable(templateProperties.isCache());\n    return templateResolver;\n  }","location":{"start":40,"insert":40,"offset":" ","indent":2,"comment":null},"item_type":"method","length":13}]}}}
{"name":"CorsConfig.java","path":"service/src/main/java/com/myhome/configuration/CorsConfig.java","content":{"structured":{"description":"A `CorsConfig` class that configures CORS (Cross-Origin Resource Sharing) settings for a Spring MVC web application. The configuration adds CORS mapping for all URLs and allows origins in the list of `allowedOrigins`, methods in the list of `allowedMethods`, headers in the list of `allowedHeaders`, and credentials in the `allowCredentials` parameter.","items":[{"id":"8bcc312b-bb71-1a83-0349-8e04fd45346f","ancestors":[],"type":"function","description":"is a Spring Configuration class that enables Cross-Origin Resource Sharing (CORS) for a web application. It defines allowed origins, methods, headers, and credentials for CORS mappings. The class also provides a bean for the WebMvcConfigurer interface to add CORS mappings to the registry.","name":"CorsConfig","code":"@Configuration\npublic class CorsConfig {\n\n  @Value(\"${server.cors.allowedOrigins}\")\n  private String[] allowedOrigins;\n\n  @Bean\n  public WebMvcConfigurer corsConfigurer() {\n    return new WebMvcConfigurer() {\n      @Override\n      public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n            .allowedOrigins(allowedOrigins)\n            .allowedMethods(\"*\")\n            .allowedHeaders(\"*\")\n            .exposedHeaders(\"token\", \"userId\")\n            .allowCredentials(true);\n      }\n    };\n  }\n}","location":{"start":25,"insert":25,"offset":" ","indent":0,"comment":null},"item_type":"class","length":21},{"id":"c038d564-9379-1a93-4345-da255071d7a7","ancestors":["8bcc312b-bb71-1a83-0349-8e04fd45346f"],"type":"function","description":"configure CORS settings for a web application, allowing requests from specified origins and methods, as well as specifying which headers to expose and whether credentials should be included.","params":[],"returns":{"type_name":"instance","description":"a configuration for CORS (Cross-Origin Resource Sharing) that allows requests from any origin to access resources from the server.\n\n* `registry`: The `CorsRegistry` object that is being modified with the CORS mappings.\n* `addCorsMappings()`: The method being called on the `registry` object to add CORS mappings.\n* `allowedOrigins`: An array of strings containing the allowed origins for the CORS mappings.\n* `allowedMethods`: An array of strings containing the allowed HTTP methods for the CORS mappings.\n* `allowedHeaders`: An array of strings containing the allowed headers for the CORS mappings.\n* `exposedHeaders`: An array of strings containing the headers that are exposed to the client.\n* `allowCredentials()`: A boolean value indicating whether credentials (e.g., cookies, authorization) should be allowed for the CORS mappings.","complex_type":true},"usage":{"language":"java","code":"@Bean\npublic WebMvcConfigurer corsConfigurer() {\n    return new WebMvcConfigurer() {\n        @Override\n        public void addCorsMappings(CorsRegistry registry) {\n            registry.addMapping(\"/**\")\n                    .allowedOrigins(allowedOrigins)\n                    .allowedMethods(\"*\")\n                    .allowedHeaders(\"*\")\n                    .exposedHeaders(\"token\", \"userId\")\n                    .allowCredentials(true);\n        }\n    };\n}\n","description":""},"name":"corsConfigurer","code":"@Bean\n  public WebMvcConfigurer corsConfigurer() {\n    return new WebMvcConfigurer() {\n      @Override\n      public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n            .allowedOrigins(allowedOrigins)\n            .allowedMethods(\"*\")\n            .allowedHeaders(\"*\")\n            .exposedHeaders(\"token\", \"userId\")\n            .allowCredentials(true);\n      }\n    };\n  }","location":{"start":31,"insert":31,"offset":" ","indent":2,"comment":null},"item_type":"method","length":14},{"id":"d25f33aa-d071-1a91-db4a-e2c094a646ca","ancestors":["8bcc312b-bb71-1a83-0349-8e04fd45346f","c038d564-9379-1a93-4345-da255071d7a7"],"type":"function","description":"adds CORS mappings to a registry, allowing requests from any origin and specifying allowed methods, headers, and credentials.","params":[{"name":"registry","type_name":"CorsRegistry","description":"Cors registry that the method adds mappings to.\n\n* `registry`: This is an instance of `CorsRegistry`, which represents the set of CORS mappings for a server.\n* `addMapping`: This method adds a new mapping to the existing set of mappings in `registry`. The mapping includes the URL pattern `\"**\"`, which means that the mapping applies to all URLs.\n* `allowedOrigins`: An array of allowed origins, which specifies the domains or subdomains that are allowed to make CORS requests to the server.\n* `allowedMethods`: An array of allowed HTTP methods, which specifies the methods that are allowed to be used in CORS requests to the server. The value `\"*\" means that all methods are allowed.\n* `allowedHeaders`: An array of allowed headers, which specifies the headers that can be included in CORS responses from the server. The value `\"*\" means that all headers are allowed.\n* `exposedHeaders`: An array of exposed headers, which specifies the headers that can be included in CORS responses from the server and are visible to clients. The values `\"token\"` and `\"userId\"` indicate that these two specific headers are exposed.\n* `allowCredentials`: A boolean value that indicates whether CORS requests with credentials (such as cookies or authentication tokens) are allowed.","complex_type":true}],"usage":{"language":"java","code":"@Override\npublic void addCorsMappings(CorsRegistry registry) {\n    // Allows the client to perform requests from anywhere\n    // Allows all methods to be used, including GET, POST, PUT, DELETE\n    // Allowing any headers, including the ones we expose in exposedHeaders\n    // Sets allowCredentials to true, allowing the browser to send credentials with requests\n    registry.addMapping(\"/**\")\n        .allowedOrigins(allowedOrigins)\n        .allowedMethods(\"*\")\n        .allowedHeaders(\"*\")\n        .exposedHeaders(\"token\", \"userId\")\n        .allowCredentials(true);\n}\n","description":""},"name":"addCorsMappings","code":"@Override\n      public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n            .allowedOrigins(allowedOrigins)\n            .allowedMethods(\"*\")\n            .allowedHeaders(\"*\")\n            .exposedHeaders(\"token\", \"userId\")\n            .allowCredentials(true);\n      }","location":{"start":34,"insert":34,"offset":" ","indent":6,"comment":null},"item_type":"method","length":9}]}}}
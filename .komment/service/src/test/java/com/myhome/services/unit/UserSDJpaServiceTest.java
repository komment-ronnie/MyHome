{"name":"UserSDJpaServiceTest.java","path":"service/src/test/java/com/myhome/services/unit/UserSDJpaServiceTest.java","content":{"structured":{"description":"","items":[{"id":"077e8f12-ac31-4484-979a-ee493bbcfddd","ancestors":[],"type":"function","name":"getUserFromDto","location":{"offset":" ","indent":2,"insert":570,"start":570},"returns":"User","params":[{"name":"request","type":"UserDto"}],"code":"private User getUserFromDto(UserDto request) {\n    return new User(\n        request.getName(),\n        request.getUserId(),\n        request.getEmail(),\n        false,\n        request.getEncryptedPassword(),\n        new HashSet<>(),\n        new HashSet<>()\n    );\n  }","skip":false,"length":11,"comment":{"description":"creates a `User` object from a provided `UserDto` instance, setting its name, ID, email, and password fields. It also initializes additional fields with default values.","params":[{"name":"request","type":"UserDto","description":"`UserDto` object passed to the function, providing the necessary data to create a new `User` instance."}],"returns":{"type":"User","description":"a `User` object with name, ID, email, and other properties."}}},{"id":"d6d95956-30d2-41c1-a7f7-8ca8ed0dc5cf","ancestors":[],"type":"function","name":"getUserSecurityToken","location":{"offset":" ","indent":2,"insert":582,"start":582},"returns":"SecurityToken","params":[{"name":"user","type":"User"},{"name":"tokenType","type":"SecurityTokenType"}],"code":"private SecurityToken getUserSecurityToken(User user, SecurityTokenType tokenType) {\n    return user.getUserTokens()\n        .stream()\n        .filter(token -> token.getTokenType() == tokenType)\n        .findFirst()\n        .orElse(null);\n  }","skip":false,"length":7,"comment":{"description":"retrieves a security token associated with a user based on its type, filtering and finding the token in the user's token collection if it exists.","params":[{"name":"user","type":"User","description":"User object whose user tokens will be searched for in the getUserTokens() stream."},{"name":"tokenType","type":"SecurityTokenType","description":"type of security token that the function is searching for, and it determines the filter criteria applied to the user's token collection when searching for the matching token."}],"returns":{"type":"SecurityToken","description":"a `SecurityToken` object representing the user's security token of the specified type, or `null` if no such token exists."}}},{"id":"e495b70e-6245-4d2b-a0c2-951bbfc4dd86","ancestors":[],"type":"function","name":"getSecurityToken","location":{"offset":" ","indent":2,"insert":607,"start":607},"returns":"SecurityToken","params":[{"name":"tokenType","type":"SecurityTokenType"},{"name":"lifetime","type":"Duration"},{"name":"token","type":"String"},{"name":"user","type":"User"}],"code":"private SecurityToken getSecurityToken(SecurityTokenType tokenType, Duration lifetime,\n      String token, User user) {\n    LocalDate expireDate = LocalDate.now().plusDays(lifetime.toDays());\n    return new SecurityToken(tokenType, token, LocalDate.now(), expireDate, false, user);\n  }","skip":false,"length":5,"comment":{"description":"generates a new security token with the specified type and lifetime, along with an expiration date and user information.","params":[{"name":"tokenType","type":"SecurityTokenType","description":"type of security token being generated, which determines the format and contents of the token."},{"name":"lifetime","type":"Duration","description":"duration of validity for the generated security token, which is calculated by adding the number of days represented by the `Duration` object to the current date."},{"name":"token","type":"String","description":"12-byte hexadecimal string that will be used as the security token value."},{"name":"user","type":"User","description":"user who is requesting the security token."}],"returns":{"type":"SecurityToken","description":"a `SecurityToken` object representing a security token with a specified type, token, and lifetime."}}},{"id":"93b6acab-d5ee-481f-923f-577b1da2fc93","ancestors":[],"type":"function","name":"getSecurityToken","location":{"offset":" ","indent":2,"insert":613,"start":613},"returns":"SecurityToken","params":[{"name":"tokenType","type":"SecurityTokenType"},{"name":"token","type":"String"},{"name":"user","type":"User"}],"code":"private SecurityToken getSecurityToken(SecurityTokenType tokenType, String token, User user) {\n    LocalDate expireDate = LocalDate.now().plusDays(Duration.ofDays(1).toDays());\n    return new SecurityToken(tokenType, token, LocalDate.now(), expireDate, false, user);\n  }","skip":false,"length":4,"comment":{"description":"creates a new security token instance with the specified `tokenType`, `token`, and `user`. The `expireDate` is set to the current date plus one day, indicating that the token will expire in one day.","params":[{"name":"tokenType","type":"SecurityTokenType","description":"type of security token being generated, which determines its properties and behavior."},{"name":"token","type":"String","description":"16-digit alphanumeric security token that is used to authenticate the user."},{"name":"user","type":"User","description":"user who owns the security token being generated."}],"returns":{"type":"SecurityToken","description":"a new security token instance with specified token type and token value, expiration date, and other properties."}}}]}}}
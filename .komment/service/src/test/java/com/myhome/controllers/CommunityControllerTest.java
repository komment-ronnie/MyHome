{"name":"CommunityControllerTest.java","path":"service/src/test/java/com/myhome/controllers/CommunityControllerTest.java","content":{"structured":{"description":"","items":[{"id":"61a48a25-3d2f-4422-a00f-d420b3a1a5a7","ancestors":[],"type":"function","name":"createTestCommunityHouse","location":{"offset":" ","indent":2,"insert":107,"start":107},"returns":"CommunityHouse","params":[{"name":"community","type":"Community"}],"code":"private CommunityHouse createTestCommunityHouse(Community community) {\n    return new CommunityHouse(community, COMMUNITY_HOUSE_NAME, COMMUNITY_HOUSE_ID, new HashSet<>(),\n        new HashSet<>());\n  }","skip":false,"length":4,"comment":{"description":"creates a new instance of `CommunityHouse`, populated with data from the given `Community` object, and returns it.","params":[{"name":"community","type":"Community","description":"Community object that the function will create a test instance of."}],"returns":{"type":"CommunityHouse","description":"a new `CommunityHouse` instance representing the given community with a unique name and ID."}}},{"id":"5349b626-a4c9-4614-b588-1cb6ed360362","ancestors":[],"type":"function","name":"getMockCommunity","location":{"offset":" ","indent":2,"insert":582,"start":582},"returns":"Community","params":[{"name":"admins","type":"Set<User>"}],"code":"private Community getMockCommunity(Set<User> admins) {\n    Community community =\n        new Community(admins, new HashSet<>(), COMMUNITY_NAME, COMMUNITY_ID,\n            COMMUNITY_DISTRICT, new HashSet<>());\n    User admin = new User(COMMUNITY_ADMIN_NAME, COMMUNITY_ADMIN_ID, COMMUNITY_ADMIN_EMAIL, true,\n        COMMUNITY_ADMIN_PASSWORD, new HashSet<>(), new HashSet<>());\n    community.getAdmins().add(admin);\n    admin.getCommunities().add(community);\n\n    CommunityHouse communityHouse = getMockCommunityHouse();\n    communityHouse.setCommunity(community);\n    community.getHouses().add(communityHouse);\n\n    return community;\n  }","skip":false,"length":15,"comment":{"description":"creates a new `Community` object with a set of admins, a name, ID, district, and a house, and then adds it to the community's list of admins and houses.","params":[{"name":"admins","type":"Set<User>","description":"set of users who will be administrators for the generated Community, and it is used to populate the Community's admin list."}],"returns":{"type":"Community","description":"a mock Community object containing admins and houses."}}}]}}}